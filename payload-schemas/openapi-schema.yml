openapi: 3.1.0
info:
  title: webhooks
  version: 1.0.0
components:
  schemas:
    check_run$completed:
      type: object
      required:
        - action
        - check_run
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - completed
        check_run:
          description: The
            [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).
          type: object
          required:
            - id
            - head_sha
            - external_id
            - url
            - html_url
            - status
            - conclusion
            - started_at
            - completed_at
            - output
            - name
            - check_suite
            - app
            - pull_requests
          properties:
            id:
              type: integer
              description: The id of the check.
            node_id:
              type: string
            head_sha:
              type: string
              description: The SHA of the commit that is being checked.
            external_id:
              type: string
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            details_url:
              type: string
              format: uri
            status:
              type: string
              enum:
                - completed
              description: The current status of the check run. Can be `queued`,
                `in_progress`, or `completed`.
            conclusion:
              type:
                - string
                - "null"
              enum:
                - success
                - failure
                - neutral
                - cancelled
                - timed_out
                - action_required
                - stale
                - skipped
                - null
              description: The result of the completed check run. Can be one of `success`,
                `failure`, `neutral`, `cancelled`, `timed_out`,
                `action_required` or `stale`. This value will be `null` until
                the check run has completed.
            started_at:
              type: string
              description: "The time that the check run began. This is a timestamp in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            completed_at:
              type: string
              description: "The time the check completed. This is a timestamp in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            output:
              type: object
              required:
                - summary
                - text
                - annotations_count
                - annotations_url
              properties:
                title:
                  type:
                    - string
                    - "null"
                summary:
                  type:
                    - string
                    - "null"
                text:
                  type:
                    - string
                    - "null"
                annotations_count:
                  type: integer
                annotations_url:
                  type: string
                  format: uri
              additionalProperties: false
            name:
              type: string
              description: The name of the check run.
            check_suite:
              type: object
              required:
                - id
                - head_branch
                - head_sha
                - status
                - conclusion
                - url
                - before
                - after
                - pull_requests
                - app
                - created_at
                - updated_at
              properties:
                id:
                  type: integer
                  description: The id of the check suite that this check run is part of.
                node_id:
                  type: string
                head_branch:
                  type:
                    - string
                    - "null"
                head_sha:
                  type: string
                  description: The SHA of the head commit that is being checked.
                status:
                  type: string
                  enum:
                    - in_progress
                    - completed
                    - queued
                conclusion:
                  type:
                    - string
                    - "null"
                  enum:
                    - success
                    - failure
                    - neutral
                    - cancelled
                    - timed_out
                    - action_required
                    - stale
                    - null
                url:
                  type: string
                  format: uri
                before:
                  type:
                    - string
                    - "null"
                after:
                  type:
                    - string
                    - "null"
                pull_requests:
                  description: An array of pull requests that match this check suite. A pull
                    request matches a check suite if they have the same
                    `head_sha` and `head_branch`. When the check suite's
                    `head_branch` is in a forked repository it will be `null`
                    and the `pull_requests` array will be empty.
                  type: array
                  items:
                    $ref: "#/components/schemas/check-run-pull-request"
                app:
                  $ref: "#/components/schemas/app"
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
              additionalProperties: false
            app:
              $ref: "#/components/schemas/app"
            pull_requests:
              type: array
              items:
                $ref: "#/components/schemas/check-run-pull-request"
            deployment:
              $ref: "#/components/schemas/check-run-deployment"
          additionalProperties: false
        requested_action:
          type:
            - object
            - "null"
          description: The action requested by the user.
          properties:
            identifier:
              type: string
              description: The integrator reference of the action requested by the user.
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: check_run completed event
    check_run$created:
      type: object
      required:
        - action
        - check_run
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        check_run:
          type: object
          description: The
            [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).
          required:
            - id
            - head_sha
            - external_id
            - url
            - html_url
            - status
            - conclusion
            - started_at
            - completed_at
            - output
            - name
            - check_suite
            - app
            - pull_requests
          properties:
            id:
              type: integer
              description: The id of the check.
            node_id:
              type: string
            head_sha:
              type: string
              description: The SHA of the commit that is being checked.
            external_id:
              type: string
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            details_url:
              type: string
              format: uri
            status:
              type: string
              enum:
                - queued
                - in_progress
                - completed
              description: The current status of the check run. Can be `queued`,
                `in_progress`, or `completed`.
            conclusion:
              type:
                - string
                - "null"
              enum:
                - success
                - failure
                - neutral
                - cancelled
                - timed_out
                - action_required
                - stale
                - skipped
                - null
              description: The result of the completed check run. Can be one of `success`,
                `failure`, `neutral`, `cancelled`, `timed_out`,
                `action_required` or `stale`. This value will be `null` until
                the check run has completed.
            started_at:
              type: string
              description: "The time that the check run began. This is a timestamp in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            completed_at:
              type:
                - string
                - "null"
              description: "The time the check completed. This is a timestamp in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            output:
              type: object
              required:
                - summary
                - text
                - annotations_count
                - annotations_url
              properties:
                title:
                  type:
                    - string
                    - "null"
                summary:
                  type:
                    - string
                    - "null"
                text:
                  type:
                    - string
                    - "null"
                annotations_count:
                  type: integer
                annotations_url:
                  type: string
                  format: uri
              additionalProperties: false
            name:
              type: string
              description: The name of the check run.
            check_suite:
              type: object
              required:
                - id
                - head_branch
                - head_sha
                - status
                - conclusion
                - url
                - before
                - after
                - pull_requests
                - app
                - created_at
                - updated_at
              properties:
                id:
                  type: integer
                  description: The id of the check suite that this check run is part of.
                node_id:
                  type: string
                head_branch:
                  type:
                    - string
                    - "null"
                head_sha:
                  type: string
                  description: The SHA of the head commit that is being checked.
                status:
                  type: string
                  enum:
                    - queued
                    - in_progress
                    - completed
                conclusion:
                  type:
                    - string
                    - "null"
                  enum:
                    - success
                    - failure
                    - neutral
                    - cancelled
                    - timed_out
                    - action_required
                    - stale
                    - null
                url:
                  type: string
                  format: uri
                before:
                  type:
                    - string
                    - "null"
                after:
                  type:
                    - string
                    - "null"
                pull_requests:
                  type: array
                  description: An array of pull requests that match this check suite. A pull
                    request matches a check suite if they have the same
                    `head_sha` and `head_branch`. When the check suite's
                    `head_branch` is in a forked repository it will be `null`
                    and the `pull_requests` array will be empty.
                  items:
                    $ref: "#/components/schemas/check-run-pull-request"
                app:
                  $ref: "#/components/schemas/app"
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
              additionalProperties: false
            app:
              $ref: "#/components/schemas/app"
            pull_requests:
              type: array
              items:
                $ref: "#/components/schemas/check-run-pull-request"
            deployment:
              $ref: "#/components/schemas/check-run-deployment"
          additionalProperties: false
        requested_action:
          type:
            - object
            - "null"
          description: The action requested by the user.
          properties:
            identifier:
              type: string
              description: The integrator reference of the action requested by the user.
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: check_run created event
    check_run$requested_action:
      type: object
      required:
        - action
        - check_run
        - requested_action
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - requested_action
        check_run:
          type: object
          description: The
            [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).
          required:
            - id
            - head_sha
            - external_id
            - url
            - html_url
            - status
            - conclusion
            - started_at
            - completed_at
            - output
            - name
            - check_suite
            - app
            - pull_requests
          properties:
            id:
              type: integer
              description: The id of the check.
            node_id:
              type: string
            head_sha:
              type: string
              description: The SHA of the commit that is being checked.
            external_id:
              type: string
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            details_url:
              type: string
              format: uri
            status:
              type: string
              enum:
                - queued
                - in_progress
                - completed
              description: The current status of the check run. Can be `queued`,
                `in_progress`, or `completed`.
            conclusion:
              type:
                - string
                - "null"
              enum:
                - success
                - failure
                - neutral
                - cancelled
                - timed_out
                - action_required
                - stale
                - skipped
                - null
              description: The result of the completed check run. Can be one of `success`,
                `failure`, `neutral`, `cancelled`, `timed_out`,
                `action_required` or `stale`. This value will be `null` until
                the check run has completed.
            started_at:
              type: string
              description: "The time that the check run began. This is a timestamp in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            completed_at:
              type:
                - string
                - "null"
              description: "The time the check completed. This is a timestamp in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            output:
              type: object
              required:
                - summary
                - text
                - annotations_count
                - annotations_url
              properties:
                title:
                  type:
                    - string
                    - "null"
                summary:
                  type:
                    - string
                    - "null"
                text:
                  type:
                    - string
                    - "null"
                annotations_count:
                  type: integer
                annotations_url:
                  type: string
                  format: uri
              additionalProperties: false
            name:
              type: string
              description: The name of the check run.
            check_suite:
              type: object
              required:
                - id
                - head_branch
                - head_sha
                - status
                - conclusion
                - url
                - before
                - after
                - pull_requests
                - app
                - created_at
                - updated_at
              properties:
                id:
                  type: integer
                  description: The id of the check suite that this check run is part of.
                node_id:
                  type: string
                head_branch:
                  type:
                    - string
                    - "null"
                head_sha:
                  type: string
                  description: The SHA of the head commit that is being checked.
                status:
                  type: string
                  enum:
                    - queued
                    - in_progress
                    - completed
                conclusion:
                  type:
                    - string
                    - "null"
                  enum:
                    - success
                    - failure
                    - neutral
                    - cancelled
                    - timed_out
                    - action_required
                    - stale
                    - null
                url:
                  type: string
                  format: uri
                before:
                  type:
                    - string
                    - "null"
                after:
                  type:
                    - string
                    - "null"
                pull_requests:
                  type: array
                  description: An array of pull requests that match this check suite. A pull
                    request matches a check suite if they have the same
                    `head_sha` and `head_branch`. When the check suite's
                    `head_branch` is in a forked repository it will be `null`
                    and the `pull_requests` array will be empty.
                  items:
                    $ref: "#/components/schemas/check-run-pull-request"
                app:
                  $ref: "#/components/schemas/app"
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
              additionalProperties: false
            app:
              $ref: "#/components/schemas/app"
            pull_requests:
              type: array
              items:
                $ref: "#/components/schemas/check-run-pull-request"
            deployment:
              $ref: "#/components/schemas/check-run-deployment"
          additionalProperties: false
        requested_action:
          type: object
          description: The action requested by the user.
          properties:
            identifier:
              type: string
              description: The integrator reference of the action requested by the user.
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: check_run requested_action event
    check_run$rerequested:
      type: object
      required:
        - action
        - check_run
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - rerequested
        check_run:
          type: object
          description: The
            [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).
          required:
            - id
            - head_sha
            - external_id
            - url
            - html_url
            - status
            - conclusion
            - started_at
            - completed_at
            - output
            - name
            - check_suite
            - app
            - pull_requests
          properties:
            id:
              type: integer
              description: The id of the check.
            node_id:
              type: string
            head_sha:
              type: string
              description: The SHA of the commit that is being checked.
            external_id:
              type: string
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            details_url:
              type: string
              format: uri
            status:
              type: string
              enum:
                - completed
              description: The phase of the lifecycle that the check is currently in.
            conclusion:
              type:
                - string
                - "null"
              enum:
                - success
                - failure
                - neutral
                - cancelled
                - timed_out
                - action_required
                - stale
                - skipped
                - null
              description: The result of the completed check run. Can be one of `success`,
                `failure`, `neutral`, `cancelled`, `timed_out`,
                `action_required` or `stale`. This value will be `null` until
                the check run has `completed`.
            started_at:
              type: string
              description: "The time that the check run began. This is a timestamp in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            completed_at:
              type: string
              description: "The time the check completed. This is a timestamp in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            output:
              type: object
              required:
                - summary
                - text
                - annotations_count
                - annotations_url
              properties:
                title:
                  type:
                    - string
                    - "null"
                summary:
                  type:
                    - string
                    - "null"
                text:
                  type:
                    - string
                    - "null"
                annotations_count:
                  type: integer
                annotations_url:
                  type: string
                  format: uri
              additionalProperties: false
            name:
              type: string
              description: The name of the check.
            check_suite:
              type: object
              required:
                - id
                - head_branch
                - head_sha
                - status
                - conclusion
                - url
                - before
                - after
                - pull_requests
                - app
                - created_at
                - updated_at
              properties:
                id:
                  type: integer
                  description: The id of the check suite that this check run is part of.
                node_id:
                  type: string
                head_branch:
                  type:
                    - string
                    - "null"
                head_sha:
                  type: string
                  description: The SHA of the head commit that is being checked.
                status:
                  type: string
                  enum:
                    - completed
                conclusion:
                  type: string
                  enum:
                    - success
                    - failure
                    - neutral
                    - cancelled
                    - timed_out
                    - action_required
                    - stale
                url:
                  type: string
                  format: uri
                before:
                  type:
                    - string
                    - "null"
                after:
                  type:
                    - string
                    - "null"
                pull_requests:
                  description: An array of pull requests that match this check suite. A pull
                    request matches a check suite if they have the same
                    `head_sha` and `head_branch`. When the check suite's
                    `head_branch` is in a forked repository it will be `null`
                    and the `pull_requests` array will be empty.
                  type: array
                  items:
                    $ref: "#/components/schemas/check-run-pull-request"
                app:
                  $ref: "#/components/schemas/app"
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
              additionalProperties: false
            app:
              $ref: "#/components/schemas/app"
            pull_requests:
              type: array
              items:
                $ref: "#/components/schemas/check-run-pull-request"
            deployment:
              $ref: "#/components/schemas/check-run-deployment"
          additionalProperties: false
        requested_action:
          type:
            - object
            - "null"
          description: The action requested by the user.
          properties:
            identifier:
              type: string
              description: The integrator reference of the action requested by the user.
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: check_run rerequested event
    check_run_event:
      oneOf:
        - $ref: "#/components/schemas/check_run$completed"
        - $ref: "#/components/schemas/check_run$created"
        - $ref: "#/components/schemas/check_run$requested_action"
        - $ref: "#/components/schemas/check_run$rerequested"
      discriminator:
        propertyName: action
    check_suite$completed:
      type: object
      required:
        - action
        - check_suite
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - completed
        check_suite:
          type: object
          description: The
            [check_suite](https://docs.github.com/en/rest/reference/checks#suites).
          required:
            - id
            - node_id
            - head_branch
            - head_sha
            - status
            - conclusion
            - url
            - before
            - after
            - pull_requests
            - app
            - created_at
            - updated_at
            - latest_check_runs_count
            - check_runs_url
            - head_commit
          properties:
            id:
              type: integer
            node_id:
              type: string
            head_branch:
              type:
                - string
                - "null"
              description: The head branch name the changes are on.
            head_sha:
              type: string
              description: The SHA of the head commit that is being checked.
            status:
              type:
                - string
                - "null"
              enum:
                - requested
                - in_progress
                - completed
                - queued
                - null
              description: The summary status for all check runs that are part of the check
                suite. Can be `requested`, `in_progress`, or `completed`.
            conclusion:
              type:
                - string
                - "null"
              enum:
                - success
                - failure
                - neutral
                - cancelled
                - timed_out
                - action_required
                - stale
                - null
              description: The summary conclusion for all check runs that are part of the
                check suite. Can be one of `success`, `failure`, `neutral`,
                `cancelled`, `timed_out`, `action_required` or `stale`. This
                value will be `null` until the check run has `completed`.
            url:
              type: string
              format: uri
              description: URL that points to the check suite API resource.
            before:
              type:
                - string
                - "null"
            after:
              type: string
            pull_requests:
              type: array
              items:
                $ref: "#/components/schemas/check-run-pull-request"
              description: An array of pull requests that match this check suite. A pull
                request matches a check suite if they have the same `head_sha`
                and `head_branch`. When the check suite's `head_branch` is in a
                forked repository it will be `null` and the `pull_requests`
                array will be empty.
            app:
              $ref: "#/components/schemas/app"
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            latest_check_runs_count:
              type: integer
            check_runs_url:
              type: string
              format: uri
            head_commit:
              $ref: "#/components/schemas/commit-simple"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: check_suite completed event
    check_suite$requested:
      type: object
      required:
        - action
        - check_suite
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - requested
        check_suite:
          type: object
          description: The
            [check_suite](https://docs.github.com/en/rest/reference/checks#suites).
          required:
            - id
            - node_id
            - head_branch
            - head_sha
            - status
            - conclusion
            - url
            - before
            - after
            - pull_requests
            - app
            - created_at
            - updated_at
            - latest_check_runs_count
            - check_runs_url
            - head_commit
          properties:
            id:
              type: integer
            node_id:
              type: string
            head_branch:
              type:
                - string
                - "null"
              description: The head branch name the changes are on.
            head_sha:
              type: string
              description: The SHA of the head commit that is being checked.
            status:
              type:
                - string
                - "null"
              enum:
                - requested
                - in_progress
                - completed
                - queued
                - null
              description: The summary status for all check runs that are part of the check
                suite. Can be `requested`, `in_progress`, or `completed`.
            conclusion:
              description: The summary conclusion for all check runs that are part of the
                check suite. Can be one of `success`, `failure`,` neutral`,
                `cancelled`, `timed_out`, `action_required` or `stale`. This
                value will be `null` until the check run has completed.
              type:
                - string
                - "null"
              enum:
                - success
                - failure
                - neutral
                - cancelled
                - timed_out
                - action_required
                - stale
                - null
            url:
              type: string
              format: uri
              description: URL that points to the check suite API resource.
            before:
              type:
                - string
                - "null"
            after:
              type: string
            pull_requests:
              type: array
              items:
                $ref: "#/components/schemas/check-run-pull-request"
              description: An array of pull requests that match this check suite. A pull
                request matches a check suite if they have the same `head_sha`
                and `head_branch`. When the check suite's `head_branch` is in a
                forked repository it will be `null` and the `pull_requests`
                array will be empty.
            app:
              $ref: "#/components/schemas/app"
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            latest_check_runs_count:
              type: integer
            check_runs_url:
              type: string
              format: uri
            head_commit:
              $ref: "#/components/schemas/commit-simple"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: check_suite requested event
    check_suite$rerequested:
      type: object
      required:
        - action
        - check_suite
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - rerequested
        check_suite:
          type: object
          description: The
            [check_suite](https://docs.github.com/en/rest/reference/checks#suites).
          required:
            - id
            - node_id
            - head_branch
            - head_sha
            - status
            - conclusion
            - url
            - before
            - after
            - pull_requests
            - app
            - created_at
            - updated_at
            - latest_check_runs_count
            - check_runs_url
            - head_commit
          properties:
            id:
              type: integer
            node_id:
              type: string
            head_branch:
              type:
                - string
                - "null"
              description: The head branch name the changes are on.
            head_sha:
              type: string
              description: The SHA of the head commit that is being checked.
            status:
              type:
                - string
                - "null"
              enum:
                - requested
                - in_progress
                - completed
                - queued
                - null
              description: The summary status for all check runs that are part of the check
                suite. Can be `requested`, `in_progress`, or `completed`.
            conclusion:
              type:
                - string
                - "null"
              description: The summary conclusion for all check runs that are part of the
                check suite. Can be one of `success`, `failure`,` neutral`,
                `cancelled`, `timed_out`, `action_required` or `stale`. This
                value will be `null` until the check run has completed.
              enum:
                - success
                - failure
                - neutral
                - cancelled
                - timed_out
                - action_required
                - stale
                - null
            url:
              type: string
              format: uri
              description: URL that points to the check suite API resource.
            before:
              type:
                - string
                - "null"
            after:
              type: string
            pull_requests:
              type: array
              items:
                $ref: "#/components/schemas/check-run-pull-request"
              description: An array of pull requests that match this check suite. A pull
                request matches a check suite if they have the same `head_sha`
                and `head_branch`. When the check suite's `head_branch` is in a
                forked repository it will be `null` and the `pull_requests`
                array will be empty.
            app:
              $ref: "#/components/schemas/app"
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            latest_check_runs_count:
              type: integer
            check_runs_url:
              type: string
              format: uri
            head_commit:
              $ref: "#/components/schemas/commit-simple"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: check_suite rerequested event
    check_suite_event:
      oneOf:
        - $ref: "#/components/schemas/check_suite$completed"
        - $ref: "#/components/schemas/check_suite$requested"
        - $ref: "#/components/schemas/check_suite$rerequested"
      discriminator:
        propertyName: action
    code_scanning_alert$appeared_in_branch:
      type: object
      required:
        - action
        - alert
        - ref
        - commit_oid
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - appeared_in_branch
        alert:
          type: object
          description: The code scanning alert involved in the event.
          required:
            - number
            - created_at
            - url
            - html_url
            - instances
            - state
            - dismissed_by
            - dismissed_at
            - dismissed_reason
            - rule
            - tool
          properties:
            number:
              type: integer
              description: The code scanning alert number.
            created_at:
              type: string
              format: date-time
              description: "The time that the alert was created in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ.`"
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
              description: The GitHub URL of the alert resource.
            instances:
              type: array
              items:
                $ref: "#/components/schemas/alert-instance"
            most_recent_instance:
              $ref: "#/components/schemas/alert-instance"
            state:
              type: string
              description: State of a code scanning alert.
              enum:
                - open
                - dismissed
                - fixed
            dismissed_by:
              oneOf:
                - $ref: "#/components/schemas/user"
                - type: "null"
            dismissed_at:
              type:
                - string
                - "null"
              format: date-time
              description: "The time that the alert was dismissed in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            dismissed_reason:
              type:
                - string
                - "null"
              enum:
                - false positive
                - won't fix
                - used in tests
                - null
              description: "The reason for dismissing or closing the alert. Can be one of:
                `false positive`, `won't fix`, and `used in tests`."
            rule:
              type: object
              required:
                - id
                - severity
                - description
              properties:
                id:
                  type: string
                  description: A unique identifier for the rule used to detect the alert.
                severity:
                  type:
                    - string
                    - "null"
                  enum:
                    - none
                    - note
                    - warning
                    - error
                    - null
                  description: The severity of the alert.
                description:
                  type: string
                  description: A short description of the rule used to detect the alert.
              additionalProperties: false
            tool:
              type: object
              required:
                - name
                - version
              properties:
                name:
                  type: string
                  description: The name of the tool used to generate the code scanning analysis
                    alert.
                version:
                  type:
                    - string
                    - "null"
                  description: The version of the tool used to detect the alert.
              additionalProperties: false
          additionalProperties: false
        ref:
          type: string
          description: The Git reference of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        commit_oid:
          type: string
          description: The commit SHA of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/github-org"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: code_scanning_alert appeared_in_branch event
    code_scanning_alert$closed_by_user:
      type: object
      required:
        - action
        - alert
        - ref
        - commit_oid
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - closed_by_user
        alert:
          type: object
          description: The code scanning alert involved in the event.
          required:
            - number
            - created_at
            - url
            - html_url
            - instances
            - state
            - dismissed_by
            - dismissed_at
            - dismissed_reason
            - rule
            - tool
          properties:
            number:
              type: integer
              description: The code scanning alert number.
            created_at:
              type: string
              format: date-time
              description: "The time that the alert was created in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ.`"
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
              description: The GitHub URL of the alert resource.
            instances:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/alert-instance"
                  - type: object
                    required:
                      - state
                    properties:
                      state:
                        type: string
                        enum:
                          - dismissed
                    tsAdditionalProperties: false
            most_recent_instance:
              $ref: "#/components/schemas/alert-instance"
            state:
              type: string
              description: State of a code scanning alert.
              enum:
                - dismissed
            dismissed_by:
              $ref: "#/components/schemas/user"
            dismissed_at:
              type: string
              format: date-time
              description: "The time that the alert was dismissed in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            dismissed_reason:
              type: string
              enum:
                - false positive
                - won't fix
                - used in tests
                - null
              description: "The reason for dismissing or closing the alert. Can be one of:
                `false positive`, `won't fix`, and `used in tests`."
            rule:
              type: object
              required:
                - id
                - severity
                - description
              properties:
                id:
                  type: string
                  description: A unique identifier for the rule used to detect the alert.
                severity:
                  type:
                    - string
                    - "null"
                  enum:
                    - none
                    - note
                    - warning
                    - error
                    - null
                  description: The severity of the alert.
                description:
                  type: string
                  description: A short description of the rule used to detect the alert.
                name:
                  type: string
                full_description:
                  type: string
                tags:
                  type: "null"
                help:
                  type: "null"
              additionalProperties: false
            tool:
              type: object
              required:
                - name
                - version
              properties:
                name:
                  type: string
                  description: The name of the tool used to generate the code scanning analysis
                    alert.
                version:
                  type:
                    - string
                    - "null"
                  description: The version of the tool used to detect the alert.
                guid:
                  type:
                    - string
                    - "null"
              additionalProperties: false
          additionalProperties: false
        ref:
          type: string
          description: The Git reference of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        commit_oid:
          type: string
          description: The commit SHA of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: code_scanning_alert closed_by_user event
    code_scanning_alert$created:
      type: object
      required:
        - action
        - alert
        - ref
        - commit_oid
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        alert:
          type: object
          description: The code scanning alert involved in the event.
          required:
            - number
            - created_at
            - url
            - html_url
            - instances
            - state
            - dismissed_by
            - dismissed_at
            - dismissed_reason
            - rule
            - tool
          properties:
            number:
              type: integer
              description: The code scanning alert number.
            created_at:
              type: string
              format: date-time
              description: "The time that the alert was created in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ.`"
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
              description: The GitHub URL of the alert resource.
            instances:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/alert-instance"
                  - type: object
                    required:
                      - state
                    properties:
                      state:
                        type: string
                        enum:
                          - open
                          - dismissed
                    tsAdditionalProperties: false
            most_recent_instance:
              $ref: "#/components/schemas/alert-instance"
            state:
              type: string
              description: State of a code scanning alert.
              enum:
                - open
                - dismissed
            dismissed_by:
              type: "null"
            dismissed_at:
              type: "null"
              description: "The time that the alert was dismissed in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            dismissed_reason:
              type: "null"
              description: "The reason for dismissing or closing the alert. Can be one of:
                `false positive`, `won't fix`, and `used in tests`."
            rule:
              type: object
              required:
                - id
                - severity
                - description
              properties:
                id:
                  type: string
                  description: A unique identifier for the rule used to detect the alert.
                severity:
                  type:
                    - string
                    - "null"
                  enum:
                    - none
                    - note
                    - warning
                    - error
                    - null
                  description: The severity of the alert.
                description:
                  type: string
                  description: A short description of the rule used to detect the alert.
                name:
                  type: string
                full_description:
                  type: string
                tags:
                  type: "null"
                help:
                  type: "null"
              additionalProperties: false
            tool:
              type: object
              required:
                - name
                - version
              properties:
                name:
                  type: string
                  description: The name of the tool used to generate the code scanning analysis
                    alert.
                version:
                  type:
                    - string
                    - "null"
                  description: The version of the tool used to detect the alert.
                guid:
                  type:
                    - string
                    - "null"
              additionalProperties: false
          additionalProperties: false
        ref:
          type: string
          description: The Git reference of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        commit_oid:
          type: string
          description: The commit SHA of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/github-org"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: code_scanning_alert created event
    code_scanning_alert$fixed:
      type: object
      required:
        - action
        - alert
        - ref
        - commit_oid
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - fixed
        alert:
          type: object
          description: The code scanning alert involved in the event.
          required:
            - number
            - created_at
            - url
            - html_url
            - instances
            - state
            - dismissed_by
            - dismissed_at
            - dismissed_reason
            - rule
            - tool
          properties:
            number:
              type: integer
              description: The code scanning alert number.
            created_at:
              type: string
              format: date-time
              description: "The time that the alert was created in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ.`"
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
              description: The GitHub URL of the alert resource.
            instances:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/alert-instance"
                  - type: object
                    required:
                      - state
                    properties:
                      state:
                        type: string
                        enum:
                          - fixed
                    tsAdditionalProperties: false
            state:
              type: string
              description: State of a code scanning alert.
              enum:
                - fixed
            dismissed_by:
              oneOf:
                - $ref: "#/components/schemas/user"
                - type: "null"
            dismissed_at:
              type:
                - string
                - "null"
              format: date-time
              description: "The time that the alert was dismissed in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            dismissed_reason:
              type:
                - string
                - "null"
              enum:
                - false positive
                - won't fix
                - used in tests
                - null
              description: "The reason for dismissing or closing the alert. Can be one of:
                `false positive`, `won't fix`, and `used in tests`."
            rule:
              type: object
              required:
                - id
                - severity
                - description
              properties:
                id:
                  type: string
                  description: A unique identifier for the rule used to detect the alert.
                severity:
                  type:
                    - string
                    - "null"
                  enum:
                    - none
                    - note
                    - warning
                    - error
                    - null
                  description: The severity of the alert.
                description:
                  type: string
                  description: A short description of the rule used to detect the alert.
                name:
                  type: string
                full_description:
                  type: string
                tags:
                  type: "null"
                help:
                  type: "null"
              additionalProperties: false
            tool:
              type: object
              required:
                - name
                - version
              properties:
                name:
                  type: string
                  description: The name of the tool used to generate the code scanning analysis
                    alert.
                version:
                  type:
                    - string
                    - "null"
                  description: The version of the tool used to detect the alert.
                guid:
                  type:
                    - string
                    - "null"
              additionalProperties: false
            most_recent_instance:
              $ref: "#/components/schemas/alert-instance"
            instances_url:
              type: string
              format: uri
          additionalProperties: false
        ref:
          type: string
          description: The Git reference of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        commit_oid:
          type: string
          description: The commit SHA of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/github-org"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: code_scanning_alert fixed event
    code_scanning_alert$reopened:
      type: object
      required:
        - action
        - alert
        - ref
        - commit_oid
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - reopened
        alert:
          type: object
          description: The code scanning alert involved in the event.
          required:
            - number
            - created_at
            - url
            - html_url
            - instances
            - state
            - dismissed_by
            - dismissed_at
            - dismissed_reason
            - rule
            - tool
          properties:
            number:
              type: integer
              description: The code scanning alert number.
            created_at:
              type: string
              format: date-time
              description: "The time that the alert was created in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ.`"
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
              description: The GitHub URL of the alert resource.
            instances:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/alert-instance"
                  - type: object
                    required:
                      - state
                    properties:
                      state:
                        type: string
                        enum:
                          - open
                    tsAdditionalProperties: false
            most_recent_instance:
              $ref: "#/components/schemas/alert-instance"
            state:
              type: string
              description: State of a code scanning alert.
              enum:
                - open
                - dismissed
                - fixed
            dismissed_by:
              type: "null"
            dismissed_at:
              type: "null"
              description: "The time that the alert was dismissed in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            dismissed_reason:
              type: "null"
              description: "The reason for dismissing or closing the alert. Can be one of:
                `false positive`, `won't fix`, and `used in tests`."
            rule:
              type: object
              required:
                - id
                - severity
                - description
              properties:
                id:
                  type: string
                  description: A unique identifier for the rule used to detect the alert.
                severity:
                  type:
                    - string
                    - "null"
                  enum:
                    - none
                    - note
                    - warning
                    - error
                    - null
                  description: The severity of the alert.
                description:
                  type: string
                  description: A short description of the rule used to detect the alert.
                name:
                  type: string
                full_description:
                  type: string
                tags:
                  type: "null"
                help:
                  type: "null"
              additionalProperties: false
            tool:
              type: object
              required:
                - name
                - version
              properties:
                name:
                  type: string
                  description: The name of the tool used to generate the code scanning analysis
                    alert.
                version:
                  type:
                    - string
                    - "null"
                  description: The version of the tool used to detect the alert.
                guid:
                  type:
                    - string
                    - "null"
              additionalProperties: false
          additionalProperties: false
        ref:
          type: string
          description: The Git reference of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        commit_oid:
          type: string
          description: The commit SHA of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/github-org"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: code_scanning_alert reopened event
    code_scanning_alert$reopened_by_user:
      type: object
      required:
        - action
        - alert
        - ref
        - commit_oid
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - reopened_by_user
        alert:
          type: object
          description: The code scanning alert involved in the event.
          required:
            - number
            - created_at
            - url
            - html_url
            - instances
            - state
            - dismissed_by
            - dismissed_at
            - dismissed_reason
            - rule
            - tool
          properties:
            number:
              type: integer
              description: The code scanning alert number.
            created_at:
              type: string
              format: date-time
              description: "The time that the alert was created in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ.`"
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
              description: The GitHub URL of the alert resource.
            instances:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/alert-instance"
                  - type: object
                    required:
                      - state
                    properties:
                      state:
                        type: string
                        enum:
                          - open
                    tsAdditionalProperties: false
            most_recent_instance:
              $ref: "#/components/schemas/alert-instance"
            state:
              type: string
              description: State of a code scanning alert.
              enum:
                - open
            dismissed_by:
              type: "null"
            dismissed_at:
              type: "null"
              description: "The time that the alert was dismissed in ISO 8601 format:
                `YYYY-MM-DDTHH:MM:SSZ`."
            dismissed_reason:
              type: "null"
              description: "The reason for dismissing or closing the alert. Can be one of:
                `false positive`, `won't fix`, and `used in tests`."
            rule:
              type: object
              required:
                - id
                - severity
                - description
              properties:
                id:
                  type: string
                  description: A unique identifier for the rule used to detect the alert.
                severity:
                  type:
                    - string
                    - "null"
                  enum:
                    - none
                    - note
                    - warning
                    - error
                    - null
                  description: The severity of the alert.
                description:
                  type: string
                  description: A short description of the rule used to detect the alert.
              additionalProperties: false
            tool:
              type: object
              required:
                - name
                - version
              properties:
                name:
                  type: string
                  description: The name of the tool used to generate the code scanning analysis
                    alert.
                version:
                  type:
                    - string
                    - "null"
                  description: The version of the tool used to detect the alert.
              additionalProperties: false
          additionalProperties: false
        ref:
          type: string
          description: The Git reference of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        commit_oid:
          type: string
          description: The commit SHA of the code scanning alert. When the action is
            `reopened_by_user` or `closed_by_user`, the event was triggered by
            the `sender` and this value will be empty.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: code_scanning_alert reopened_by_user event
    code_scanning_alert_event:
      oneOf:
        - $ref: "#/components/schemas/code_scanning_alert$appeared_in_branch"
        - $ref: "#/components/schemas/code_scanning_alert$closed_by_user"
        - $ref: "#/components/schemas/code_scanning_alert$created"
        - $ref: "#/components/schemas/code_scanning_alert$fixed"
        - $ref: "#/components/schemas/code_scanning_alert$reopened"
        - $ref: "#/components/schemas/code_scanning_alert$reopened_by_user"
      discriminator:
        propertyName: action
    commit_comment$created:
      type: object
      description: "A commit comment is created. The type of activity is specified in
        the `action` property. "
      required:
        - action
        - comment
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
          description: The action performed. Can be `created`.
        comment:
          type: object
          description: The [commit
            comment](https://docs.github.com/en/rest/reference/repos#get-a-commit-comment)
            resource.
          required:
            - url
            - html_url
            - id
            - node_id
            - user
            - position
            - line
            - path
            - commit_id
            - created_at
            - updated_at
            - author_association
            - body
          properties:
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            id:
              type: integer
              description: The ID of the commit comment.
            node_id:
              type: string
              description: The node ID of the commit comment.
            user:
              $ref: "#/components/schemas/user"
            position:
              type:
                - integer
                - "null"
              description: The line index in the diff to which the comment applies.
            line:
              type:
                - integer
                - "null"
              description: The line of the blob to which the comment applies. The last line of
                the range for a multi-line comment
            path:
              type:
                - string
                - "null"
              description: The relative path of the file to which the comment applies.
            commit_id:
              type: string
              description: The SHA of the commit to which the comment applies.
            created_at:
              type: string
            updated_at:
              type: string
            author_association:
              $ref: "#/components/schemas/author_association"
            body:
              type: string
              description: The text of the comment.
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: commit_comment created event
    commit_comment_event:
      oneOf:
        - $ref: "#/components/schemas/commit_comment$created"
      discriminator:
        propertyName: action
    content_reference$created:
      type: object
      required:
        - action
        - content_reference
        - repository
        - sender
        - installation
      properties:
        action:
          type: string
          enum:
            - created
        content_reference:
          type: object
          required:
            - id
            - node_id
            - reference
          properties:
            id:
              type: integer
            node_id:
              type: string
            reference:
              type: string
              format: uri
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: content_reference created event
    content_reference_event:
      oneOf:
        - $ref: "#/components/schemas/content_reference$created"
      discriminator:
        propertyName: action
    create$event:
      type: object
      description: A Git branch or tag is created.
      required:
        - ref
        - ref_type
        - master_branch
        - description
        - pusher_type
        - repository
        - sender
      properties:
        ref:
          type: string
          description: The [`git
            ref`](https://docs.github.com/en/rest/reference/git#get-a-reference)
            resource.
        ref_type:
          type: string
          enum:
            - tag
            - branch
          description: The type of Git ref object created in the repository. Can be either
            `branch` or `tag`.
        master_branch:
          type: string
          description: The name of the repository's default branch (usually `main`).
        description:
          type:
            - string
            - "null"
          description: The repository's current description.
        pusher_type:
          type: string
          description: The pusher type for the event. Can be either `user` or a deploy key.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: create event
    delete$event:
      type: object
      description: A Git branch or tag is deleted.
      required:
        - ref
        - ref_type
        - pusher_type
        - repository
        - sender
      properties:
        ref:
          type: string
          description: The [`git
            ref`](https://docs.github.com/en/rest/reference/git#get-a-reference)
            resource.
        ref_type:
          type: string
          enum:
            - tag
            - branch
          description: The type of Git ref object deleted in the repository. Can be either
            `branch` or `tag`.
        pusher_type:
          type: string
          description: The pusher type for the event. Can be either `user` or a deploy key.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: delete event
    deploy_key$created:
      type: object
      required:
        - action
        - key
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        key:
          type: object
          description: The [`deploy
            key`](https://docs.github.com/en/rest/reference/repos#get-a-deploy-key)
            resource.
          required:
            - id
            - key
            - url
            - title
            - verified
            - created_at
            - read_only
          properties:
            id:
              type: integer
            key:
              type: string
            url:
              type: string
              format: uri
            title:
              type: string
            verified:
              type: boolean
            created_at:
              type: string
            read_only:
              type: boolean
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: deploy_key created event
    deploy_key$deleted:
      type: object
      required:
        - action
        - key
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        key:
          type: object
          description: The [`deploy
            key`](https://docs.github.com/en/rest/reference/repos#get-a-deploy-key)
            resource.
          required:
            - id
            - key
            - url
            - title
            - verified
            - created_at
            - read_only
          properties:
            id:
              type: integer
            key:
              type: string
            url:
              type: string
              format: uri
            title:
              type: string
            verified:
              type: boolean
            created_at:
              type: string
            read_only:
              type: boolean
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: deploy_key deleted event
    deploy_key_event:
      oneOf:
        - $ref: "#/components/schemas/deploy_key$created"
        - $ref: "#/components/schemas/deploy_key$deleted"
      discriminator:
        propertyName: action
    deployment$created:
      type: object
      required:
        - action
        - deployment
        - workflow
        - workflow_run
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        deployment:
          type: object
          description: The
            [deployment](https://docs.github.com/en/rest/reference/repos#list-deployments).
          required:
            - url
            - id
            - node_id
            - sha
            - ref
            - task
            - payload
            - original_environment
            - environment
            - description
            - creator
            - created_at
            - updated_at
            - statuses_url
            - repository_url
          properties:
            url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            sha:
              type: string
            ref:
              type: string
            task:
              type: string
            payload:
              type: object
              required: []
              additionalProperties: false
            original_environment:
              type: string
            environment:
              type: string
            description:
              type: "null"
            creator:
              $ref: "#/components/schemas/user"
            created_at:
              type: string
            updated_at:
              type: string
            statuses_url:
              type: string
              format: uri
            repository_url:
              type: string
              format: uri
            performed_via_github_app:
              oneOf:
                - $ref: "#/components/schemas/app"
                - type: "null"
          additionalProperties: false
        workflow:
          type: "null"
        workflow_run:
          type: "null"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: deployment created event
    deployment_event:
      oneOf:
        - $ref: "#/components/schemas/deployment$created"
      discriminator:
        propertyName: action
    deployment_status$created:
      type: object
      required:
        - action
        - deployment_status
        - deployment
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        deployment_status:
          type: object
          description: The [deployment
            status](https://docs.github.com/en/rest/reference/repos#list-deployment-statuses).
          required:
            - url
            - id
            - node_id
            - state
            - creator
            - description
            - environment
            - target_url
            - created_at
            - updated_at
            - deployment_url
            - repository_url
          properties:
            url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            state:
              type: string
              description: The new state. Can be `pending`, `success`, `failure`, or `error`.
            creator:
              $ref: "#/components/schemas/user"
            description:
              type: string
              description: The optional human-readable description added to the status.
            environment:
              type: string
            target_url:
              type: string
              description: The optional link added to the status.
            created_at:
              type: string
            updated_at:
              type: string
            deployment_url:
              type: string
              format: uri
            repository_url:
              type: string
              format: uri
            performed_via_github_app:
              oneOf:
                - $ref: "#/components/schemas/app"
                - type: "null"
          additionalProperties: false
        deployment:
          type: object
          description: The
            [deployment](https://docs.github.com/en/rest/reference/repos#list-deployments)
            that this status is associated with.
          required:
            - url
            - id
            - node_id
            - sha
            - ref
            - task
            - payload
            - original_environment
            - environment
            - description
            - creator
            - created_at
            - updated_at
            - statuses_url
            - repository_url
            - performed_via_github_app
          properties:
            url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            sha:
              type: string
            ref:
              type: string
            task:
              type: string
            payload:
              type: object
              required: []
              additionalProperties: false
            original_environment:
              type: string
            environment:
              type: string
            description:
              type: "null"
            creator:
              $ref: "#/components/schemas/user"
            created_at:
              type: string
            updated_at:
              type: string
            statuses_url:
              type: string
              format: uri
            repository_url:
              type: string
              format: uri
            performed_via_github_app:
              oneOf:
                - $ref: "#/components/schemas/app"
                - type: "null"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: deployment_status created event
    deployment_status_event:
      oneOf:
        - $ref: "#/components/schemas/deployment_status$created"
      discriminator:
        propertyName: action
    discussion$answered:
      type: object
      required:
        - action
        - discussion
        - answer
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - answered
        discussion:
          allOf:
            - $ref: "#/components/schemas/discussion"
            - type: object
              required:
                - category
                - answer_html_url
                - answer_chosen_at
                - answer_chosen_by
              properties:
                category:
                  type: object
                  required:
                    - is_answerable
                  properties:
                    is_answerable:
                      type: boolean
                      enum:
                        - true
                  tsAdditionalProperties: false
                answer_html_url:
                  type: string
                  format: uri
                answer_chosen_at:
                  type: string
                  format: date-time
                answer_chosen_by:
                  $ref: "#/components/schemas/user"
              tsAdditionalProperties: false
        answer:
          type: object
          required:
            - id
            - node_id
            - html_url
            - parent_id
            - child_comment_count
            - repository_url
            - discussion_id
            - author_association
            - user
            - created_at
            - updated_at
            - body
          properties:
            id:
              type: integer
            node_id:
              type: string
            html_url:
              type: string
            parent_id:
              type: "null"
            child_comment_count:
              type: integer
            repository_url:
              type: string
            discussion_id:
              type: integer
            author_association:
              $ref: "#/components/schemas/author_association"
            user:
              $ref: "#/components/schemas/user"
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            body:
              type: string
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion answered event
    discussion$category_changed:
      type: object
      required:
        - action
        - changes
        - discussion
        - repository
        - sender
      properties:
        changes:
          type: object
          required:
            - category
          properties:
            category:
              type: object
              required:
                - from
              properties:
                from:
                  type: object
                  required:
                    - id
                    - repository_id
                    - emoji
                    - name
                    - description
                    - created_at
                    - updated_at
                    - slug
                    - is_answerable
                  properties:
                    id:
                      type: integer
                    repository_id:
                      type: integer
                    emoji:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                    slug:
                      type: string
                    is_answerable:
                      type: boolean
                  additionalProperties: false
              additionalProperties: false
          additionalProperties: false
        action:
          type: string
          enum:
            - category_changed
        discussion:
          $ref: "#/components/schemas/discussion"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion category changed event
    discussion$created:
      type: object
      required:
        - action
        - discussion
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        discussion:
          allOf:
            - $ref: "#/components/schemas/discussion"
            - type: object
              required:
                - state
                - locked
                - answer_html_url
                - answer_chosen_at
                - answer_chosen_by
              properties:
                state:
                  type: string
                  enum:
                    - open
                locked:
                  type: boolean
                  enum:
                    - false
                answer_html_url:
                  type: "null"
                answer_chosen_at:
                  type: "null"
                answer_chosen_by:
                  type: "null"
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion created event
    discussion$deleted:
      type: object
      required:
        - action
        - discussion
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        discussion:
          $ref: "#/components/schemas/discussion"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion deleted event
    discussion$edited:
      type: object
      required:
        - action
        - discussion
        - repository
        - sender
      properties:
        changes:
          type: object
          properties:
            title:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
              additionalProperties: false
            body:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
              additionalProperties: false
          additionalProperties: false
        action:
          type: string
          enum:
            - edited
        discussion:
          $ref: "#/components/schemas/discussion"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion edited event
    discussion$locked:
      type: object
      required:
        - action
        - discussion
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - locked
        discussion:
          allOf:
            - $ref: "#/components/schemas/discussion"
            - type: object
              required:
                - state
                - locked
              properties:
                state:
                  type: string
                  enum:
                    - locked
                locked:
                  type: boolean
                  enum:
                    - true
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion locked event
    discussion$pinned:
      type: object
      required:
        - action
        - discussion
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - pinned
        discussion:
          $ref: "#/components/schemas/discussion"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion pinned event
    discussion$transferred:
      type: object
      required:
        - action
        - changes
        - discussion
        - repository
        - sender
      properties:
        changes:
          type: object
          required:
            - new_discussion
            - new_repository
          properties:
            new_discussion:
              $ref: "#/components/schemas/discussion"
            new_repository:
              $ref: "#/components/schemas/repository"
          additionalProperties: false
        action:
          type: string
          enum:
            - transferred
        discussion:
          $ref: "#/components/schemas/discussion"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion transferred event
    discussion$unanswered:
      type: object
      required:
        - action
        - discussion
        - old_answer
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unanswered
        discussion:
          allOf:
            - $ref: "#/components/schemas/discussion"
            - type: object
              required:
                - category
                - answer_html_url
                - answer_chosen_at
                - answer_chosen_by
              properties:
                category:
                  type: object
                  required:
                    - is_answerable
                  properties:
                    is_answerable:
                      type: boolean
                      enum:
                        - true
                  tsAdditionalProperties: false
                answer_html_url:
                  type: "null"
                answer_chosen_at:
                  type: "null"
                answer_chosen_by:
                  type: "null"
              tsAdditionalProperties: false
        old_answer:
          type: object
          required:
            - id
            - node_id
            - html_url
            - parent_id
            - child_comment_count
            - repository_url
            - discussion_id
            - author_association
            - user
            - created_at
            - updated_at
            - body
          properties:
            id:
              type: integer
            node_id:
              type: string
            html_url:
              type: string
            parent_id:
              type: "null"
            child_comment_count:
              type: integer
            repository_url:
              type: string
            discussion_id:
              type: integer
            author_association:
              $ref: "#/components/schemas/author_association"
            user:
              $ref: "#/components/schemas/user"
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            body:
              type: string
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion unanswered event
    discussion$unlocked:
      type: object
      required:
        - action
        - discussion
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unlocked
        discussion:
          allOf:
            - $ref: "#/components/schemas/discussion"
            - type: object
              required:
                - state
                - locked
              properties:
                state:
                  type: string
                  enum:
                    - open
                locked:
                  type: boolean
                  enum:
                    - false
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion unlocked event
    discussion$unpinned:
      type: object
      required:
        - action
        - discussion
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unpinned
        discussion:
          $ref: "#/components/schemas/discussion"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion unpinned event
    discussion_event:
      oneOf:
        - $ref: "#/components/schemas/discussion$answered"
        - $ref: "#/components/schemas/discussion$category_changed"
        - $ref: "#/components/schemas/discussion$created"
        - $ref: "#/components/schemas/discussion$deleted"
        - $ref: "#/components/schemas/discussion$edited"
        - $ref: "#/components/schemas/discussion$locked"
        - $ref: "#/components/schemas/discussion$pinned"
        - $ref: "#/components/schemas/discussion$transferred"
        - $ref: "#/components/schemas/discussion$unanswered"
        - $ref: "#/components/schemas/discussion$unlocked"
        - $ref: "#/components/schemas/discussion$unpinned"
      discriminator:
        propertyName: action
    discussion_comment$created:
      type: object
      required:
        - action
        - comment
        - discussion
        - repository
        - sender
        - installation
      properties:
        action:
          type: string
          enum:
            - created
        comment:
          type: object
          required:
            - id
            - node_id
            - html_url
            - parent_id
            - child_comment_count
            - repository_url
            - discussion_id
            - author_association
            - user
            - created_at
            - updated_at
            - body
          properties:
            id:
              type: integer
            node_id:
              type: string
            html_url:
              type: string
            parent_id:
              type:
                - integer
                - "null"
            child_comment_count:
              type: integer
            repository_url:
              type: string
            discussion_id:
              type: integer
            author_association:
              $ref: "#/components/schemas/author_association"
            user:
              $ref: "#/components/schemas/user"
            created_at:
              type: string
            updated_at:
              type: string
            body:
              type: string
          additionalProperties: false
        discussion:
          $ref: "#/components/schemas/discussion"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion_comment created event
    discussion_comment$deleted:
      type: object
      required:
        - action
        - comment
        - discussion
        - repository
        - sender
        - installation
      properties:
        action:
          type: string
          enum:
            - deleted
        comment:
          type: object
          required:
            - id
            - node_id
            - html_url
            - parent_id
            - child_comment_count
            - repository_url
            - discussion_id
            - author_association
            - user
            - created_at
            - updated_at
            - body
          properties:
            id:
              type: integer
            node_id:
              type: string
            html_url:
              type: string
            parent_id:
              type:
                - integer
                - "null"
            child_comment_count:
              type: integer
            repository_url:
              type: string
            discussion_id:
              type: integer
            author_association:
              $ref: "#/components/schemas/author_association"
            user:
              $ref: "#/components/schemas/user"
            created_at:
              type: string
            updated_at:
              type: string
            body:
              type: string
          additionalProperties: false
        discussion:
          $ref: "#/components/schemas/discussion"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion_comment deleted event
    discussion_comment$edited:
      type: object
      required:
        - action
        - changes
        - comment
        - discussion
        - repository
        - sender
        - installation
      properties:
        changes:
          type: object
          required:
            - body
          properties:
            body:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
              additionalProperties: false
          additionalProperties: false
        action:
          type: string
          enum:
            - edited
        comment:
          type: object
          required:
            - id
            - node_id
            - html_url
            - parent_id
            - child_comment_count
            - repository_url
            - discussion_id
            - author_association
            - user
            - created_at
            - updated_at
            - body
          properties:
            id:
              type: integer
            node_id:
              type: string
            html_url:
              type: string
            parent_id:
              type:
                - integer
                - "null"
            child_comment_count:
              type: integer
            repository_url:
              type: string
            discussion_id:
              type: integer
            author_association:
              $ref: "#/components/schemas/author_association"
            user:
              $ref: "#/components/schemas/user"
            created_at:
              type: string
            updated_at:
              type: string
            body:
              type: string
          additionalProperties: false
        discussion:
          $ref: "#/components/schemas/discussion"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: discussion_comment edited event
    discussion_comment_event:
      oneOf:
        - $ref: "#/components/schemas/discussion_comment$created"
        - $ref: "#/components/schemas/discussion_comment$deleted"
        - $ref: "#/components/schemas/discussion_comment$edited"
      discriminator:
        propertyName: action
    fork$event:
      type: object
      description: A user forks a repository.
      required:
        - forkee
        - repository
        - sender
      properties:
        forkee:
          description: The created
            [`repository`](https://docs.github.com/en/rest/reference/repos#get-a-repository)
            resource.
          allOf:
            - $ref: "#/components/schemas/repository"
            - type: object
              properties:
                fork:
                  enum:
                    - true
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: fork event
    github_app_authorization$revoked:
      type: object
      required:
        - action
        - sender
      properties:
        action:
          type: string
          enum:
            - revoked
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: github_app_authorization revoked event
    github_app_authorization_event:
      oneOf:
        - $ref: "#/components/schemas/github_app_authorization$revoked"
      discriminator:
        propertyName: action
    gollum$event:
      type: object
      description: A wiki page is created or updated.
      required:
        - pages
        - repository
        - sender
      properties:
        pages:
          type: array
          description: The pages that were updated.
          items:
            type: object
            required:
              - page_name
              - title
              - summary
              - action
              - sha
              - html_url
            properties:
              page_name:
                type: string
                description: The name of the page.
              title:
                type: string
                description: The current page title.
              summary:
                type: "null"
              action:
                type: string
                enum:
                  - created
                  - edited
                description: The action that was performed on the page. Can be `created` or
                  `edited`.
              sha:
                type: string
                description: The latest commit SHA of the page.
              html_url:
                type: string
                format: uri
                description: Points to the HTML wiki page.
            additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: gollum event
    installation$created:
      type: object
      required:
        - action
        - installation
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        installation:
          $ref: "#/components/schemas/installation"
        repositories:
          type: array
          description: An array of repository objects that the installation can access.
          items:
            type: object
            required:
              - id
              - node_id
              - name
              - full_name
              - private
            properties:
              id:
                type: integer
                description: Unique identifier of the repository
              node_id:
                type: string
              name:
                type: string
                description: The name of the repository.
              full_name:
                type: string
              private:
                type: boolean
                description: Whether the repository is private or public.
            additionalProperties: false
        requester:
          $ref: "#/components/schemas/user"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: installation created event
    installation$deleted:
      type: object
      required:
        - action
        - installation
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        installation:
          $ref: "#/components/schemas/installation"
        repositories:
          type: array
          description: An array of repository objects that the installation can access.
          items:
            type: object
            required:
              - id
              - node_id
              - name
              - full_name
              - private
            properties:
              id:
                type: integer
                description: Unique identifier of the repository
              node_id:
                type: string
              name:
                type: string
                description: The name of the repository.
              full_name:
                type: string
              private:
                type: boolean
                description: Whether the repository is private or public.
            additionalProperties: false
        requester:
          type: "null"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: installation deleted event
    installation$new_permissions_accepted:
      type: object
      required:
        - action
        - installation
        - sender
      properties:
        action:
          type: string
          enum:
            - new_permissions_accepted
        installation:
          $ref: "#/components/schemas/installation"
        repositories:
          type: array
          description: An array of repository objects that the installation can access.
          items:
            type: object
            required:
              - id
              - node_id
              - name
              - full_name
              - private
            properties:
              id:
                type: integer
                description: Unique identifier of the repository
              node_id:
                type: string
              name:
                type: string
                description: The name of the repository.
              full_name:
                type: string
              private:
                type: boolean
                description: Whether the repository is private or public.
            additionalProperties: false
        requester:
          type: "null"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: installation new_permissions_accepted event
    installation$suspend:
      type: object
      required:
        - action
        - installation
        - sender
      properties:
        action:
          type: string
          enum:
            - suspend
        installation:
          allOf:
            - $ref: "#/components/schemas/installation"
            - type: object
              required:
                - suspended_by
                - suspended_at
              properties:
                suspended_by:
                  $ref: "#/components/schemas/user"
                suspended_at:
                  type: string
                  format: date-time
              tsAdditionalProperties: false
        repositories:
          type: array
          description: An array of repository objects that the installation can access.
          items:
            type: object
            required:
              - id
              - node_id
              - name
              - full_name
              - private
            properties:
              id:
                type: integer
                description: Unique identifier of the repository
              node_id:
                type: string
              name:
                type: string
                description: The name of the repository.
              full_name:
                type: string
              private:
                type: boolean
                description: Whether the repository is private or public.
            additionalProperties: false
        requester:
          type: "null"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: installation suspend event
    installation$unsuspend:
      type: object
      required:
        - action
        - installation
        - sender
      properties:
        action:
          type: string
          enum:
            - unsuspend
        installation:
          allOf:
            - $ref: "#/components/schemas/installation"
            - type: object
              required:
                - suspended_by
                - suspended_at
              properties:
                suspended_by:
                  type: "null"
                suspended_at:
                  type: "null"
              tsAdditionalProperties: false
        repositories:
          type: array
          description: An array of repository objects that the installation can access.
          items:
            type: object
            required:
              - id
              - node_id
              - name
              - full_name
              - private
            properties:
              id:
                type: integer
                description: Unique identifier of the repository
              node_id:
                type: string
              name:
                type: string
                description: The name of the repository.
              full_name:
                type: string
              private:
                type: boolean
                description: Whether the repository is private or public.
            additionalProperties: false
        requester:
          type: "null"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: installation unsuspend event
    installation_event:
      oneOf:
        - $ref: "#/components/schemas/installation$created"
        - $ref: "#/components/schemas/installation$deleted"
        - $ref: "#/components/schemas/installation$new_permissions_accepted"
        - $ref: "#/components/schemas/installation$suspend"
        - $ref: "#/components/schemas/installation$unsuspend"
      discriminator:
        propertyName: action
    installation_repositories$added:
      type: object
      required:
        - action
        - installation
        - repository_selection
        - repositories_added
        - repositories_removed
        - sender
      properties:
        action:
          type: string
          enum:
            - added
        installation:
          $ref: "#/components/schemas/installation"
        repository_selection:
          type: string
          enum:
            - all
            - selected
          description: Describe whether all repositories have been selected or there's a
            selection involved
        repositories_added:
          type: array
          description: An array of repository objects, which were added to the installation.
          items:
            type: object
            required:
              - id
              - node_id
              - name
              - full_name
              - private
            properties:
              id:
                type: integer
                description: Unique identifier of the repository
              node_id:
                type: string
              name:
                type: string
                description: The name of the repository.
              full_name:
                type: string
              private:
                type: boolean
                description: Whether the repository is private or public.
            additionalProperties: false
        repositories_removed:
          type: array
          description: An array of repository objects, which were removed from the
            installation.
          items:
            type: object
            properties:
              id:
                type: integer
                description: Unique identifier of the repository
              node_id:
                type: string
              name:
                type: string
                description: The name of the repository.
              full_name:
                type: string
              private:
                type: boolean
                description: Whether the repository is private or public.
            additionalProperties: false
          maxItems: 0
        requester:
          $ref: "#/components/schemas/user"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: installation_repositories added event
    installation_repositories$removed:
      type: object
      required:
        - action
        - installation
        - repository_selection
        - repositories_added
        - repositories_removed
        - sender
      properties:
        action:
          type: string
          enum:
            - removed
        installation:
          $ref: "#/components/schemas/installation"
        repository_selection:
          type: string
          enum:
            - all
            - selected
          description: Describe whether all repositories have been selected or there's a
            selection involved
        repositories_added:
          type: array
          description: An array of repository objects, which were added to the installation.
          items:
            type: object
            required:
              - id
              - node_id
              - name
              - full_name
              - private
            properties:
              id:
                type: integer
                description: Unique identifier of the repository
              node_id:
                type: string
              name:
                type: string
                description: The name of the repository.
              full_name:
                type: string
              private:
                type: boolean
                description: Whether the repository is private or public.
            additionalProperties: false
          maxItems: 0
        repositories_removed:
          type: array
          description: An array of repository objects, which were removed from the
            installation.
          items:
            type: object
            required:
              - id
              - node_id
              - name
              - full_name
              - private
            properties:
              id:
                type: integer
                description: Unique identifier of the repository
              node_id:
                type: string
              name:
                type: string
                description: The name of the repository.
              full_name:
                type: string
              private:
                type: boolean
                description: Whether the repository is private or public.
            additionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: installation_repositories removed event
    installation_repositories_event:
      oneOf:
        - $ref: "#/components/schemas/installation_repositories$added"
        - $ref: "#/components/schemas/installation_repositories$removed"
      discriminator:
        propertyName: action
    issue_comment$created:
      type: object
      required:
        - action
        - issue
        - comment
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        issue:
          description: The [issue](https://docs.github.com/en/rest/reference/issues) the
            comment belongs to.
          allOf:
            - $ref: "#/components/schemas/issue"
            - type: object
              required:
                - labels
                - state
                - locked
                - assignee
                - closed_at
              properties:
                assignee:
                  oneOf:
                    - $ref: "#/components/schemas/user"
                    - type: "null"
                state:
                  type: string
                  enum:
                    - open
                    - closed
                  description: State of the issue; either 'open' or 'closed'
                closed_at:
                  type: "null"
                locked:
                  type: boolean
                labels:
                  type: array
                  items:
                    $ref: "#/components/schemas/label"
                pull_request:
                  type: object
                  required:
                    - url
                    - html_url
                    - diff_url
                    - patch_url
                  properties:
                    url:
                      type: string
                      format: uri
                    html_url:
                      type: string
                      format: uri
                    diff_url:
                      type: string
                      format: uri
                    patch_url:
                      type: string
                      format: uri
                  additionalProperties: false
              tsAdditionalProperties: false
        comment:
          $ref: "#/components/schemas/issue-comment"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issue_comment created event
    issue_comment$deleted:
      type: object
      required:
        - action
        - issue
        - comment
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        issue:
          description: The [issue](https://docs.github.com/en/rest/reference/issues) the
            comment belongs to.
          allOf:
            - $ref: "#/components/schemas/issue"
            - type: object
              required:
                - labels
                - state
                - locked
                - assignee
                - closed_at
              properties:
                assignee:
                  oneOf:
                    - $ref: "#/components/schemas/user"
                    - type: "null"
                state:
                  type: string
                  enum:
                    - open
                    - closed
                  description: State of the issue; either 'open' or 'closed'
                closed_at:
                  type: "null"
                locked:
                  type: boolean
                labels:
                  type: array
                  items:
                    $ref: "#/components/schemas/label"
                pull_request:
                  type: object
                  required:
                    - url
                    - html_url
                    - diff_url
                    - patch_url
                  properties:
                    url:
                      type: string
                      format: uri
                    html_url:
                      type: string
                      format: uri
                    diff_url:
                      type: string
                      format: uri
                    patch_url:
                      type: string
                      format: uri
                  additionalProperties: false
              tsAdditionalProperties: false
        comment:
          $ref: "#/components/schemas/issue-comment"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issue_comment deleted event
    issue_comment$edited:
      type: object
      required:
        - action
        - changes
        - issue
        - comment
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        changes:
          type: object
          description: The changes to the comment.
          properties:
            body:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the body.
              additionalProperties: false
          additionalProperties: false
        issue:
          description: The [issue](https://docs.github.com/en/rest/reference/issues) the
            comment belongs to.
          allOf:
            - $ref: "#/components/schemas/issue"
            - type: object
              required:
                - labels
                - state
                - locked
                - assignee
              properties:
                assignee:
                  oneOf:
                    - $ref: "#/components/schemas/user"
                    - type: "null"
                state:
                  type: string
                  enum:
                    - open
                    - closed
                  description: State of the issue; either 'open' or 'closed'
                locked:
                  type: boolean
                labels:
                  type: array
                  items:
                    $ref: "#/components/schemas/label"
                pull_request:
                  type: object
                  required:
                    - url
                    - html_url
                    - diff_url
                    - patch_url
                  properties:
                    url:
                      type: string
                      format: uri
                    html_url:
                      type: string
                      format: uri
                    diff_url:
                      type: string
                      format: uri
                    patch_url:
                      type: string
                      format: uri
                  additionalProperties: false
              tsAdditionalProperties: false
        comment:
          $ref: "#/components/schemas/issue-comment"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issue_comment edited event
    issue_comment_event:
      oneOf:
        - $ref: "#/components/schemas/issue_comment$created"
        - $ref: "#/components/schemas/issue_comment$deleted"
        - $ref: "#/components/schemas/issue_comment$edited"
      discriminator:
        propertyName: action
    issues$assigned:
      type: object
      description: Activity related to an issue. The type of activity is specified in
        the action property.
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - assigned
          description: The action that was performed.
        issue:
          $ref: "#/components/schemas/issue"
          description: The [issue](https://docs.github.com/en/rest/reference/issues) itself.
        assignee:
          description: The optional user who was assigned or unassigned from the issue.
          oneOf:
            - $ref: "#/components/schemas/user"
            - type: "null"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues assigned event
    issues$closed:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - closed
          description: The action that was performed.
        issue:
          description: The [issue](https://docs.github.com/en/rest/reference/issues) itself.
          allOf:
            - $ref: "#/components/schemas/issue"
            - type: object
              required:
                - state
                - closed_at
              properties:
                state:
                  type: string
                  enum:
                    - closed
                closed_at:
                  type: string
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues closed event
    issues$deleted:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        issue:
          $ref: "#/components/schemas/issue"
          description: The [issue](https://docs.github.com/en/rest/reference/issues) itself.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues deleted event
    issues$demilestoned:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - demilestoned
        issue:
          $ref: "#/components/schemas/issue"
          description: The [issue](https://docs.github.com/en/rest/reference/issues) itself.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues demilestoned event
    issues$edited:
      type: object
      required:
        - action
        - changes
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        issue:
          $ref: "#/components/schemas/issue"
        label:
          $ref: "#/components/schemas/label"
        changes:
          type: object
          description: The changes to the issue.
          properties:
            body:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the body.
              additionalProperties: false
            title:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the title.
              additionalProperties: false
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues edited event
    issues$labeled:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - labeled
        issue:
          $ref: "#/components/schemas/issue"
        label:
          $ref: "#/components/schemas/label"
          description: The optional label that was added or removed from the issue.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues labeled event
    issues$locked:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - locked
        issue:
          allOf:
            - $ref: "#/components/schemas/issue"
            - type: object
              required:
                - locked
                - active_lock_reason
              properties:
                locked:
                  type: boolean
                  enum:
                    - true
                active_lock_reason:
                  type: string
                  enum:
                    - resolved
                    - off-topic
                    - too heated
                    - spam
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues locked event
    issues$milestoned:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - milestoned
        issue:
          $ref: "#/components/schemas/issue"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues milestoned event
    issues$opened:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - opened
        issue:
          allOf:
            - $ref: "#/components/schemas/issue"
            - type: object
              required:
                - state
                - closed_at
              properties:
                state:
                  type: string
                  enum:
                    - open
                closed_at:
                  type: "null"
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues opened event
    issues$pinned:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - pinned
        issue:
          $ref: "#/components/schemas/issue"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues pinned event
    issues$reopened:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - reopened
        issue:
          allOf:
            - $ref: "#/components/schemas/issue"
            - type: object
              required:
                - state
              properties:
                state:
                  type: string
                  enum:
                    - open
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues reopened event
    issues$transferred:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - transferred
        issue:
          $ref: "#/components/schemas/issue"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues transferred event
    issues$unassigned:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unassigned
          description: The action that was performed.
        issue:
          $ref: "#/components/schemas/issue"
        assignee:
          description: The optional user who was assigned or unassigned from the issue.
          oneOf:
            - $ref: "#/components/schemas/user"
            - type: "null"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues unassigned event
    issues$unlabeled:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unlabeled
        issue:
          $ref: "#/components/schemas/issue"
        label:
          $ref: "#/components/schemas/label"
          description: The optional label that was added or removed from the issue.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues unlabeled event
    issues$unlocked:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unlocked
        issue:
          allOf:
            - $ref: "#/components/schemas/issue"
            - type: object
              required:
                - locked
                - active_lock_reason
              properties:
                locked:
                  type: boolean
                  enum:
                    - false
                active_lock_reason:
                  type: "null"
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues unlocked event
    issues$unpinned:
      type: object
      required:
        - action
        - issue
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unpinned
        issue:
          $ref: "#/components/schemas/issue"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: issues unpinned event
    issues_event:
      oneOf:
        - $ref: "#/components/schemas/issues$assigned"
        - $ref: "#/components/schemas/issues$closed"
        - $ref: "#/components/schemas/issues$deleted"
        - $ref: "#/components/schemas/issues$demilestoned"
        - $ref: "#/components/schemas/issues$edited"
        - $ref: "#/components/schemas/issues$labeled"
        - $ref: "#/components/schemas/issues$locked"
        - $ref: "#/components/schemas/issues$milestoned"
        - $ref: "#/components/schemas/issues$opened"
        - $ref: "#/components/schemas/issues$pinned"
        - $ref: "#/components/schemas/issues$reopened"
        - $ref: "#/components/schemas/issues$transferred"
        - $ref: "#/components/schemas/issues$unassigned"
        - $ref: "#/components/schemas/issues$unlabeled"
        - $ref: "#/components/schemas/issues$unlocked"
        - $ref: "#/components/schemas/issues$unpinned"
      discriminator:
        propertyName: action
    label$created:
      type: object
      required:
        - action
        - label
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        label:
          $ref: "#/components/schemas/label"
          description: The label that was added.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: label created event
    label$deleted:
      type: object
      required:
        - action
        - label
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        label:
          $ref: "#/components/schemas/label"
          description: The label that was removed.
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: label deleted event
    label$edited:
      type: object
      required:
        - action
        - label
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        label:
          $ref: "#/components/schemas/label"
          description: The label that was edited.
        changes:
          type: object
          description: The changes to the label if the action was `edited`.
          properties:
            color:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the color if the action was `edited`.
              additionalProperties: false
            name:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the name if the action was `edited`.
              additionalProperties: false
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: label edited event
    label_event:
      oneOf:
        - $ref: "#/components/schemas/label$created"
        - $ref: "#/components/schemas/label$deleted"
        - $ref: "#/components/schemas/label$edited"
      discriminator:
        propertyName: action
    marketplace_purchase$cancelled:
      type: object
      required:
        - action
        - effective_date
        - sender
        - marketplace_purchase
      properties:
        action:
          type: string
          enum:
            - cancelled
        effective_date:
          type: string
        sender:
          type: object
          required:
            - login
            - id
            - avatar_url
            - gravatar_id
            - url
            - html_url
            - followers_url
            - following_url
            - gists_url
            - starred_url
            - subscriptions_url
            - organizations_url
            - repos_url
            - events_url
            - received_events_url
            - type
            - site_admin
            - email
          properties:
            login:
              type: string
            id:
              type: integer
            avatar_url:
              type: string
              format: uri
            gravatar_id:
              type: string
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            followers_url:
              type: string
              format: uri
            following_url:
              type: string
              format: uri-template
            gists_url:
              type: string
              format: uri-template
            starred_url:
              type: string
              format: uri-template
            subscriptions_url:
              type: string
              format: uri
            organizations_url:
              type: string
              format: uri
            repos_url:
              type: string
              format: uri
            events_url:
              type: string
              format: uri-template
            received_events_url:
              type: string
              format: uri
            type:
              type: string
            site_admin:
              type: boolean
            email:
              type: string
          additionalProperties: false
        marketplace_purchase:
          allOf:
            - $ref: "#/components/schemas/marketplace-purchase"
            - type: object
              required:
                - next_billing_date
              properties:
                next_billing_date:
                  type: string
              tsAdditionalProperties: false
        previous_marketplace_purchase:
          $ref: "#/components/schemas/marketplace-purchase"
      additionalProperties: false
      title: marketplace_purchase cancelled event
    marketplace_purchase$changed:
      type: object
      required:
        - action
        - effective_date
        - sender
        - marketplace_purchase
      properties:
        action:
          type: string
          enum:
            - changed
        effective_date:
          type: string
        sender:
          type: object
          required:
            - login
            - id
            - avatar_url
            - gravatar_id
            - url
            - html_url
            - followers_url
            - following_url
            - gists_url
            - starred_url
            - subscriptions_url
            - organizations_url
            - repos_url
            - events_url
            - received_events_url
            - type
            - site_admin
            - email
          properties:
            login:
              type: string
            id:
              type: integer
            avatar_url:
              type: string
              format: uri
            gravatar_id:
              type: string
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            followers_url:
              type: string
              format: uri
            following_url:
              type: string
              format: uri-template
            gists_url:
              type: string
              format: uri-template
            starred_url:
              type: string
              format: uri-template
            subscriptions_url:
              type: string
              format: uri
            organizations_url:
              type: string
              format: uri
            repos_url:
              type: string
              format: uri
            events_url:
              type: string
              format: uri-template
            received_events_url:
              type: string
              format: uri
            type:
              type: string
            site_admin:
              type: boolean
            email:
              type: string
          additionalProperties: false
        marketplace_purchase:
          allOf:
            - $ref: "#/components/schemas/marketplace-purchase"
            - type: object
              required:
                - next_billing_date
              properties:
                next_billing_date:
                  type: string
              tsAdditionalProperties: false
        previous_marketplace_purchase:
          $ref: "#/components/schemas/marketplace-purchase"
      additionalProperties: false
      title: marketplace_purchase changed event
    marketplace_purchase$pending_change:
      type: object
      required:
        - action
        - effective_date
        - sender
        - marketplace_purchase
      properties:
        action:
          type: string
          enum:
            - pending_change
        effective_date:
          type: string
        sender:
          type: object
          required:
            - login
            - id
            - avatar_url
            - gravatar_id
            - url
            - html_url
            - followers_url
            - following_url
            - gists_url
            - starred_url
            - subscriptions_url
            - organizations_url
            - repos_url
            - events_url
            - received_events_url
            - type
            - site_admin
            - email
          properties:
            login:
              type: string
            id:
              type: integer
            avatar_url:
              type: string
              format: uri
            gravatar_id:
              type: string
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            followers_url:
              type: string
              format: uri
            following_url:
              type: string
              format: uri-template
            gists_url:
              type: string
              format: uri-template
            starred_url:
              type: string
              format: uri-template
            subscriptions_url:
              type: string
              format: uri
            organizations_url:
              type: string
              format: uri
            repos_url:
              type: string
              format: uri
            events_url:
              type: string
              format: uri-template
            received_events_url:
              type: string
              format: uri
            type:
              type: string
            site_admin:
              type: boolean
            email:
              type: string
          additionalProperties: false
        marketplace_purchase:
          allOf:
            - $ref: "#/components/schemas/marketplace-purchase"
            - type: object
              required:
                - next_billing_date
              properties:
                next_billing_date:
                  type: string
              tsAdditionalProperties: false
        previous_marketplace_purchase:
          $ref: "#/components/schemas/marketplace-purchase"
      additionalProperties: false
      title: marketplace_purchase pending_change event
    marketplace_purchase$pending_change_cancelled:
      type: object
      required:
        - action
        - effective_date
        - sender
        - marketplace_purchase
      properties:
        action:
          type: string
          enum:
            - pending_change_cancelled
        effective_date:
          type: string
        sender:
          type: object
          required:
            - login
            - id
            - avatar_url
            - gravatar_id
            - url
            - html_url
            - followers_url
            - following_url
            - gists_url
            - starred_url
            - subscriptions_url
            - organizations_url
            - repos_url
            - events_url
            - received_events_url
            - type
            - site_admin
            - email
          properties:
            login:
              type: string
            id:
              type: integer
            avatar_url:
              type: string
              format: uri
            gravatar_id:
              type: string
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            followers_url:
              type: string
              format: uri
            following_url:
              type: string
              format: uri-template
            gists_url:
              type: string
              format: uri-template
            starred_url:
              type: string
              format: uri-template
            subscriptions_url:
              type: string
              format: uri
            organizations_url:
              type: string
              format: uri
            repos_url:
              type: string
              format: uri
            events_url:
              type: string
              format: uri-template
            received_events_url:
              type: string
              format: uri
            type:
              type: string
            site_admin:
              type: boolean
            email:
              type: string
          additionalProperties: false
        marketplace_purchase:
          allOf:
            - $ref: "#/components/schemas/marketplace-purchase"
            - type: object
              required:
                - next_billing_date
              properties:
                next_billing_date:
                  type: string
              tsAdditionalProperties: false
        previous_marketplace_purchase:
          $ref: "#/components/schemas/marketplace-purchase"
      additionalProperties: false
      title: marketplace_purchase pending_change_cancelled event
    marketplace_purchase$purchased:
      type: object
      required:
        - action
        - effective_date
        - sender
        - marketplace_purchase
      properties:
        action:
          type: string
          enum:
            - purchased
        effective_date:
          type: string
        sender:
          type: object
          required:
            - login
            - id
            - avatar_url
            - gravatar_id
            - url
            - html_url
            - followers_url
            - following_url
            - gists_url
            - starred_url
            - subscriptions_url
            - organizations_url
            - repos_url
            - events_url
            - received_events_url
            - type
            - site_admin
            - email
          properties:
            login:
              type: string
            id:
              type: integer
            avatar_url:
              type: string
              format: uri
            gravatar_id:
              type: string
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            followers_url:
              type: string
              format: uri
            following_url:
              type: string
              format: uri-template
            gists_url:
              type: string
              format: uri-template
            starred_url:
              type: string
              format: uri-template
            subscriptions_url:
              type: string
              format: uri
            organizations_url:
              type: string
              format: uri
            repos_url:
              type: string
              format: uri
            events_url:
              type: string
              format: uri-template
            received_events_url:
              type: string
              format: uri
            type:
              type: string
            site_admin:
              type: boolean
            email:
              type: string
          additionalProperties: false
        marketplace_purchase:
          allOf:
            - $ref: "#/components/schemas/marketplace-purchase"
            - type: object
              required:
                - next_billing_date
              properties:
                next_billing_date:
                  type: string
              tsAdditionalProperties: false
        previous_marketplace_purchase:
          $ref: "#/components/schemas/marketplace-purchase"
      additionalProperties: false
      title: marketplace_purchase purchased event
    marketplace_purchase_event:
      oneOf:
        - $ref: "#/components/schemas/marketplace_purchase$cancelled"
        - $ref: "#/components/schemas/marketplace_purchase$changed"
        - $ref: "#/components/schemas/marketplace_purchase$pending_change"
        - $ref: "#/components/schemas/marketplace_purchase$pending_change_cancelled"
        - $ref: "#/components/schemas/marketplace_purchase$purchased"
      discriminator:
        propertyName: action
    member$added:
      type: object
      description: Activity related to repository collaborators. The type of activity
        is specified in the action property.
      required:
        - action
        - member
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - added
        member:
          $ref: "#/components/schemas/user"
          description: The user that was added.
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: member added event
    member$edited:
      type: object
      required:
        - action
        - changes
        - member
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        member:
          $ref: "#/components/schemas/user"
          description: The user who's permissions are changed.
        changes:
          type: object
          description: The changes to the collaborator permissions
          required:
            - old_permission
          properties:
            old_permission:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous permissions of the collaborator if the action was
                    edited.
              additionalProperties: false
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: member edited event
    member$removed:
      type: object
      required:
        - action
        - member
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - removed
        member:
          $ref: "#/components/schemas/user"
          description: The user that was removed.
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: member removed event
    member_event:
      oneOf:
        - $ref: "#/components/schemas/member$added"
        - $ref: "#/components/schemas/member$edited"
        - $ref: "#/components/schemas/member$removed"
      discriminator:
        propertyName: action
    membership$added:
      type: object
      required:
        - action
        - scope
        - member
        - sender
        - team
        - organization
      properties:
        action:
          type: string
          enum:
            - added
        scope:
          type: string
          enum:
            - team
          description: The scope of the membership. Currently, can only be `team`.
        member:
          $ref: "#/components/schemas/user"
          description: The [user](https://docs.github.com/en/rest/reference/users) that
            was added or removed.
        sender:
          $ref: "#/components/schemas/user"
        team:
          $ref: "#/components/schemas/team"
          description: The [team](https://docs.github.com/en/rest/reference/teams) for the
            membership.
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: membership added event
    membership$removed:
      type: object
      required:
        - action
        - scope
        - member
        - sender
        - team
        - organization
      properties:
        action:
          type: string
          enum:
            - removed
        scope:
          type: string
          enum:
            - team
          description: The scope of the membership. Currently, can only be `team`.
        member:
          $ref: "#/components/schemas/user"
          description: The [user](https://docs.github.com/en/rest/reference/users) that
            was added or removed.
        sender:
          $ref: "#/components/schemas/user"
        team:
          $ref: "#/components/schemas/team"
          description: The [team](https://docs.github.com/en/rest/reference/teams) for the
            membership.
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: membership removed event
    membership_event:
      oneOf:
        - $ref: "#/components/schemas/membership$added"
        - $ref: "#/components/schemas/membership$removed"
      discriminator:
        propertyName: action
    meta$deleted:
      type: object
      required:
        - action
        - hook_id
        - hook
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        hook_id:
          type: integer
          description: The id of the modified webhook.
        hook:
          type: object
          description: "The modified webhook. This will contain different keys based on
            the type of webhook it is: repository, organization, business, app,
            or GitHub Marketplace."
          required:
            - type
            - id
            - name
            - active
            - events
            - config
            - updated_at
            - created_at
          properties:
            type:
              type: string
            id:
              type: integer
            name:
              type: string
            active:
              type: boolean
            events:
              type: array
              items:
                type: string
            config:
              type: object
              required:
                - content_type
                - insecure_ssl
                - url
              properties:
                content_type:
                  type: string
                insecure_ssl:
                  type: string
                url:
                  type: string
                  format: uri
              additionalProperties: false
            updated_at:
              type: string
            created_at:
              type: string
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: meta deleted event
    meta_event:
      oneOf:
        - $ref: "#/components/schemas/meta$deleted"
      discriminator:
        propertyName: action
    milestone$closed:
      type: object
      required:
        - action
        - milestone
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - closed
        milestone:
          allOf:
            - $ref: "#/components/schemas/milestone"
            - type: object
              required:
                - state
                - closed_at
              properties:
                state:
                  type: string
                  enum:
                    - closed
                closed_at:
                  type: string
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: milestone closed event
    milestone$created:
      type: object
      required:
        - action
        - milestone
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        milestone:
          allOf:
            - $ref: "#/components/schemas/milestone"
            - type: object
              required:
                - state
                - closed_at
              properties:
                state:
                  type: string
                  enum:
                    - open
                closed_at:
                  type: "null"
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: milestone created event
    milestone$deleted:
      type: object
      required:
        - action
        - milestone
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        milestone:
          $ref: "#/components/schemas/milestone"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: milestone deleted event
    milestone$edited:
      type: object
      required:
        - action
        - changes
        - milestone
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        changes:
          type: object
          description: The changes to the milestone if the action was `edited`.
          properties:
            description:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the description if the action was `edited`.
              additionalProperties: false
            due_on:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the due date if the action was `edited`.
              additionalProperties: false
            title:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the title if the action was `edited`.
              additionalProperties: false
          additionalProperties: false
        milestone:
          $ref: "#/components/schemas/milestone"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: milestone edited event
    milestone$opened:
      type: object
      required:
        - action
        - milestone
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - opened
        milestone:
          allOf:
            - $ref: "#/components/schemas/milestone"
            - type: object
              required:
                - state
                - closed_at
              properties:
                state:
                  type: string
                  enum:
                    - open
                closed_at:
                  type: "null"
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: milestone opened event
    milestone_event:
      oneOf:
        - $ref: "#/components/schemas/milestone$closed"
        - $ref: "#/components/schemas/milestone$created"
        - $ref: "#/components/schemas/milestone$deleted"
        - $ref: "#/components/schemas/milestone$edited"
        - $ref: "#/components/schemas/milestone$opened"
      discriminator:
        propertyName: action
    org_block$blocked:
      type: object
      required:
        - action
        - blocked_user
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - blocked
        blocked_user:
          $ref: "#/components/schemas/user"
          description: Information about the user that was blocked or unblocked.
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: org_block blocked event
    org_block$unblocked:
      type: object
      required:
        - action
        - blocked_user
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - unblocked
        blocked_user:
          $ref: "#/components/schemas/user"
          description: Information about the user that was blocked or unblocked.
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: org_block unblocked event
    org_block_event:
      oneOf:
        - $ref: "#/components/schemas/org_block$blocked"
        - $ref: "#/components/schemas/org_block$unblocked"
      discriminator:
        propertyName: action
    organization$deleted:
      type: object
      required:
        - action
        - membership
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        membership:
          $ref: "#/components/schemas/membership"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: organization deleted event
    organization$member_added:
      type: object
      required:
        - action
        - membership
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - member_added
        membership:
          $ref: "#/components/schemas/membership"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: organization member_added event
    organization$member_invited:
      type: object
      required:
        - action
        - invitation
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - member_invited
        invitation:
          type: object
          description: The invitation for the user or email if the action is
            `member_invited`.
          additionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: organization member_invited event
    organization$member_removed:
      type: object
      required:
        - action
        - membership
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - member_removed
        membership:
          $ref: "#/components/schemas/membership"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: organization member_removed event
    organization$renamed:
      type: object
      required:
        - action
        - membership
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - renamed
        membership:
          $ref: "#/components/schemas/membership"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: organization renamed event
    organization_event:
      oneOf:
        - $ref: "#/components/schemas/organization$deleted"
        - $ref: "#/components/schemas/organization$member_added"
        - $ref: "#/components/schemas/organization$member_invited"
        - $ref: "#/components/schemas/organization$member_removed"
        - $ref: "#/components/schemas/organization$renamed"
      discriminator:
        propertyName: action
    package$published:
      type: object
      required:
        - action
        - package
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - published
        package:
          type: object
          description: Information about the package.
          required:
            - id
            - name
            - package_type
            - html_url
            - created_at
            - updated_at
            - owner
            - package_version
            - registry
          properties:
            id:
              type: integer
            name:
              type: string
            package_type:
              type: string
            html_url:
              type: string
              format: uri
            created_at:
              type: string
            updated_at:
              type: string
            owner:
              $ref: "#/components/schemas/user"
            package_version:
              type: object
              required:
                - id
                - version
                - summary
                - body
                - body_html
                - release
                - manifest
                - html_url
                - tag_name
                - target_commitish
                - target_oid
                - draft
                - prerelease
                - created_at
                - updated_at
                - metadata
                - package_files
                - author
                - installation_command
              properties:
                id:
                  type: integer
                version:
                  type: string
                summary:
                  type: string
                body:
                  type: string
                body_html:
                  type: string
                release:
                  type: object
                  required:
                    - url
                    - html_url
                    - id
                    - tag_name
                    - target_commitish
                    - name
                    - draft
                    - author
                    - prerelease
                    - created_at
                    - published_at
                  properties:
                    url:
                      type: string
                      format: uri
                    html_url:
                      type: string
                      format: uri
                    id:
                      type: integer
                    tag_name:
                      type: string
                    target_commitish:
                      type: string
                    name:
                      type: string
                    draft:
                      type: boolean
                    author:
                      $ref: "#/components/schemas/user"
                    prerelease:
                      type: boolean
                    created_at:
                      type: string
                    published_at:
                      type: string
                  additionalProperties: false
                manifest:
                  type: string
                html_url:
                  type: string
                  format: uri
                tag_name:
                  type: string
                target_commitish:
                  type: string
                target_oid:
                  type: string
                draft:
                  type: boolean
                prerelease:
                  type: boolean
                created_at:
                  type: string
                updated_at:
                  type: string
                metadata:
                  type: array
                  items: {}
                package_files:
                  type: array
                  items:
                    type: object
                    required:
                      - download_url
                      - id
                      - name
                      - sha256
                      - sha1
                      - md5
                      - content_type
                      - state
                      - size
                      - created_at
                      - updated_at
                    properties:
                      download_url:
                        type: string
                        format: uri
                      id:
                        type: integer
                      name:
                        type: string
                      sha256:
                        type: string
                      sha1:
                        type: string
                      md5:
                        type: string
                      content_type:
                        type: string
                      state:
                        type: string
                      size:
                        type: integer
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    additionalProperties: false
                author:
                  $ref: "#/components/schemas/user"
                installation_command:
                  type: string
              additionalProperties: false
            registry:
              type: object
              required:
                - about_url
                - name
                - type
                - url
                - vendor
              properties:
                about_url:
                  type: string
                  format: uri
                name:
                  type: string
                type:
                  type: string
                url:
                  type: string
                  format: uri
                vendor:
                  type: string
              additionalProperties: false
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: package published event
    package$updated:
      type: object
      required:
        - action
        - package
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - updated
        package:
          type: object
          description: Information about the package.
          required:
            - id
            - name
            - package_type
            - html_url
            - created_at
            - updated_at
            - owner
            - package_version
            - registry
          properties:
            id:
              type: integer
            name:
              type: string
            package_type:
              type: string
            html_url:
              type: string
              format: uri
            created_at:
              type: string
            updated_at:
              type: string
            owner:
              $ref: "#/components/schemas/user"
            package_version:
              type: object
              required:
                - id
                - version
                - summary
                - body
                - body_html
                - release
                - manifest
                - html_url
                - tag_name
                - target_commitish
                - target_oid
                - draft
                - prerelease
                - created_at
                - updated_at
                - metadata
                - package_files
                - author
                - installation_command
              properties:
                id:
                  type: integer
                version:
                  type: string
                summary:
                  type: string
                body:
                  type: string
                body_html:
                  type: string
                release:
                  type: object
                  required:
                    - url
                    - html_url
                    - id
                    - tag_name
                    - target_commitish
                    - name
                    - draft
                    - author
                    - prerelease
                    - created_at
                    - published_at
                  properties:
                    url:
                      type: string
                      format: uri
                    html_url:
                      type: string
                      format: uri
                    id:
                      type: integer
                    tag_name:
                      type: string
                    target_commitish:
                      type: string
                    name:
                      type: string
                    draft:
                      type: boolean
                    author:
                      $ref: "#/components/schemas/user"
                    prerelease:
                      type: boolean
                    created_at:
                      type: string
                    published_at:
                      type: string
                  additionalProperties: false
                manifest:
                  type: string
                html_url:
                  type: string
                  format: uri
                tag_name:
                  type: string
                target_commitish:
                  type: string
                target_oid:
                  type: string
                draft:
                  type: boolean
                prerelease:
                  type: boolean
                created_at:
                  type: string
                updated_at:
                  type: string
                metadata:
                  type: array
                  items: {}
                package_files:
                  type: array
                  items:
                    type: object
                    required:
                      - download_url
                      - id
                      - name
                      - sha256
                      - sha1
                      - md5
                      - content_type
                      - state
                      - size
                      - created_at
                      - updated_at
                    properties:
                      download_url:
                        type: string
                        format: uri
                      id:
                        type: integer
                      name:
                        type: string
                      sha256:
                        type: string
                      sha1:
                        type: string
                      md5:
                        type: string
                      content_type:
                        type: string
                      state:
                        type: string
                      size:
                        type: integer
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    additionalProperties: false
                author:
                  $ref: "#/components/schemas/user"
                installation_command:
                  type: string
              additionalProperties: false
            registry:
              type: object
              required:
                - about_url
                - name
                - type
                - url
                - vendor
              properties:
                about_url:
                  type: string
                  format: uri
                name:
                  type: string
                type:
                  type: string
                url:
                  type: string
                  format: uri
                vendor:
                  type: string
              additionalProperties: false
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: package updated event
    package_event:
      oneOf:
        - $ref: "#/components/schemas/package$published"
        - $ref: "#/components/schemas/package$updated"
      discriminator:
        propertyName: action
    page_build$event:
      description: Page Build
      type: object
      required:
        - id
        - build
        - repository
        - sender
      properties:
        id:
          type: integer
        build:
          type: object
          description: The [List GitHub Pages
            builds](https://docs.github.com/en/rest/reference/repos#list-github-pages-builds)
            itself.
          required:
            - url
            - status
            - error
            - pusher
            - commit
            - duration
            - created_at
            - updated_at
          properties:
            url:
              type: string
              format: uri
            status:
              type: string
            error:
              type: object
              required:
                - message
              properties:
                message:
                  type:
                    - string
                    - "null"
              additionalProperties: false
            pusher:
              $ref: "#/components/schemas/user"
            commit:
              type: string
            duration:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: page_build event
    ping$event:
      type: object
      required:
        - zen
        - hook_id
        - hook
      properties:
        zen:
          type: string
        hook_id:
          type: integer
        hook:
          type: object
          description: The [webhook
            configuration](https://docs.github.com/en/rest/reference/repos#get-a-repository-webhook).
          required:
            - type
            - id
            - name
            - active
            - events
            - config
            - updated_at
            - created_at
            - url
            - ping_url
          properties:
            type:
              type: string
            id:
              type: integer
            name:
              type: string
            active:
              type: boolean
            events:
              type: array
              items:
                type: string
            config:
              type: object
              required:
                - content_type
                - url
                - insecure_ssl
              properties:
                content_type:
                  type: string
                secret:
                  type: string
                url:
                  type: string
                  format: uri
                insecure_ssl:
                  type: string
              additionalProperties: false
            updated_at:
              type: string
            created_at:
              type: string
            url:
              type: string
              format: uri
            test_url:
              type: string
              format: uri
            ping_url:
              type: string
              format: uri
            last_response:
              type: object
              required:
                - code
                - status
                - message
              properties:
                code:
                  type: "null"
                status:
                  type: string
                message:
                  type: "null"
              additionalProperties: false
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: ping event
    project$closed:
      type: object
      required:
        - action
        - project
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - closed
        project:
          $ref: "#/components/schemas/project"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: project closed event
    project$created:
      type: object
      required:
        - action
        - project
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        project:
          $ref: "#/components/schemas/project"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: project created event
    project$deleted:
      type: object
      required:
        - action
        - project
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        project:
          $ref: "#/components/schemas/project"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: project deleted event
    project$edited:
      type: object
      required:
        - action
        - changes
        - project
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        changes:
          type: object
          description: The changes to the project if the action was `edited`.
          properties:
            name:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The changes to the project if the action was `edited`.
              additionalProperties: false
            body:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the body if the action was `edited`.
              additionalProperties: false
          additionalProperties: false
        project:
          $ref: "#/components/schemas/project"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: project edited event
    project$reopened:
      type: object
      required:
        - action
        - project
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - reopened
        project:
          $ref: "#/components/schemas/project"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: project reopened event
    project_event:
      oneOf:
        - $ref: "#/components/schemas/project$closed"
        - $ref: "#/components/schemas/project$created"
        - $ref: "#/components/schemas/project$deleted"
        - $ref: "#/components/schemas/project$edited"
        - $ref: "#/components/schemas/project$reopened"
      discriminator:
        propertyName: action
    project_card$converted:
      type: object
      required:
        - action
        - changes
        - project_card
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - converted
        changes:
          type: object
          required:
            - note
          properties:
            note:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
              additionalProperties: false
          additionalProperties: false
        project_card:
          $ref: "#/components/schemas/project-card"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: project_card converted event
    project_card$created:
      type: object
      required:
        - action
        - project_card
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        project_card:
          $ref: "#/components/schemas/project-card"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: project_card created event
    project_card$deleted:
      type: object
      required:
        - action
        - project_card
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        project_card:
          $ref: "#/components/schemas/project-card"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: project_card deleted event
    project_card$edited:
      type: object
      required:
        - action
        - changes
        - project_card
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        changes:
          type: object
          required:
            - note
          properties:
            note:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
              additionalProperties: false
          additionalProperties: false
        project_card:
          $ref: "#/components/schemas/project-card"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: project_card edited event
    project_card$moved:
      type: object
      required:
        - action
        - changes
        - project_card
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - moved
        changes:
          type: object
          required:
            - column_id
          properties:
            column_id:
              type: object
              required:
                - from
              properties:
                from:
                  type: integer
              additionalProperties: false
          additionalProperties: false
        project_card:
          allOf:
            - $ref: "#/components/schemas/project-card"
            - type: object
              required:
                - after_id
              properties:
                after_id:
                  type: "null"
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: project_card moved event
    project_card_event:
      oneOf:
        - $ref: "#/components/schemas/project_card$converted"
        - $ref: "#/components/schemas/project_card$created"
        - $ref: "#/components/schemas/project_card$deleted"
        - $ref: "#/components/schemas/project_card$edited"
        - $ref: "#/components/schemas/project_card$moved"
      discriminator:
        propertyName: action
    project_column$created:
      type: object
      required:
        - action
        - project_column
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        project_column:
          $ref: "#/components/schemas/project-column"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: project_column created event
    project_column$deleted:
      type: object
      required:
        - action
        - project_column
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        project_column:
          $ref: "#/components/schemas/project-column"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: project_column deleted event
    project_column$edited:
      type: object
      required:
        - action
        - changes
        - project_column
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        changes:
          type: object
          properties:
            name:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
              additionalProperties: false
          additionalProperties: false
        project_column:
          $ref: "#/components/schemas/project-column"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: project_column edited event
    project_column$moved:
      type: object
      required:
        - action
        - project_column
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - moved
        project_column:
          $ref: "#/components/schemas/project-column"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: project_column moved event
    project_column_event:
      oneOf:
        - $ref: "#/components/schemas/project_column$created"
        - $ref: "#/components/schemas/project_column$deleted"
        - $ref: "#/components/schemas/project_column$edited"
        - $ref: "#/components/schemas/project_column$moved"
      discriminator:
        propertyName: action
    public$event:
      type: object
      required:
        - repository
        - sender
      description: When a private repository is made public.
      properties:
        repository:
          allOf:
            - $ref: "#/components/schemas/repository"
            - type: object
              required:
                - private
              properties:
                private:
                  type: boolean
                  enum:
                    - false
              tsAdditionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: public event
    pull_request$assigned:
      type: object
      required:
        - action
        - number
        - pull_request
        - assignee
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - assigned
        number:
          type: integer
          description: The pull request number.
        pull_request:
          $ref: "#/components/schemas/pull-request"
        assignee:
          $ref: "#/components/schemas/user"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request assigned event
    pull_request$auto_merge_disabled:
      type: object
      required:
        - action
        - number
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - auto_merge_disabled
        number:
          type: integer
        pull_request:
          $ref: "#/components/schemas/pull-request"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request auto_merge_disabled event
    pull_request$auto_merge_enabled:
      type: object
      required:
        - action
        - number
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - auto_merge_enabled
        number:
          type: integer
        pull_request:
          $ref: "#/components/schemas/pull-request"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request auto_merge_enabled event
    pull_request$closed:
      type: object
      required:
        - action
        - number
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - closed
        number:
          type: integer
          description: The pull request number.
        pull_request:
          allOf:
            - $ref: "#/components/schemas/pull-request"
            - type: object
              required:
                - state
                - closed_at
                - merged
              properties:
                state:
                  type: string
                  enum:
                    - closed
                  description: State of this Pull Request. Either `open` or `closed`.
                closed_at:
                  type: string
                  format: date-time
                merged:
                  type: boolean
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request closed event
    pull_request$converted_to_draft:
      type: object
      required:
        - action
        - number
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - converted_to_draft
        number:
          type: integer
          description: The pull request number.
        pull_request:
          allOf:
            - $ref: "#/components/schemas/pull-request"
            - type: object
              required:
                - closed_at
                - merged_at
                - merge_commit_sha
                - draft
                - merged
                - merged_by
              properties:
                closed_at:
                  type: "null"
                merged_at:
                  type: "null"
                merge_commit_sha:
                  type: "null"
                draft:
                  type: boolean
                  enum:
                    - true
                  description: Indicates whether or not the pull request is a draft.
                merged:
                  type: boolean
                merged_by:
                  type: "null"
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request converted_to_draft event
    pull_request$edited:
      type: object
      required:
        - action
        - changes
        - number
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        number:
          type: integer
          description: The pull request number.
        changes:
          type: object
          description: The changes to the comment if the action was `edited`.
          properties:
            body:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the body if the action was `edited`.
              additionalProperties: false
            title:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the title if the action was `edited`.
              additionalProperties: false
          additionalProperties: false
        pull_request:
          $ref: "#/components/schemas/pull-request"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request edited event
    pull_request$labeled:
      type: object
      required:
        - action
        - number
        - pull_request
        - label
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - labeled
        number:
          type: integer
          description: The pull request number.
        pull_request:
          $ref: "#/components/schemas/pull-request"
        label:
          $ref: "#/components/schemas/label"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request labeled event
    pull_request$locked:
      type: object
      required:
        - action
        - number
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - locked
        number:
          type: integer
          description: The pull request number.
        pull_request:
          $ref: "#/components/schemas/pull-request"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request locked event
    pull_request$opened:
      type: object
      required:
        - action
        - number
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - opened
        number:
          type: integer
          description: The pull request number.
        pull_request:
          allOf:
            - $ref: "#/components/schemas/pull-request"
            - type: object
              required:
                - state
                - closed_at
                - merged_at
                - merge_commit_sha
                - active_lock_reason
                - merged_by
              properties:
                state:
                  type: string
                  enum:
                    - open
                closed_at:
                  type: "null"
                merged_at:
                  type: "null"
                merge_commit_sha:
                  type: "null"
                active_lock_reason:
                  type: "null"
                merged_by:
                  type: "null"
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request opened event
    pull_request$ready_for_review:
      type: object
      required:
        - action
        - number
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - ready_for_review
        number:
          type: integer
          description: The pull request number.
        pull_request:
          allOf:
            - $ref: "#/components/schemas/pull-request"
            - type: object
              required:
                - state
                - closed_at
                - merged_at
                - merge_commit_sha
                - draft
                - merged
                - merged_by
              properties:
                state:
                  type: string
                  enum:
                    - open
                closed_at:
                  type: "null"
                merged_at:
                  type: "null"
                merge_commit_sha:
                  type: "null"
                draft:
                  type: boolean
                  enum:
                    - false
                  description: Indicates whether or not the pull request is a draft.
                merged:
                  type: boolean
                merged_by:
                  type: "null"
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request ready_for_review event
    pull_request$reopened:
      type: object
      required:
        - action
        - number
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - reopened
        number:
          type: integer
          description: The pull request number.
        pull_request:
          allOf:
            - $ref: "#/components/schemas/pull-request"
            - type: object
              required:
                - state
                - closed_at
                - merged_at
                - merge_commit_sha
                - merged
                - merged_by
              properties:
                state:
                  type: string
                  enum:
                    - open
                closed_at:
                  type: "null"
                merged_at:
                  type: "null"
                merge_commit_sha:
                  type: "null"
                merged:
                  type: boolean
                merged_by:
                  type: "null"
              tsAdditionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request reopened event
    pull_request$review_request_removed:
      type: object
      required:
        - action
        - number
        - pull_request
        - requested_reviewer
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - review_request_removed
        number:
          type: integer
          description: The pull request number.
        pull_request:
          $ref: "#/components/schemas/pull-request"
        requested_reviewer:
          $ref: "#/components/schemas/user"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request review_request_removed event
    pull_request$review_requested:
      type: object
      required:
        - action
        - number
        - pull_request
        - requested_reviewer
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - review_requested
        number:
          type: integer
          description: The pull request number.
        pull_request:
          $ref: "#/components/schemas/pull-request"
        requested_reviewer:
          $ref: "#/components/schemas/user"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request review_requested event
    pull_request$synchronize:
      type: object
      required:
        - action
        - number
        - before
        - after
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - synchronize
        number:
          type: integer
          description: The pull request number.
        before:
          type: string
        after:
          type: string
        pull_request:
          $ref: "#/components/schemas/pull-request"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request synchronize event
    pull_request$unassigned:
      type: object
      required:
        - action
        - number
        - pull_request
        - assignee
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unassigned
        number:
          type: integer
          description: The pull request number.
        pull_request:
          $ref: "#/components/schemas/pull-request"
        assignee:
          $ref: "#/components/schemas/user"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request unassigned event
    pull_request$unlabeled:
      type: object
      required:
        - action
        - number
        - pull_request
        - label
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unlabeled
        number:
          type: integer
          description: The pull request number.
        pull_request:
          $ref: "#/components/schemas/pull-request"
        label:
          $ref: "#/components/schemas/label"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request unlabeled event
    pull_request$unlocked:
      type: object
      required:
        - action
        - number
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unlocked
        number:
          type: integer
          description: The pull request number.
        pull_request:
          $ref: "#/components/schemas/pull-request"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request unlocked event
    pull_request_event:
      oneOf:
        - $ref: "#/components/schemas/pull_request$assigned"
        - $ref: "#/components/schemas/pull_request$auto_merge_disabled"
        - $ref: "#/components/schemas/pull_request$auto_merge_enabled"
        - $ref: "#/components/schemas/pull_request$closed"
        - $ref: "#/components/schemas/pull_request$converted_to_draft"
        - $ref: "#/components/schemas/pull_request$edited"
        - $ref: "#/components/schemas/pull_request$labeled"
        - $ref: "#/components/schemas/pull_request$locked"
        - $ref: "#/components/schemas/pull_request$opened"
        - $ref: "#/components/schemas/pull_request$ready_for_review"
        - $ref: "#/components/schemas/pull_request$reopened"
        - $ref: "#/components/schemas/pull_request$review_request_removed"
        - $ref: "#/components/schemas/pull_request$review_requested"
        - $ref: "#/components/schemas/pull_request$synchronize"
        - $ref: "#/components/schemas/pull_request$unassigned"
        - $ref: "#/components/schemas/pull_request$unlabeled"
        - $ref: "#/components/schemas/pull_request$unlocked"
      discriminator:
        propertyName: action
    pull_request_review$dismissed:
      type: object
      required:
        - action
        - review
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - dismissed
        review:
          type: object
          description: The review that was affected.
          required:
            - id
            - node_id
            - user
            - body
            - commit_id
            - submitted_at
            - state
            - html_url
            - pull_request_url
            - author_association
            - _links
          properties:
            id:
              type: integer
              description: Unique identifier of the review
            node_id:
              type: string
            user:
              $ref: "#/components/schemas/user"
            body:
              type:
                - string
                - "null"
              description: The text of the review.
            commit_id:
              type: string
              description: A commit SHA for the review.
            submitted_at:
              type: string
              format: date-time
            state:
              type: string
              enum:
                - dismissed
            html_url:
              type: string
              format: uri
            pull_request_url:
              type: string
              format: uri
            author_association:
              $ref: "#/components/schemas/author_association"
            _links:
              type: object
              required:
                - html
                - pull_request
              properties:
                html:
                  $ref: "#/components/schemas/link"
                pull_request:
                  $ref: "#/components/schemas/link"
              additionalProperties: false
          additionalProperties: false
        pull_request:
          $ref: "#/components/schemas/simple-pull-request"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request_review dismissed event
    pull_request_review$edited:
      type: object
      required:
        - action
        - changes
        - review
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        changes:
          type: object
          properties:
            body:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the body if the action was `edited`.
              additionalProperties: false
          additionalProperties: false
        review:
          type: object
          description: The review that was affected.
          required:
            - id
            - node_id
            - user
            - body
            - commit_id
            - submitted_at
            - state
            - html_url
            - pull_request_url
            - author_association
            - _links
          properties:
            id:
              type: integer
              description: Unique identifier of the review
            node_id:
              type: string
            user:
              $ref: "#/components/schemas/user"
            body:
              type:
                - string
                - "null"
              description: The text of the review.
            commit_id:
              type: string
              description: A commit SHA for the review.
            submitted_at:
              type: string
              format: date-time
            state:
              type: string
            html_url:
              type: string
              format: uri
            pull_request_url:
              type: string
              format: uri
            author_association:
              $ref: "#/components/schemas/author_association"
            _links:
              type: object
              required:
                - html
                - pull_request
              properties:
                html:
                  $ref: "#/components/schemas/link"
                pull_request:
                  $ref: "#/components/schemas/link"
              additionalProperties: false
          additionalProperties: false
        pull_request:
          $ref: "#/components/schemas/simple-pull-request"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request_review edited event
    pull_request_review$submitted:
      type: object
      required:
        - action
        - review
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - submitted
        review:
          type: object
          description: The review that was affected.
          required:
            - id
            - node_id
            - user
            - body
            - commit_id
            - submitted_at
            - state
            - html_url
            - pull_request_url
            - author_association
            - _links
          properties:
            id:
              type: integer
              description: Unique identifier of the review
            node_id:
              type: string
            user:
              $ref: "#/components/schemas/user"
            body:
              type:
                - string
                - "null"
              description: The text of the review.
            commit_id:
              type: string
              description: A commit SHA for the review.
            submitted_at:
              type: string
              format: date-time
            state:
              type: string
            html_url:
              type: string
              format: uri
            pull_request_url:
              type: string
              format: uri
            author_association:
              $ref: "#/components/schemas/author_association"
            _links:
              type: object
              required:
                - html
                - pull_request
              properties:
                html:
                  $ref: "#/components/schemas/link"
                pull_request:
                  $ref: "#/components/schemas/link"
              additionalProperties: false
          additionalProperties: false
        pull_request:
          $ref: "#/components/schemas/simple-pull-request"
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request_review submitted event
    pull_request_review_event:
      oneOf:
        - $ref: "#/components/schemas/pull_request_review$dismissed"
        - $ref: "#/components/schemas/pull_request_review$edited"
        - $ref: "#/components/schemas/pull_request_review$submitted"
      discriminator:
        propertyName: action
    pull_request_review_comment$created:
      type: object
      required:
        - action
        - comment
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        comment:
          $ref: "#/components/schemas/pull-request-review-comment"
        pull_request:
          type: object
          required:
            - url
            - id
            - node_id
            - html_url
            - diff_url
            - patch_url
            - issue_url
            - number
            - state
            - locked
            - title
            - user
            - body
            - created_at
            - updated_at
            - closed_at
            - merged_at
            - merge_commit_sha
            - assignee
            - assignees
            - requested_reviewers
            - requested_teams
            - labels
            - milestone
            - commits_url
            - review_comments_url
            - review_comment_url
            - comments_url
            - statuses_url
            - head
            - base
            - _links
            - author_association
            - active_lock_reason
          properties:
            url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            html_url:
              type: string
              format: uri
            diff_url:
              type: string
              format: uri
            patch_url:
              type: string
              format: uri
            issue_url:
              type: string
              format: uri
            number:
              type: integer
            state:
              type: string
              enum:
                - open
                - closed
            locked:
              type: boolean
            title:
              type: string
            user:
              $ref: "#/components/schemas/user"
            body:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            closed_at:
              type:
                - string
                - "null"
            merged_at:
              type:
                - string
                - "null"
            merge_commit_sha:
              type:
                - string
                - "null"
            assignee:
              oneOf:
                - $ref: "#/components/schemas/user"
                - type: "null"
            assignees:
              type: array
              items:
                $ref: "#/components/schemas/user"
            requested_reviewers:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/user"
                  - $ref: "#/components/schemas/team"
            requested_teams:
              type: array
              items:
                $ref: "#/components/schemas/team"
            labels:
              type: array
              items:
                $ref: "#/components/schemas/label"
            milestone:
              oneOf:
                - $ref: "#/components/schemas/milestone"
                - type: "null"
            draft:
              type: boolean
            commits_url:
              type: string
              format: uri
            review_comments_url:
              type: string
              format: uri
            review_comment_url:
              type: string
              format: uri-template
            comments_url:
              type: string
              format: uri
            statuses_url:
              type: string
              format: uri
            head:
              type: object
              required:
                - label
                - ref
                - sha
                - user
                - repo
              properties:
                label:
                  type: string
                ref:
                  type: string
                sha:
                  type: string
                user:
                  $ref: "#/components/schemas/user"
                repo:
                  $ref: "#/components/schemas/repository"
              additionalProperties: false
            base:
              type: object
              required:
                - label
                - ref
                - sha
                - user
                - repo
              properties:
                label:
                  type: string
                ref:
                  type: string
                sha:
                  type: string
                user:
                  $ref: "#/components/schemas/user"
                repo:
                  $ref: "#/components/schemas/repository"
              additionalProperties: false
            _links:
              type: object
              required:
                - self
                - html
                - issue
                - comments
                - review_comments
                - review_comment
                - commits
                - statuses
              properties:
                self:
                  $ref: "#/components/schemas/link"
                html:
                  $ref: "#/components/schemas/link"
                issue:
                  $ref: "#/components/schemas/link"
                comments:
                  $ref: "#/components/schemas/link"
                review_comments:
                  $ref: "#/components/schemas/link"
                review_comment:
                  $ref: "#/components/schemas/link"
                commits:
                  $ref: "#/components/schemas/link"
                statuses:
                  $ref: "#/components/schemas/link"
              additionalProperties: false
            auto_merge:
              type: "null"
            author_association:
              $ref: "#/components/schemas/author_association"
            active_lock_reason:
              type:
                - string
                - "null"
              enum:
                - resolved
                - off-topic
                - too heated
                - spam
                - null
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request_review_comment created event
    pull_request_review_comment$deleted:
      type: object
      required:
        - action
        - comment
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        comment:
          $ref: "#/components/schemas/pull-request-review-comment"
        pull_request:
          type: object
          required:
            - url
            - id
            - node_id
            - html_url
            - diff_url
            - patch_url
            - issue_url
            - number
            - state
            - locked
            - title
            - user
            - body
            - created_at
            - updated_at
            - closed_at
            - merged_at
            - merge_commit_sha
            - assignee
            - assignees
            - requested_reviewers
            - requested_teams
            - labels
            - milestone
            - commits_url
            - review_comments_url
            - review_comment_url
            - comments_url
            - statuses_url
            - head
            - base
            - _links
            - author_association
            - active_lock_reason
          properties:
            url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            html_url:
              type: string
              format: uri
            diff_url:
              type: string
              format: uri
            patch_url:
              type: string
              format: uri
            issue_url:
              type: string
              format: uri
            number:
              type: integer
            state:
              type: string
              enum:
                - open
                - closed
            locked:
              type: boolean
            title:
              type: string
            user:
              $ref: "#/components/schemas/user"
            body:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            closed_at:
              type:
                - string
                - "null"
            merged_at:
              type:
                - string
                - "null"
            merge_commit_sha:
              type:
                - string
                - "null"
            assignee:
              oneOf:
                - $ref: "#/components/schemas/user"
                - type: "null"
            assignees:
              type: array
              items:
                $ref: "#/components/schemas/user"
            requested_reviewers:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/user"
                  - $ref: "#/components/schemas/team"
            requested_teams:
              type: array
              items:
                $ref: "#/components/schemas/team"
            labels:
              type: array
              items:
                $ref: "#/components/schemas/label"
            milestone:
              oneOf:
                - $ref: "#/components/schemas/milestone"
                - type: "null"
            draft:
              type: boolean
            commits_url:
              type: string
              format: uri
            review_comments_url:
              type: string
              format: uri
            review_comment_url:
              type: string
              format: uri-template
            comments_url:
              type: string
              format: uri
            statuses_url:
              type: string
              format: uri
            head:
              type: object
              required:
                - label
                - ref
                - sha
                - user
                - repo
              properties:
                label:
                  type: string
                ref:
                  type: string
                sha:
                  type: string
                user:
                  $ref: "#/components/schemas/user"
                repo:
                  $ref: "#/components/schemas/repository"
              additionalProperties: false
            base:
              type: object
              required:
                - label
                - ref
                - sha
                - user
                - repo
              properties:
                label:
                  type: string
                ref:
                  type: string
                sha:
                  type: string
                user:
                  $ref: "#/components/schemas/user"
                repo:
                  $ref: "#/components/schemas/repository"
              additionalProperties: false
            _links:
              type: object
              required:
                - self
                - html
                - issue
                - comments
                - review_comments
                - review_comment
                - commits
                - statuses
              properties:
                self:
                  $ref: "#/components/schemas/link"
                html:
                  $ref: "#/components/schemas/link"
                issue:
                  $ref: "#/components/schemas/link"
                comments:
                  $ref: "#/components/schemas/link"
                review_comments:
                  $ref: "#/components/schemas/link"
                review_comment:
                  $ref: "#/components/schemas/link"
                commits:
                  $ref: "#/components/schemas/link"
                statuses:
                  $ref: "#/components/schemas/link"
              additionalProperties: false
            auto_merge:
              type: "null"
            author_association:
              $ref: "#/components/schemas/author_association"
            active_lock_reason:
              type:
                - string
                - "null"
              enum:
                - resolved
                - off-topic
                - too heated
                - spam
                - null
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request_review_comment deleted event
    pull_request_review_comment$edited:
      type: object
      required:
        - action
        - changes
        - comment
        - pull_request
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        changes:
          type: object
          description: The changes to the comment.
          properties:
            body:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the body.
              additionalProperties: false
          additionalProperties: false
        comment:
          $ref: "#/components/schemas/pull-request-review-comment"
        pull_request:
          type: object
          required:
            - url
            - id
            - node_id
            - html_url
            - diff_url
            - patch_url
            - issue_url
            - number
            - state
            - locked
            - title
            - user
            - body
            - created_at
            - updated_at
            - closed_at
            - merged_at
            - merge_commit_sha
            - assignee
            - assignees
            - requested_reviewers
            - requested_teams
            - labels
            - milestone
            - commits_url
            - review_comments_url
            - review_comment_url
            - comments_url
            - statuses_url
            - head
            - base
            - _links
            - author_association
            - active_lock_reason
          properties:
            url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            html_url:
              type: string
              format: uri
            diff_url:
              type: string
              format: uri
            patch_url:
              type: string
              format: uri
            issue_url:
              type: string
              format: uri
            number:
              type: integer
            state:
              type: string
              enum:
                - open
                - closed
            locked:
              type: boolean
            title:
              type: string
            user:
              $ref: "#/components/schemas/user"
            body:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            closed_at:
              type:
                - string
                - "null"
            merged_at:
              type:
                - string
                - "null"
            merge_commit_sha:
              type:
                - string
                - "null"
            assignee:
              oneOf:
                - $ref: "#/components/schemas/user"
                - type: "null"
            assignees:
              type: array
              items:
                $ref: "#/components/schemas/user"
            requested_reviewers:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/user"
                  - $ref: "#/components/schemas/team"
            requested_teams:
              type: array
              items:
                $ref: "#/components/schemas/team"
            labels:
              type: array
              items:
                $ref: "#/components/schemas/label"
            milestone:
              oneOf:
                - $ref: "#/components/schemas/milestone"
                - type: "null"
            draft:
              type: boolean
            commits_url:
              type: string
              format: uri
            review_comments_url:
              type: string
              format: uri
            review_comment_url:
              type: string
              format: uri-template
            comments_url:
              type: string
              format: uri
            statuses_url:
              type: string
              format: uri
            head:
              type: object
              required:
                - label
                - ref
                - sha
                - user
                - repo
              properties:
                label:
                  type: string
                ref:
                  type: string
                sha:
                  type: string
                user:
                  $ref: "#/components/schemas/user"
                repo:
                  $ref: "#/components/schemas/repository"
              additionalProperties: false
            base:
              type: object
              required:
                - label
                - ref
                - sha
                - user
                - repo
              properties:
                label:
                  type: string
                ref:
                  type: string
                sha:
                  type: string
                user:
                  $ref: "#/components/schemas/user"
                repo:
                  $ref: "#/components/schemas/repository"
              additionalProperties: false
            _links:
              type: object
              required:
                - self
                - html
                - issue
                - comments
                - review_comments
                - review_comment
                - commits
                - statuses
              properties:
                self:
                  $ref: "#/components/schemas/link"
                html:
                  $ref: "#/components/schemas/link"
                issue:
                  $ref: "#/components/schemas/link"
                comments:
                  $ref: "#/components/schemas/link"
                review_comments:
                  $ref: "#/components/schemas/link"
                review_comment:
                  $ref: "#/components/schemas/link"
                commits:
                  $ref: "#/components/schemas/link"
                statuses:
                  $ref: "#/components/schemas/link"
              additionalProperties: false
            auto_merge:
              type: "null"
            author_association:
              $ref: "#/components/schemas/author_association"
            active_lock_reason:
              type:
                - string
                - "null"
              enum:
                - resolved
                - off-topic
                - too heated
                - spam
                - null
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: pull_request_review_comment edited event
    pull_request_review_comment_event:
      oneOf:
        - $ref: "#/components/schemas/pull_request_review_comment$created"
        - $ref: "#/components/schemas/pull_request_review_comment$deleted"
        - $ref: "#/components/schemas/pull_request_review_comment$edited"
      discriminator:
        propertyName: action
    push$event:
      type: object
      required:
        - ref
        - before
        - after
        - created
        - deleted
        - forced
        - base_ref
        - compare
        - commits
        - head_commit
        - repository
        - pusher
        - sender
      properties:
        ref:
          type: string
          description: "The full git ref that was pushed. Example: `refs/heads/main`."
        before:
          type: string
          description: The SHA of the most recent commit on `ref` before the push.
        after:
          type: string
          description: The SHA of the most recent commit on `ref` after the push.
        created:
          type: boolean
        deleted:
          type: boolean
        forced:
          type: boolean
        base_ref:
          type:
            - string
            - "null"
        compare:
          type: string
        commits:
          type: array
          description: An array of commit objects describing the pushed commits.
          items:
            $ref: "#/components/schemas/commit"
        head_commit:
          oneOf:
            - $ref: "#/components/schemas/commit"
            - type: "null"
        repository:
          $ref: "#/components/schemas/repository"
        pusher:
          $ref: "#/components/schemas/committer"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: push event
    release$created:
      type: object
      required:
        - action
        - release
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        release:
          type: object
          description: The
            [release](https://docs.github.com/en/rest/reference/repos/#get-a-release)
            object.
          required:
            - url
            - assets_url
            - upload_url
            - html_url
            - id
            - node_id
            - tag_name
            - target_commitish
            - name
            - draft
            - author
            - prerelease
            - created_at
            - published_at
            - assets
            - tarball_url
            - zipball_url
            - body
          properties:
            url:
              type: string
              format: uri
            assets_url:
              type: string
              format: uri
            upload_url:
              type: string
              format: uri-template
            html_url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            tag_name:
              type: string
              description: The name of the tag.
            target_commitish:
              type: string
              description: Specifies the commitish value that determines where the Git tag is
                created from.
            name:
              type: "null"
            draft:
              type: boolean
              description: true to create a draft (unpublished) release, false to create a
                published one.
            author:
              $ref: "#/components/schemas/user"
            prerelease:
              type: boolean
              description: Whether the release is identified as a prerelease or a full
                release.
            created_at:
              type:
                - string
                - "null"
              format: date-time
            published_at:
              type:
                - string
                - "null"
              format: date-time
            assets:
              type: array
              items:
                $ref: "#/components/schemas/release-asset"
            tarball_url:
              type:
                - string
                - "null"
              format: uri
            zipball_url:
              type:
                - string
                - "null"
              format: uri
            body:
              type:
                - string
                - "null"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: release created event
    release$deleted:
      type: object
      required:
        - action
        - release
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        release:
          type: object
          description: The
            [release](https://docs.github.com/en/rest/reference/repos/#get-a-release)
            object.
          required:
            - url
            - assets_url
            - upload_url
            - html_url
            - id
            - node_id
            - tag_name
            - target_commitish
            - name
            - draft
            - author
            - prerelease
            - created_at
            - published_at
            - assets
            - tarball_url
            - zipball_url
            - body
          properties:
            url:
              type: string
              format: uri
            assets_url:
              type: string
              format: uri
            upload_url:
              type: string
              format: uri-template
            html_url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            tag_name:
              type: string
              description: The name of the tag.
            target_commitish:
              type: string
              description: Specifies the commitish value that determines where the Git tag is
                created from.
            name:
              type: "null"
            draft:
              type: boolean
              description: true to create a draft (unpublished) release, false to create a
                published one.
            author:
              $ref: "#/components/schemas/user"
            prerelease:
              type: boolean
              description: Whether the release is identified as a prerelease or a full
                release.
            created_at:
              type:
                - string
                - "null"
              format: date-time
            published_at:
              type:
                - string
                - "null"
              format: date-time
            assets:
              type: array
              items:
                $ref: "#/components/schemas/release-asset"
            tarball_url:
              type:
                - string
                - "null"
              format: uri
            zipball_url:
              type:
                - string
                - "null"
              format: uri
            body:
              type:
                - string
                - "null"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: release deleted event
    release$edited:
      type: object
      required:
        - action
        - changes
        - release
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        changes:
          type: object
          properties:
            body:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the body if the action was `edited`.
              additionalProperties: false
            name:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the name if the action was `edited`.
              additionalProperties: false
          additionalProperties: false
        release:
          type: object
          description: The
            [release](https://docs.github.com/en/rest/reference/repos/#get-a-release)
            object.
          required:
            - url
            - assets_url
            - upload_url
            - html_url
            - id
            - node_id
            - tag_name
            - target_commitish
            - name
            - draft
            - author
            - prerelease
            - created_at
            - published_at
            - assets
            - tarball_url
            - zipball_url
            - body
          properties:
            url:
              type: string
              format: uri
            assets_url:
              type: string
              format: uri
            upload_url:
              type: string
              format: uri-template
            html_url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            tag_name:
              type: string
              description: The name of the tag.
            target_commitish:
              type: string
              description: Specifies the commitish value that determines where the Git tag is
                created from.
            name:
              type: "null"
            draft:
              type: boolean
              description: true to create a draft (unpublished) release, false to create a
                published one.
            author:
              $ref: "#/components/schemas/user"
            prerelease:
              type: boolean
              description: Whether the release is identified as a prerelease or a full
                release.
            created_at:
              type:
                - string
                - "null"
              format: date-time
            published_at:
              type:
                - string
                - "null"
              format: date-time
            assets:
              type: array
              items:
                $ref: "#/components/schemas/release-asset"
            tarball_url:
              type:
                - string
                - "null"
              format: uri
            zipball_url:
              type:
                - string
                - "null"
              format: uri
            body:
              type:
                - string
                - "null"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: release edited event
    release$prereleased:
      type: object
      required:
        - action
        - release
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - prereleased
        release:
          type: object
          description: The
            [release](https://docs.github.com/en/rest/reference/repos/#get-a-release)
            object.
          required:
            - url
            - assets_url
            - upload_url
            - html_url
            - id
            - node_id
            - tag_name
            - target_commitish
            - name
            - draft
            - author
            - prerelease
            - created_at
            - published_at
            - assets
            - tarball_url
            - zipball_url
            - body
          properties:
            url:
              type: string
              format: uri
            assets_url:
              type: string
              format: uri
            upload_url:
              type: string
              format: uri-template
            html_url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            tag_name:
              type: string
              description: The name of the tag.
            target_commitish:
              type: string
              description: Specifies the commitish value that determines where the Git tag is
                created from.
            name:
              type: "null"
            draft:
              type: boolean
              description: true to create a draft (unpublished) release, false to create a
                published one.
            author:
              $ref: "#/components/schemas/user"
            prerelease:
              type: boolean
              enum:
                - true
              description: Whether the release is identified as a prerelease or a full
                release.
            created_at:
              type:
                - string
                - "null"
              format: date-time
            published_at:
              type:
                - string
                - "null"
              format: date-time
            assets:
              type: array
              items:
                $ref: "#/components/schemas/release-asset"
            tarball_url:
              type:
                - string
                - "null"
              format: uri
            zipball_url:
              type:
                - string
                - "null"
              format: uri
            body:
              type:
                - string
                - "null"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: release prereleased event
    release$published:
      type: object
      required:
        - action
        - release
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - published
        release:
          type: object
          description: The
            [release](https://docs.github.com/en/rest/reference/repos/#get-a-release)
            object.
          required:
            - url
            - assets_url
            - upload_url
            - html_url
            - id
            - node_id
            - tag_name
            - target_commitish
            - name
            - draft
            - author
            - prerelease
            - created_at
            - published_at
            - assets
            - tarball_url
            - zipball_url
            - body
          properties:
            url:
              type: string
              format: uri
            assets_url:
              type: string
              format: uri
            upload_url:
              type: string
              format: uri-template
            html_url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            tag_name:
              type: string
              description: The name of the tag.
            target_commitish:
              type: string
              description: Specifies the commitish value that determines where the Git tag is
                created from.
            name:
              type: "null"
            draft:
              type: boolean
              description: true to create a draft (unpublished) release, false to create a
                published one.
            author:
              $ref: "#/components/schemas/user"
            prerelease:
              type: boolean
              description: Whether the release is identified as a prerelease or a full
                release.
            created_at:
              type:
                - string
                - "null"
              format: date-time
            published_at:
              type:
                - string
                - "null"
              format: date-time
            assets:
              type: array
              items:
                $ref: "#/components/schemas/release-asset"
            tarball_url:
              type:
                - string
                - "null"
              format: uri
            zipball_url:
              type:
                - string
                - "null"
              format: uri
            body:
              type:
                - string
                - "null"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: release published event
    release$released:
      type: object
      required:
        - action
        - release
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - released
        release:
          type: object
          description: The
            [release](https://docs.github.com/en/rest/reference/repos/#get-a-release)
            object.
          required:
            - url
            - assets_url
            - upload_url
            - html_url
            - id
            - node_id
            - tag_name
            - target_commitish
            - name
            - draft
            - author
            - prerelease
            - created_at
            - published_at
            - assets
            - tarball_url
            - zipball_url
            - body
          properties:
            url:
              type: string
              format: uri
            assets_url:
              type: string
              format: uri
            upload_url:
              type: string
              format: uri-template
            html_url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            tag_name:
              type: string
              description: The name of the tag.
            target_commitish:
              type: string
              description: Specifies the commitish value that determines where the Git tag is
                created from.
            name:
              type: "null"
            draft:
              type: boolean
              description: true to create a draft (unpublished) release, false to create a
                published one.
            author:
              $ref: "#/components/schemas/user"
            prerelease:
              type: boolean
              description: Whether the release is identified as a prerelease or a full
                release.
            created_at:
              type:
                - string
                - "null"
              format: date-time
            published_at:
              type:
                - string
                - "null"
              format: date-time
            assets:
              type: array
              items:
                $ref: "#/components/schemas/release-asset"
            tarball_url:
              type:
                - string
                - "null"
              format: uri
            zipball_url:
              type:
                - string
                - "null"
              format: uri
            body:
              type:
                - string
                - "null"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: release released event
    release$unpublished:
      type: object
      required:
        - action
        - release
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unpublished
        release:
          type: object
          description: The
            [release](https://docs.github.com/en/rest/reference/repos/#get-a-release)
            object.
          required:
            - url
            - assets_url
            - upload_url
            - html_url
            - id
            - node_id
            - tag_name
            - target_commitish
            - name
            - draft
            - author
            - prerelease
            - created_at
            - published_at
            - assets
            - tarball_url
            - zipball_url
            - body
          properties:
            url:
              type: string
              format: uri
            assets_url:
              type: string
              format: uri
            upload_url:
              type: string
              format: uri-template
            html_url:
              type: string
              format: uri
            id:
              type: integer
            node_id:
              type: string
            tag_name:
              type: string
              description: The name of the tag.
            target_commitish:
              type: string
              description: Specifies the commitish value that determines where the Git tag is
                created from.
            name:
              type: "null"
            draft:
              type: boolean
              description: true to create a draft (unpublished) release, false to create a
                published one.
            author:
              $ref: "#/components/schemas/user"
            prerelease:
              type: boolean
              description: Whether the release is identified as a prerelease or a full
                release.
            created_at:
              type:
                - string
                - "null"
              format: date-time
            published_at:
              type:
                - string
                - "null"
              format: date-time
            assets:
              type: array
              items:
                $ref: "#/components/schemas/release-asset"
            tarball_url:
              type:
                - string
                - "null"
              format: uri
            zipball_url:
              type:
                - string
                - "null"
              format: uri
            body:
              type:
                - string
                - "null"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: release unpublished event
    release_event:
      oneOf:
        - $ref: "#/components/schemas/release$created"
        - $ref: "#/components/schemas/release$deleted"
        - $ref: "#/components/schemas/release$edited"
        - $ref: "#/components/schemas/release$prereleased"
        - $ref: "#/components/schemas/release$published"
        - $ref: "#/components/schemas/release$released"
        - $ref: "#/components/schemas/release$unpublished"
      discriminator:
        propertyName: action
    repository$archived:
      type: object
      required:
        - action
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - archived
        repository:
          allOf:
            - $ref: "#/components/schemas/repository"
            - type: object
              required:
                - archived
              properties:
                archived:
                  type: boolean
                  enum:
                    - true
                  description: Whether the repository is archived.
                  default: false
              tsAdditionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository archived event
    repository$created:
      type: object
      required:
        - action
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository created event
    repository$deleted:
      type: object
      required:
        - action
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository deleted event
    repository$edited:
      type: object
      required:
        - action
        - changes
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        changes:
          type: object
          properties:
            description:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
              additionalProperties: false
            default_branch:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
              additionalProperties: false
            homepage:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
              additionalProperties: false
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository edited event
    repository$privatized:
      type: object
      required:
        - action
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - privatized
        repository:
          allOf:
            - $ref: "#/components/schemas/repository"
            - type: object
              required:
                - private
              properties:
                private:
                  type: boolean
                  enum:
                    - true
                  description: Whether the repository is private or public.
              tsAdditionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository privatized event
    repository$publicized:
      type: object
      required:
        - action
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - publicized
        repository:
          allOf:
            - $ref: "#/components/schemas/repository"
            - type: object
              required:
                - private
              properties:
                private:
                  type: boolean
                  enum:
                    - false
                  description: Whether the repository is private or public.
              tsAdditionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository publicized event
    repository$renamed:
      type: object
      required:
        - action
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - renamed
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository renamed event
    repository$transferred:
      type: object
      required:
        - action
        - changes
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - transferred
        changes:
          type: object
          required:
            - owner
          properties:
            owner:
              type: object
              required:
                - from
              properties:
                from:
                  type: object
                  properties:
                    user:
                      $ref: "#/components/schemas/user"
                  additionalProperties: false
              additionalProperties: false
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository transferred event
    repository$unarchived:
      type: object
      required:
        - action
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - unarchived
        repository:
          allOf:
            - $ref: "#/components/schemas/repository"
            - type: object
              required:
                - archived
              properties:
                archived:
                  type: boolean
                  enum:
                    - false
                  description: Whether the repository is archived.
                  default: false
              tsAdditionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository unarchived event
    repository_event:
      oneOf:
        - $ref: "#/components/schemas/repository$archived"
        - $ref: "#/components/schemas/repository$created"
        - $ref: "#/components/schemas/repository$deleted"
        - $ref: "#/components/schemas/repository$edited"
        - $ref: "#/components/schemas/repository$privatized"
        - $ref: "#/components/schemas/repository$publicized"
        - $ref: "#/components/schemas/repository$renamed"
        - $ref: "#/components/schemas/repository$transferred"
        - $ref: "#/components/schemas/repository$unarchived"
      discriminator:
        propertyName: action
    repository_dispatch$on-demand-test:
      type: object
      required:
        - action
        - branch
        - client_payload
        - repository
        - sender
        - installation
      properties:
        action:
          type: string
          enum:
            - on-demand-test
        branch:
          type: string
        client_payload:
          type: object
          properties: {}
          additionalProperties: true
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository_dispatch on-demand-test event
    repository_dispatch_event:
      oneOf:
        - $ref: "#/components/schemas/repository_dispatch$on-demand-test"
      discriminator:
        propertyName: action
    repository_import$event:
      type: object
      required:
        - status
        - repository
        - sender
      properties:
        status:
          type: string
          enum:
            - success
            - cancelled
            - failure
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository_import event
    repository_vulnerability_alert$create:
      type: object
      required:
        - action
        - alert
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - create
        alert:
          type: object
          description: The security alert of the vulnerable dependency.
          required:
            - id
            - affected_range
            - affected_package_name
            - external_reference
            - external_identifier
            - fixed_in
          properties:
            id:
              type: integer
            affected_range:
              type: string
            affected_package_name:
              type: string
            dismisser:
              $ref: "#/components/schemas/user"
            dismiss_reason:
              type: string
            dismissed_at:
              type: string
            ghsa_id:
              type: string
            external_reference:
              type: string
              format: uri
            external_identifier:
              type: string
            fixed_in:
              type: string
            created_at:
              type: string
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository_vulnerability_alert create event
    repository_vulnerability_alert$dismiss:
      type: object
      required:
        - action
        - alert
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - dismiss
        alert:
          type: object
          description: The security alert of the vulnerable dependency.
          required:
            - id
            - affected_range
            - affected_package_name
            - dismisser
            - dismiss_reason
            - dismissed_at
            - external_reference
            - external_identifier
            - fixed_in
          properties:
            id:
              type: integer
            affected_range:
              type: string
            affected_package_name:
              type: string
            dismisser:
              $ref: "#/components/schemas/user"
            dismiss_reason:
              type: string
            dismissed_at:
              type: string
            ghsa_id:
              type: string
            external_reference:
              type: string
              format: uri
            external_identifier:
              type: string
            fixed_in:
              type: string
            created_at:
              type: string
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository_vulnerability_alert dismiss event
    repository_vulnerability_alert$resolve:
      type: object
      required:
        - action
        - alert
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - resolve
        alert:
          type: object
          description: The security alert of the vulnerable dependency.
          required:
            - id
            - affected_range
            - affected_package_name
            - external_reference
            - external_identifier
            - fixed_in
          properties:
            id:
              type: integer
            affected_range:
              type: string
            affected_package_name:
              type: string
            dismisser:
              $ref: "#/components/schemas/user"
            dismiss_reason:
              type: string
            dismissed_at:
              type: string
            ghsa_id:
              type: string
            external_reference:
              type: string
              format: uri
            external_identifier:
              type: string
            fixed_in:
              type: string
            created_at:
              type: string
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: repository_vulnerability_alert resolve event
    repository_vulnerability_alert_event:
      oneOf:
        - $ref: "#/components/schemas/repository_vulnerability_alert$create"
        - $ref: "#/components/schemas/repository_vulnerability_alert$dismiss"
        - $ref: "#/components/schemas/repository_vulnerability_alert$resolve"
      discriminator:
        propertyName: action
    secret_scanning_alert$created:
      type: object
      required:
        - action
        - alert
        - repository
      properties:
        action:
          type: string
          enum:
            - created
        alert:
          type: object
          description: The secret scanning alert involved in the event.
          required:
            - number
            - secret_type
            - resolution
            - resolved_by
            - resolved_at
          properties:
            number:
              type: integer
            secret_type:
              type: string
            resolution:
              type: "null"
            resolved_by:
              type: "null"
            resolved_at:
              type: "null"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: secret_scanning_alert created event
    secret_scanning_alert$reopened:
      type: object
      required:
        - action
        - alert
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - reopened
        alert:
          type: object
          description: The secret scanning alert involved in the event.
          required:
            - number
            - secret_type
            - resolution
            - resolved_by
            - resolved_at
          properties:
            number:
              type: integer
            secret_type:
              type: string
            resolution:
              type: "null"
            resolved_by:
              type: "null"
            resolved_at:
              type: "null"
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: secret_scanning_alert reopened event
    secret_scanning_alert$resolved:
      type: object
      required:
        - action
        - alert
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - resolved
        alert:
          type: object
          description: The secret scanning alert involved in the event.
          required:
            - number
            - secret_type
            - resolution
            - resolved_by
            - resolved_at
          properties:
            number:
              type: integer
            secret_type:
              type: string
            resolution:
              type: string
              enum:
                - false_positive
                - wontfix
                - revoked
                - used_in_tests
            resolved_by:
              $ref: "#/components/schemas/user"
            resolved_at:
              type: string
          additionalProperties: false
        repository:
          $ref: "#/components/schemas/repository"
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: secret_scanning_alert resolved event
    secret_scanning_alert_event:
      oneOf:
        - $ref: "#/components/schemas/secret_scanning_alert$created"
        - $ref: "#/components/schemas/secret_scanning_alert$reopened"
        - $ref: "#/components/schemas/secret_scanning_alert$resolved"
      discriminator:
        propertyName: action
    security_advisory$performed:
      type: object
      required:
        - action
        - security_advisory
      properties:
        action:
          type: string
          enum:
            - performed
        security_advisory:
          type: object
          description: The details of the security advisory, including summary,
            description, and severity.
          required:
            - cvss
            - cwes
            - ghsa_id
            - summary
            - description
            - severity
            - identifiers
            - references
            - published_at
            - updated_at
            - withdrawn_at
            - vulnerabilities
          properties:
            cvss:
              type: object
              required:
                - vector_string
                - score
              properties:
                vector_string:
                  type:
                    - string
                    - "null"
                score:
                  type: number
              additionalProperties: false
            cwes:
              type: array
              items:
                type: object
                required:
                  - cwe_id
                  - name
                properties:
                  cwe_id:
                    type: string
                  name:
                    type: string
                additionalProperties: false
            ghsa_id:
              type: string
            summary:
              type: string
            description:
              type: string
            severity:
              type: string
            identifiers:
              type: array
              items:
                type: object
                required:
                  - value
                  - type
                properties:
                  value:
                    type: string
                  type:
                    type: string
                additionalProperties: false
            references:
              type: array
              items:
                type: object
                required:
                  - url
                properties:
                  url:
                    type: string
                    format: uri
                additionalProperties: false
            published_at:
              type: string
            updated_at:
              type: string
            withdrawn_at:
              type:
                - string
                - "null"
            vulnerabilities:
              type: array
              items:
                type: object
                required:
                  - package
                  - severity
                  - vulnerable_version_range
                  - first_patched_version
                properties:
                  package:
                    type: object
                    required:
                      - ecosystem
                      - name
                    properties:
                      ecosystem:
                        type: string
                      name:
                        type: string
                    additionalProperties: false
                  severity:
                    type: string
                  vulnerable_version_range:
                    type: string
                  first_patched_version:
                    type:
                      - object
                      - "null"
                    required:
                      - identifier
                    properties:
                      identifier:
                        type: string
                    additionalProperties: false
                additionalProperties: false
          additionalProperties: false
      additionalProperties: false
      title: security_advisory performed event
    security_advisory$published:
      type: object
      required:
        - action
        - security_advisory
      properties:
        action:
          type: string
          enum:
            - published
        security_advisory:
          type: object
          description: The details of the security advisory, including summary,
            description, and severity.
          required:
            - cvss
            - cwes
            - ghsa_id
            - summary
            - description
            - severity
            - identifiers
            - references
            - published_at
            - updated_at
            - withdrawn_at
            - vulnerabilities
          properties:
            cvss:
              type: object
              required:
                - vector_string
                - score
              properties:
                vector_string:
                  type:
                    - string
                    - "null"
                score:
                  type: number
              additionalProperties: false
            cwes:
              type: array
              items:
                type: object
                required:
                  - cwe_id
                  - name
                properties:
                  cwe_id:
                    type: string
                  name:
                    type: string
                additionalProperties: false
            ghsa_id:
              type: string
            summary:
              type: string
            description:
              type: string
            severity:
              type: string
            identifiers:
              type: array
              items:
                type: object
                required:
                  - value
                  - type
                properties:
                  value:
                    type: string
                  type:
                    type: string
                additionalProperties: false
            references:
              type: array
              items:
                type: object
                required:
                  - url
                properties:
                  url:
                    type: string
                    format: uri
                additionalProperties: false
            published_at:
              type: string
            updated_at:
              type: string
            withdrawn_at:
              type:
                - string
                - "null"
            vulnerabilities:
              type: array
              items:
                type: object
                required:
                  - package
                  - severity
                  - vulnerable_version_range
                  - first_patched_version
                properties:
                  package:
                    type: object
                    required:
                      - ecosystem
                      - name
                    properties:
                      ecosystem:
                        type: string
                      name:
                        type: string
                    additionalProperties: false
                  severity:
                    type: string
                  vulnerable_version_range:
                    type: string
                  first_patched_version:
                    type:
                      - object
                      - "null"
                    required:
                      - identifier
                    properties:
                      identifier:
                        type: string
                    additionalProperties: false
                additionalProperties: false
          additionalProperties: false
      additionalProperties: false
      title: security_advisory published event
    security_advisory$updated:
      type: object
      required:
        - action
        - security_advisory
      properties:
        action:
          type: string
          enum:
            - updated
        security_advisory:
          type: object
          description: The details of the security advisory, including summary,
            description, and severity.
          required:
            - cvss
            - cwes
            - ghsa_id
            - summary
            - description
            - severity
            - identifiers
            - references
            - published_at
            - updated_at
            - withdrawn_at
            - vulnerabilities
          properties:
            cvss:
              type: object
              required:
                - vector_string
                - score
              properties:
                vector_string:
                  type:
                    - string
                    - "null"
                score:
                  type: number
              additionalProperties: false
            cwes:
              type: array
              items:
                type: object
                required:
                  - cwe_id
                  - name
                properties:
                  cwe_id:
                    type: string
                  name:
                    type: string
                additionalProperties: false
            ghsa_id:
              type: string
            summary:
              type: string
            description:
              type: string
            severity:
              type: string
            identifiers:
              type: array
              items:
                type: object
                required:
                  - value
                  - type
                properties:
                  value:
                    type: string
                  type:
                    type: string
                additionalProperties: false
            references:
              type: array
              items:
                type: object
                required:
                  - url
                properties:
                  url:
                    type: string
                    format: uri
                additionalProperties: false
            published_at:
              type: string
            updated_at:
              type: string
            withdrawn_at:
              type:
                - string
                - "null"
            vulnerabilities:
              type: array
              items:
                type: object
                required:
                  - package
                  - severity
                  - vulnerable_version_range
                  - first_patched_version
                properties:
                  package:
                    type: object
                    required:
                      - ecosystem
                      - name
                    properties:
                      ecosystem:
                        type: string
                      name:
                        type: string
                    additionalProperties: false
                  severity:
                    type: string
                  vulnerable_version_range:
                    type: string
                  first_patched_version:
                    type:
                      - object
                      - "null"
                    required:
                      - identifier
                    properties:
                      identifier:
                        type: string
                    additionalProperties: false
                additionalProperties: false
          additionalProperties: false
      additionalProperties: false
      title: security_advisory updated event
    security_advisory_event:
      oneOf:
        - $ref: "#/components/schemas/security_advisory$performed"
        - $ref: "#/components/schemas/security_advisory$published"
        - $ref: "#/components/schemas/security_advisory$updated"
      discriminator:
        propertyName: action
    sponsorship$cancelled:
      type: object
      required:
        - action
        - sponsorship
        - sender
      properties:
        action:
          type: string
          enum:
            - cancelled
        sponsorship:
          type: object
          required:
            - node_id
            - created_at
            - sponsorable
            - sponsor
            - privacy_level
            - tier
          properties:
            node_id:
              type: string
            created_at:
              type: string
            sponsorable:
              $ref: "#/components/schemas/user"
            sponsor:
              $ref: "#/components/schemas/user"
            privacy_level:
              type: string
            tier:
              $ref: "#/components/schemas/sponsorship-tier"
          additionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: sponsorship cancelled event
    sponsorship$created:
      type: object
      required:
        - action
        - sponsorship
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        sponsorship:
          type: object
          required:
            - node_id
            - created_at
            - sponsorable
            - sponsor
            - privacy_level
            - tier
          properties:
            node_id:
              type: string
            created_at:
              type: string
            sponsorable:
              $ref: "#/components/schemas/user"
            sponsor:
              $ref: "#/components/schemas/user"
            privacy_level:
              type: string
            tier:
              $ref: "#/components/schemas/sponsorship-tier"
          additionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: sponsorship created event
    sponsorship$edited:
      type: object
      required:
        - action
        - changes
        - sponsorship
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        sponsorship:
          type: object
          required:
            - node_id
            - created_at
            - sponsorable
            - sponsor
            - privacy_level
            - tier
          properties:
            node_id:
              type: string
            created_at:
              type: string
            sponsorable:
              $ref: "#/components/schemas/user"
            sponsor:
              $ref: "#/components/schemas/user"
            privacy_level:
              type: string
            tier:
              $ref: "#/components/schemas/sponsorship-tier"
          additionalProperties: false
        changes:
          type: object
          properties:
            privacy_level:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The `edited` event types include the details about the change when
                    someone edits a sponsorship to change the privacy.
              additionalProperties: false
          additionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: sponsorship edited event
    sponsorship$pending_cancellation:
      type: object
      required:
        - action
        - sponsorship
        - sender
      properties:
        action:
          type: string
          enum:
            - pending_cancellation
        sponsorship:
          type: object
          required:
            - node_id
            - created_at
            - sponsorable
            - sponsor
            - privacy_level
            - tier
          properties:
            node_id:
              type: string
            created_at:
              type: string
            sponsorable:
              $ref: "#/components/schemas/user"
            sponsor:
              $ref: "#/components/schemas/user"
            privacy_level:
              type: string
            tier:
              $ref: "#/components/schemas/sponsorship-tier"
          additionalProperties: false
        effective_date:
          type: string
          description: The `pending_cancellation` and `pending_tier_change` event types
            will include the date the cancellation or tier change will take
            effect.
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: sponsorship pending_cancellation event
    sponsorship$pending_tier_change:
      type: object
      required:
        - action
        - changes
        - sponsorship
        - sender
      properties:
        action:
          type: string
          enum:
            - pending_tier_change
        sponsorship:
          type: object
          required:
            - node_id
            - created_at
            - sponsorable
            - sponsor
            - privacy_level
            - tier
          properties:
            node_id:
              type: string
            created_at:
              type: string
            sponsorable:
              $ref: "#/components/schemas/user"
            sponsor:
              $ref: "#/components/schemas/user"
            privacy_level:
              type: string
            tier:
              $ref: "#/components/schemas/sponsorship-tier"
          additionalProperties: false
        effective_date:
          type: string
          description: The `pending_cancellation` and `pending_tier_change` event types
            will include the date the cancellation or tier change will take
            effect.
        changes:
          type: object
          required:
            - tier
          properties:
            tier:
              type: object
              required:
                - from
              properties:
                from:
                  $ref: "#/components/schemas/sponsorship-tier"
              additionalProperties: false
          additionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: sponsorship pending_tier_change event
    sponsorship$tier_changed:
      type: object
      required:
        - action
        - changes
        - sponsorship
        - sender
      properties:
        action:
          type: string
          enum:
            - tier_changed
        sponsorship:
          type: object
          required:
            - node_id
            - created_at
            - sponsorable
            - sponsor
            - privacy_level
            - tier
          properties:
            node_id:
              type: string
            created_at:
              type: string
            sponsorable:
              $ref: "#/components/schemas/user"
            sponsor:
              $ref: "#/components/schemas/user"
            privacy_level:
              type: string
            tier:
              $ref: "#/components/schemas/sponsorship-tier"
          additionalProperties: false
        changes:
          type: object
          required:
            - tier
          properties:
            tier:
              type: object
              required:
                - from
              properties:
                from:
                  $ref: "#/components/schemas/sponsorship-tier"
              additionalProperties: false
          additionalProperties: false
        sender:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: sponsorship tier_changed event
    sponsorship_event:
      oneOf:
        - $ref: "#/components/schemas/sponsorship$cancelled"
        - $ref: "#/components/schemas/sponsorship$created"
        - $ref: "#/components/schemas/sponsorship$edited"
        - $ref: "#/components/schemas/sponsorship$pending_cancellation"
        - $ref: "#/components/schemas/sponsorship$pending_tier_change"
        - $ref: "#/components/schemas/sponsorship$tier_changed"
      discriminator:
        propertyName: action
    star$created:
      type: object
      required:
        - action
        - starred_at
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        starred_at:
          type: string
          description: "The time the star was created. This is a timestamp in ISO 8601
            format: `YYYY-MM-DDTHH:MM:SSZ`. Will be `null` for the `deleted`
            action."
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: star created event
    star$deleted:
      type: object
      required:
        - action
        - starred_at
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        starred_at:
          type: "null"
          description: "The time the star was created. This is a timestamp in ISO 8601
            format: `YYYY-MM-DDTHH:MM:SSZ`. Will be `null` for the `deleted`
            action."
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: star deleted event
    star_event:
      oneOf:
        - $ref: "#/components/schemas/star$created"
        - $ref: "#/components/schemas/star$deleted"
      discriminator:
        propertyName: action
    status$event:
      type: object
      required:
        - id
        - sha
        - name
        - target_url
        - context
        - description
        - state
        - commit
        - branches
        - created_at
        - updated_at
        - repository
        - sender
      properties:
        id:
          type: integer
          description: The unique identifier of the status.
        sha:
          type: string
          description: The Commit SHA.
        name:
          type: string
        avatar_url:
          type:
            - string
            - "null"
          format: uri
        target_url:
          type:
            - string
            - "null"
          description: The optional link added to the status.
        context:
          type: string
        description:
          type:
            - string
            - "null"
          description: The optional human-readable description added to the status.
        state:
          type: string
          enum:
            - pending
            - success
            - failure
            - error
          description: The new state. Can be `pending`, `success`, `failure`, or `error`.
        commit:
          type: object
          required:
            - sha
            - node_id
            - commit
            - url
            - html_url
            - comments_url
            - author
            - committer
            - parents
          properties:
            sha:
              type: string
            node_id:
              type: string
            commit:
              type: object
              required:
                - author
                - committer
                - message
                - tree
                - url
                - comment_count
                - verification
              properties:
                author:
                  allOf:
                    - $ref: "#/components/schemas/committer"
                    - type: object
                      required:
                        - date
                      properties:
                        date:
                          type: string
                      tsAdditionalProperties: false
                committer:
                  allOf:
                    - $ref: "#/components/schemas/committer"
                    - type: object
                      required:
                        - date
                      properties:
                        date:
                          type: string
                      tsAdditionalProperties: false
                message:
                  type: string
                tree:
                  type: object
                  required:
                    - sha
                    - url
                  properties:
                    sha:
                      type: string
                    url:
                      type: string
                      format: uri
                  additionalProperties: false
                url:
                  type: string
                  format: uri
                comment_count:
                  type: integer
                verification:
                  type: object
                  required:
                    - verified
                    - reason
                    - signature
                    - payload
                  properties:
                    verified:
                      type: boolean
                    reason:
                      type: string
                      enum:
                        - expired_key
                        - not_signing_key
                        - gpgverify_error
                        - gpgverify_unavailable
                        - unsigned
                        - unknown_signature_type
                        - no_user
                        - unverified_email
                        - bad_email
                        - unknown_key
                        - malformed_signature
                        - invalid
                        - valid
                    signature:
                      type:
                        - string
                        - "null"
                    payload:
                      type:
                        - string
                        - "null"
                  additionalProperties: false
              additionalProperties: false
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            comments_url:
              type: string
              format: uri
            author:
              oneOf:
                - $ref: "#/components/schemas/user"
                - type: "null"
            committer:
              oneOf:
                - $ref: "#/components/schemas/user"
                - type: "null"
            parents:
              type: array
              items:
                type: object
                required:
                  - sha
                  - url
                  - html_url
                properties:
                  sha:
                    type: string
                  url:
                    type: string
                    format: uri
                  html_url:
                    type: string
                    format: uri
                additionalProperties: false
          additionalProperties: false
        branches:
          type: array
          description: An array of branch objects containing the status' SHA. Each branch
            contains the given SHA, but the SHA may or may not be the head of
            the branch. The array includes a maximum of 10 branches.
          items:
            type: object
            required:
              - name
              - commit
              - protected
            properties:
              name:
                type: string
              commit:
                type: object
                required:
                  - sha
                  - url
                properties:
                  sha:
                    type: string
                  url:
                    type: string
                    format: uri
                additionalProperties: false
              protected:
                type: boolean
            additionalProperties: false
        created_at:
          type: string
        updated_at:
          type: string
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: status event
    team$added_to_repository:
      type: object
      required:
        - action
        - team
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - added_to_repository
        team:
          $ref: "#/components/schemas/team"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: team added_to_repository event
    team$created:
      type: object
      required:
        - action
        - team
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - created
        team:
          $ref: "#/components/schemas/team"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: team created event
    team$deleted:
      type: object
      required:
        - action
        - team
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - deleted
        team:
          $ref: "#/components/schemas/team"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: team deleted event
    team$edited:
      type: object
      required:
        - action
        - changes
        - team
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - edited
        changes:
          type: object
          description: The changes to the team if the action was `edited`.
          required: []
          properties:
            description:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the description if the action was `edited`.
              additionalProperties: false
            name:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the name if the action was `edited`.
              additionalProperties: false
            privacy:
              type: object
              required:
                - from
              properties:
                from:
                  type: string
                  description: The previous version of the team's privacy if the action was
                    `edited`.
              additionalProperties: false
            repository:
              type: object
              required:
                - permissions
              properties:
                permissions:
                  type: object
                  required:
                    - from
                  properties:
                    from:
                      type: object
                      properties:
                        admin:
                          type: boolean
                          description: The previous version of the team member's `admin` permission on a
                            repository, if the action was `edited`.
                        pull:
                          type: boolean
                          description: The previous version of the team member's `pull` permission on a
                            repository, if the action was `edited`.
                        push:
                          type: boolean
                          description: The previous version of the team member's `push` permission on a
                            repository, if the action was `edited`.
                      additionalProperties: false
                  additionalProperties: false
              additionalProperties: false
          additionalProperties: false
        team:
          $ref: "#/components/schemas/team"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: team edited event
    team$removed_from_repository:
      type: object
      required:
        - action
        - team
        - organization
        - sender
      properties:
        action:
          type: string
          enum:
            - removed_from_repository
        team:
          $ref: "#/components/schemas/team"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: team removed_from_repository event
    team_event:
      oneOf:
        - $ref: "#/components/schemas/team$added_to_repository"
        - $ref: "#/components/schemas/team$created"
        - $ref: "#/components/schemas/team$deleted"
        - $ref: "#/components/schemas/team$edited"
        - $ref: "#/components/schemas/team$removed_from_repository"
      discriminator:
        propertyName: action
    team_add$event:
      type: object
      required:
        - team
        - repository
        - organization
        - sender
      properties:
        team:
          $ref: "#/components/schemas/team"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: team_add event
    watch$started:
      type: object
      required:
        - action
        - repository
        - sender
      properties:
        action:
          type: string
          enum:
            - started
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
      additionalProperties: false
      title: watch started event
    watch_event:
      oneOf:
        - $ref: "#/components/schemas/watch$started"
      discriminator:
        propertyName: action
    workflow_dispatch$event:
      type: object
      required:
        - inputs
        - ref
        - repository
        - sender
        - workflow
      properties:
        inputs:
          oneOf:
            - type: object
              properties: {}
              additionalProperties: true
            - type: "null"
        ref:
          type: string
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        installation:
          $ref: "#/components/schemas/installation-lite"
        organization:
          $ref: "#/components/schemas/organization"
        workflow:
          type: string
      additionalProperties: false
      title: workflow_dispatch event
    workflow_run$completed:
      type: object
      required:
        - action
        - repository
        - sender
        - workflow
        - workflow_run
      properties:
        action:
          type: string
          enum:
            - completed
        organization:
          $ref: "#/components/schemas/organization"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        workflow:
          $ref: "#/components/schemas/workflow"
        workflow_run:
          allOf:
            - $ref: "#/components/schemas/workflow-run"
            - type: object
              required:
                - conclusion
              properties:
                conclusion:
                  type: string
              tsAdditionalProperties: false
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: workflow_run completed event
    workflow_run$requested:
      type: object
      required:
        - action
        - repository
        - sender
        - workflow
        - workflow_run
      properties:
        action:
          type: string
          enum:
            - requested
        organization:
          $ref: "#/components/schemas/organization"
        repository:
          $ref: "#/components/schemas/repository"
        sender:
          $ref: "#/components/schemas/user"
        workflow:
          $ref: "#/components/schemas/workflow"
        workflow_run:
          allOf:
            - $ref: "#/components/schemas/workflow-run"
            - type: object
              required:
                - conclusion
              properties:
                conclusion:
                  type: "null"
              tsAdditionalProperties: false
        installation:
          $ref: "#/components/schemas/installation-lite"
      additionalProperties: false
      title: workflow_run requested event
    workflow_run_event:
      oneOf:
        - $ref: "#/components/schemas/workflow_run$completed"
        - $ref: "#/components/schemas/workflow_run$requested"
      discriminator:
        propertyName: action
    alert-instance:
      required:
        - ref
        - analysis_key
        - environment
        - state
      type: object
      properties:
        ref:
          type: string
          description: The full Git reference, formatted as `refs/heads/<branch name>`.
        analysis_key:
          type: string
          description: Identifies the configuration under which the analysis was executed.
            For example, in GitHub Actions this includes the workflow filename
            and job name.
        environment:
          type: string
          description: Identifies the variable values associated with the environment in
            which the analysis that generated this alert instance was performed,
            such as the language that was analyzed.
        state:
          type: string
          description: State of a code scanning alert.
          enum:
            - open
            - dismissed
            - fixed
        commit_sha:
          type: string
        message:
          type: object
          properties:
            text:
              type: string
          additionalProperties: false
        location:
          type: object
          properties:
            path:
              type: string
            start_line:
              type: integer
            end_line:
              type: integer
            start_column:
              type: integer
            end_column:
              type: integer
          additionalProperties: false
        classifications:
          type: array
          items:
            type: string
      additionalProperties: false
      title: Alert Instance
    app:
      description: GitHub apps are a new way to extend GitHub. They can be installed
        directly on organizations and user accounts and granted access to
        specific repositories. They come with granular permissions and built-in
        webhooks. GitHub apps are first class actors within GitHub.
      type: object
      required:
        - id
        - node_id
        - owner
        - name
        - description
        - external_url
        - html_url
        - created_at
        - updated_at
      properties:
        id:
          description: Unique identifier of the GitHub app
          type: integer
        slug:
          description: The slug name of the GitHub app
          type: string
        node_id:
          type: string
        owner:
          $ref: "#/components/schemas/user"
        name:
          description: The name of the GitHub app
          type: string
        description:
          type:
            - string
            - "null"
        external_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            administration:
              type: string
              enum:
                - read
                - write
            actions:
              type: string
              enum:
                - read
                - write
            checks:
              type: string
              enum:
                - read
                - write
            contents:
              type: string
              enum:
                - read
                - write
            deployments:
              type: string
              enum:
                - read
                - write
            issues:
              type: string
              enum:
                - read
                - write
            members:
              type: string
              enum:
                - read
                - write
            emails:
              type: string
              enum:
                - read
                - write
            metadata:
              type: string
              enum:
                - read
                - write
            organization_administration:
              type: string
              enum:
                - read
                - write
            organization_hooks:
              type: string
              enum:
                - read
                - write
            organization_packages:
              type: string
              enum:
                - read
                - write
            organization_plan:
              type: string
              enum:
                - read
                - write
            organization_projects:
              type: string
              enum:
                - read
                - write
            organization_user_blocking:
              type: string
              enum:
                - read
                - write
            pages:
              type: string
              enum:
                - read
                - write
            packages:
              type: string
              enum:
                - read
                - write
            pull_requests:
              type: string
              enum:
                - read
                - write
            repository_hooks:
              type: string
              enum:
                - read
                - write
            repository_projects:
              type: string
              enum:
                - read
                - write
            security_events:
              type: string
              enum:
                - read
                - write
            statuses:
              type: string
              enum:
                - read
                - write
            team_discussions:
              type: string
              enum:
                - read
                - write
            vulnerability_alerts:
              type: string
              enum:
                - read
                - write
          additionalProperties: false
        events:
          description: The list of events for the GitHub app
          type: array
          items:
            type: string
      additionalProperties: false
      title: App
    author_association:
      type: string
      description: How the author is associated with the repository.
      enum:
        - COLLABORATOR
        - CONTRIBUTOR
        - FIRST_TIMER
        - FIRST_TIME_CONTRIBUTOR
        - MANNEQUIN
        - MEMBER
        - NONE
        - OWNER
      title: AuthorAssociation
    check-run-deployment:
      type: object
      required:
        - url
        - id
        - node_id
        - task
        - original_environment
        - environment
        - description
        - created_at
        - updated_at
        - statuses_url
        - repository_url
      properties:
        url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        task:
          type: string
        original_environment:
          type: string
        environment:
          type: string
        description:
          type:
            - string
            - "null"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        statuses_url:
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
      additionalProperties: false
      description: A deployment to a repository environment. This will only be
        populated if the check run was created by a GitHub Actions workflow job
        that references an environment.
      title: Check Run Deployment
    check-run-pull-request:
      type: object
      required:
        - url
        - id
        - number
        - head
        - base
      properties:
        url:
          type: string
          format: uri
        id:
          type: integer
        number:
          type: integer
        head:
          type: object
          required:
            - ref
            - sha
            - repo
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              $ref: "#/components/schemas/repo-ref"
          additionalProperties: false
        base:
          type: object
          required:
            - ref
            - sha
            - repo
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              $ref: "#/components/schemas/repo-ref"
          additionalProperties: false
      additionalProperties: false
      title: Check Run Pull Request
    commit-simple:
      type: object
      required:
        - id
        - tree_id
        - message
        - timestamp
        - author
        - committer
      properties:
        id:
          type: string
        tree_id:
          type: string
        message:
          type: string
        timestamp:
          type: string
        author:
          $ref: "#/components/schemas/committer"
        committer:
          $ref: "#/components/schemas/committer"
      additionalProperties: false
      title: SimpleCommit
    commit:
      required:
        - id
        - tree_id
        - distinct
        - message
        - timestamp
        - url
        - author
        - committer
        - added
        - removed
        - modified
      type: object
      properties:
        id:
          type: string
        tree_id:
          type: string
        distinct:
          type: boolean
          description: Whether this commit is distinct from any that have been pushed
            before.
        message:
          type: string
          description: The commit message.
        timestamp:
          type: string
          description: The ISO 8601 timestamp of the commit.
        url:
          type: string
          format: uri
          description: URL that points to the commit API resource.
        author:
          $ref: "#/components/schemas/committer"
        committer:
          $ref: "#/components/schemas/committer"
        added:
          type: array
          items:
            type: string
          description: An array of files added in the commit.
        removed:
          type: array
          items:
            type: string
          description: An array of files modified by the commit.
        modified:
          type: array
          items:
            type: string
          description: An array of files removed in the commit.
      additionalProperties: false
      title: Commit
    committer:
      description: Metaproperties for Git author/committer information.
      required:
        - email
        - name
      type: object
      properties:
        name:
          type: string
          description: The git author's name.
        email:
          description: The git author's email address.
          oneOf:
            - type: string
              format: email
            - type: "null"
        date:
          type: string
          format: date-time
        username:
          type: string
      additionalProperties: false
      title: Committer
    discussion:
      required:
        - repository_url
        - category
        - answer_html_url
        - answer_chosen_at
        - answer_chosen_by
        - html_url
        - id
        - node_id
        - number
        - title
        - user
        - state
        - locked
        - comments
        - created_at
        - updated_at
        - author_association
        - active_lock_reason
        - body
      type: object
      properties:
        repository_url:
          type: string
        category:
          type: object
          required:
            - id
            - repository_id
            - emoji
            - name
            - description
            - created_at
            - updated_at
            - slug
            - is_answerable
          properties:
            id:
              type: integer
            repository_id:
              type: integer
            emoji:
              type: string
            name:
              type: string
            description:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
            slug:
              type: string
            is_answerable:
              type: boolean
          additionalProperties: false
        answer_html_url:
          type:
            - string
            - "null"
        answer_chosen_at:
          type:
            - string
            - "null"
        answer_chosen_by:
          oneOf:
            - $ref: "#/components/schemas/user"
            - type: "null"
        html_url:
          type: string
        id:
          type: integer
        node_id:
          type: string
        number:
          type: integer
        title:
          type: string
        user:
          $ref: "#/components/schemas/user"
        state:
          type: string
          enum:
            - open
            - locked
        locked:
          type: boolean
        comments:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        author_association:
          $ref: "#/components/schemas/author_association"
        active_lock_reason:
          type:
            - string
            - "null"
        body:
          type: string
      additionalProperties: false
      title: Discussion
    github-org:
      type: object
      required:
        - login
        - id
        - node_id
        - avatar_url
        - gravatar_id
        - url
        - html_url
        - followers_url
        - following_url
        - gists_url
        - starred_url
        - subscriptions_url
        - organizations_url
        - repos_url
        - events_url
        - received_events_url
        - type
        - site_admin
      properties:
        login:
          type: string
          const: github
        id:
          type: integer
          const: 9919
        node_id:
          type: string
          const: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
        name:
          type: string
          const: GitHub
        email:
          type: "null"
        avatar_url:
          type: string
          format: uri
          const: https://avatars.githubusercontent.com/u/9919?v=4
        gravatar_id:
          type: string
          const: ""
        url:
          type: string
          format: uri
          const: https://api.github.com/users/github
        html_url:
          type: string
          format: uri
          const: https://github.com/github
        followers_url:
          type: string
          format: uri
          const: https://api.github.com/users/github/followers
        following_url:
          type: string
          format: uri-template
          const: https://api.github.com/users/github/following{/other_user}
        gists_url:
          type: string
          format: uri-template
          const: https://api.github.com/users/github/gists{/gist_id}
        starred_url:
          type: string
          format: uri-template
          const: https://api.github.com/users/github/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          const: https://api.github.com/users/github/subscriptions
        organizations_url:
          type: string
          format: uri
          const: https://api.github.com/users/github/orgs
        repos_url:
          type: string
          format: uri
          const: https://api.github.com/users/github/repos
        events_url:
          type: string
          format: uri-template
          const: https://api.github.com/users/github/events{/privacy}
        received_events_url:
          type: string
          format: uri
          const: https://api.github.com/users/github/received_events
        type:
          type: string
          const: Organization
        site_admin:
          type: boolean
          const: false
      additionalProperties: false
      title: GitHub Org
    installation-lite:
      description: Installation
      type: object
      required:
        - id
        - node_id
      properties:
        id:
          type: integer
          description: The ID of the installation.
        node_id:
          type: string
      additionalProperties: false
      title: InstallationLite
    installation:
      description: The GitHub App installation.
      required:
        - id
        - account
        - repository_selection
        - access_tokens_url
        - repositories_url
        - html_url
        - app_id
        - target_id
        - target_type
        - permissions
        - events
        - created_at
        - updated_at
        - single_file_name
      type: object
      properties:
        id:
          type: integer
          description: The ID of the installation.
        account:
          $ref: "#/components/schemas/user"
        repository_selection:
          type: string
          enum:
            - all
            - selected
          description: Describe whether all repositories have been selected or there's a
            selection involved
        access_tokens_url:
          type: string
          format: uri
        repositories_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        app_id:
          type: integer
        app_slug:
          type: string
        target_id:
          type: integer
          description: The ID of the user or organization this token is being scoped to.
        target_type:
          type: string
          enum:
            - User
            - Organization
        permissions:
          type: object
          required: []
          properties:
            actions:
              type: string
              enum:
                - read
                - write
            administration:
              type: string
              enum:
                - read
                - write
            checks:
              type: string
              enum:
                - read
                - write
            contents:
              type: string
              enum:
                - read
                - write
            content_references:
              type: string
              enum:
                - read
                - write
            deployments:
              type: string
              enum:
                - read
                - write
            discussions:
              type: string
              enum:
                - read
                - write
            environments:
              type: string
              enum:
                - read
                - write
            issues:
              type: string
              enum:
                - read
                - write
            members:
              type: string
              enum:
                - read
                - write
            metadata:
              type: string
              enum:
                - read
                - write
            organization_administration:
              type: string
              enum:
                - read
                - write
            organization_hooks:
              type: string
              enum:
                - read
                - write
            organization_packages:
              type: string
              enum:
                - read
                - write
            organization_plan:
              type: string
              enum:
                - read
                - write
            organization_projects:
              type: string
              enum:
                - read
                - write
            organization_secrets:
              type: string
              enum:
                - read
                - write
            organization_self_hosted_runners:
              type: string
              enum:
                - read
                - write
            organization_user_blocking:
              type: string
              enum:
                - read
                - write
            pages:
              type: string
              enum:
                - read
                - write
            packages:
              type: string
              enum:
                - read
                - write
            pull_requests:
              type: string
              enum:
                - read
                - write
            repository_hooks:
              type: string
              enum:
                - read
                - write
            repository_projects:
              type: string
              enum:
                - read
                - write
            secrets:
              type: string
              enum:
                - read
                - write
            secret_scanning_alerts:
              type: string
              enum:
                - read
                - write
            security_events:
              type: string
              enum:
                - read
                - write
            single_file:
              type: string
              enum:
                - read
                - write
            statuses:
              type: string
              enum:
                - read
                - write
            team_discussions:
              type: string
              enum:
                - read
                - write
            workflows:
              type: string
              enum:
                - read
                - write
            vulnerability_alerts:
              type: string
              enum:
                - read
                - write
          additionalProperties: false
        events:
          type: array
          items:
            type: string
            enum:
              - check_run
              - check_suite
              - code_scanning_alert
              - commit_comment
              - content_reference
              - create
              - delete
              - deployment
              - deployment_review
              - deployment_status
              - deploy_key
              - discussion
              - discussion_comment
              - fork
              - gollum
              - issues
              - issue_comment
              - label
              - member
              - membership
              - milestone
              - organization
              - org_block
              - page_build
              - project
              - project_card
              - project_column
              - public
              - pull_request
              - pull_request_review
              - pull_request_review_comment
              - push
              - registry_package
              - release
              - repository
              - repository_dispatch
              - secret_scanning_alert
              - star
              - status
              - team
              - team_add
              - watch
              - workflow_dispatch
              - workflow_run
        created_at:
          oneOf:
            - type: string
              format: date-time
            - type: integer
        updated_at:
          oneOf:
            - type: string
              format: date-time
            - type: integer
        single_file_name:
          type:
            - string
            - "null"
        has_multiple_single_files:
          type: boolean
        single_file_paths:
          type: array
          items:
            type: string
        suspended_by:
          oneOf:
            - $ref: "#/components/schemas/user"
            - type: "null"
        suspended_at:
          type:
            - string
            - "null"
          format: date-time
      additionalProperties: false
      title: Installation
    issue-comment:
      required:
        - url
        - html_url
        - issue_url
        - id
        - node_id
        - user
        - created_at
        - updated_at
        - author_association
        - performed_via_github_app
        - body
      type: object
      properties:
        url:
          type: string
          format: uri
          description: URL for the issue comment
        html_url:
          type: string
          format: uri
        issue_url:
          type: string
          format: uri
        id:
          type: integer
          description: Unique identifier of the issue comment
        node_id:
          type: string
        user:
          $ref: "#/components/schemas/user"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        author_association:
          $ref: "#/components/schemas/author_association"
        body:
          type: string
          description: Contents of the issue comment
        performed_via_github_app:
          oneOf:
            - $ref: "#/components/schemas/app"
            - type: "null"
      additionalProperties: false
      description: The
        [comment](https://docs.github.com/en/rest/reference/issues#comments)
        itself.
      title: issue comment
    issue:
      required:
        - url
        - repository_url
        - labels_url
        - comments_url
        - events_url
        - html_url
        - id
        - node_id
        - number
        - title
        - user
        - assignees
        - milestone
        - comments
        - created_at
        - updated_at
        - closed_at
        - author_association
        - active_lock_reason
        - body
      type: object
      properties:
        url:
          type: string
          format: uri
          description: URL for the issue
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
          format: uri-template
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        number:
          type: integer
        title:
          type: string
          description: Title of the issue
        user:
          $ref: "#/components/schemas/user"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/label"
        state:
          type: string
          enum:
            - open
            - closed
          description: State of the issue; either 'open' or 'closed'
        locked:
          type: boolean
        assignee:
          oneOf:
            - $ref: "#/components/schemas/user"
            - type: "null"
        assignees:
          type: array
          items:
            $ref: "#/components/schemas/user"
        milestone:
          oneOf:
            - $ref: "#/components/schemas/milestone"
            - type: "null"
        comments:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type:
            - string
            - "null"
          format: date-time
        author_association:
          $ref: "#/components/schemas/author_association"
        active_lock_reason:
          type:
            - string
            - "null"
          enum:
            - resolved
            - off-topic
            - too heated
            - spam
            - null
        performed_via_github_app:
          oneOf:
            - $ref: "#/components/schemas/app"
            - type: "null"
        pull_request:
          type: object
          properties:
            url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            diff_url:
              type: string
              format: uri
            patch_url:
              type: string
              format: uri
          additionalProperties: false
        body:
          type: string
          description: Contents of the issue
      additionalProperties: false
      title: Issue
    label:
      type: object
      required:
        - id
        - node_id
        - url
        - name
        - color
        - default
        - description
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          description: URL for the label
          type: string
          format: uri
        name:
          description: The name of the label.
          type: string
        description:
          type:
            - string
            - "null"
        color:
          description: "6-character hex code, without the leading #, identifying the color"
          type: string
        default:
          type: boolean
      additionalProperties: false
      title: Label
    license:
      type: object
      required:
        - key
        - name
        - spdx_id
        - url
        - node_id
      properties:
        key:
          type: string
        name:
          type: string
        spdx_id:
          type: string
        url:
          type:
            - string
            - "null"
          format: uri
        node_id:
          type: string
      additionalProperties: false
      title: License
    link:
      required:
        - href
      type: object
      properties:
        href:
          type: string
          format: uri-template
      additionalProperties: false
      title: Link
    marketplace-purchase:
      required:
        - account
        - billing_cycle
        - unit_count
        - on_free_trial
        - free_trial_ends_on
        - plan
      type: object
      properties:
        account:
          type: object
          required:
            - type
            - id
            - login
            - organization_billing_email
          properties:
            type:
              type: string
            id:
              type: integer
            login:
              type: string
            organization_billing_email:
              type: string
          additionalProperties: false
        billing_cycle:
          type: string
        unit_count:
          type: integer
        on_free_trial:
          type: boolean
        free_trial_ends_on:
          type: "null"
        next_billing_date:
          type: string
        plan:
          type: object
          required:
            - id
            - name
            - description
            - monthly_price_in_cents
            - yearly_price_in_cents
            - price_model
            - has_free_trial
            - unit_name
            - bullets
          properties:
            id:
              type: integer
            name:
              type: string
            description:
              type: string
            monthly_price_in_cents:
              type: integer
            yearly_price_in_cents:
              type: integer
            price_model:
              type: string
            has_free_trial:
              type: boolean
            unit_name:
              type:
                - string
                - "null"
            bullets:
              type: array
              items:
                type: string
          additionalProperties: false
      additionalProperties: false
      title: Marketplace Purchase
    membership:
      required:
        - url
        - state
        - role
        - organization_url
        - user
      type: object
      description: The membership between the user and the organization. Not present
        when the action is `member_invited`.
      properties:
        url:
          type: string
          format: uri
        state:
          type: string
        role:
          type: string
        organization_url:
          type: string
          format: uri
        user:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: Membership
    milestone:
      description: A collection of related issues and pull requests.
      required:
        - url
        - html_url
        - labels_url
        - id
        - node_id
        - number
        - title
        - description
        - creator
        - open_issues
        - closed_issues
        - state
        - created_at
        - updated_at
        - due_on
        - closed_at
      type: object
      properties:
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        labels_url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        number:
          type: integer
          description: The number of the milestone.
        title:
          type: string
          description: The title of the milestone.
        description:
          type:
            - string
            - "null"
        creator:
          $ref: "#/components/schemas/user"
        open_issues:
          type: integer
        closed_issues:
          type: integer
        state:
          type: string
          enum:
            - open
            - closed
          description: The state of the milestone.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        due_on:
          type:
            - string
            - "null"
          format: date-time
        closed_at:
          type:
            - string
            - "null"
          format: date-time
      additionalProperties: false
      title: Milestone
    organization:
      type: object
      required:
        - login
        - id
        - node_id
        - url
        - repos_url
        - events_url
        - hooks_url
        - issues_url
        - members_url
        - public_members_url
        - avatar_url
        - description
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        hooks_url:
          type: string
          format: uri
        issues_url:
          type: string
          format: uri
        members_url:
          type: string
          format: uri-template
        public_members_url:
          type: string
          format: uri-template
        avatar_url:
          type: string
          format: uri
        description:
          type:
            - string
            - "null"
      additionalProperties: false
      title: Organization
    project-card:
      required:
        - url
        - project_url
        - column_url
        - column_id
        - id
        - node_id
        - note
        - archived
        - creator
        - created_at
        - updated_at
      type: object
      properties:
        url:
          type: string
          format: uri
        project_url:
          type: string
          format: uri
        column_url:
          type: string
          format: uri
        column_id:
          type: integer
        id:
          type: integer
          description: The project card's ID
        node_id:
          type: string
        note:
          type:
            - string
            - "null"
        archived:
          type: boolean
          description: Whether or not the card is archived
        creator:
          $ref: "#/components/schemas/user"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        content_url:
          type: string
          format: uri
        after_id:
          type: "null"
      additionalProperties: false
      title: Project Card
    project-column:
      required:
        - url
        - project_url
        - cards_url
        - id
        - node_id
        - name
        - created_at
        - updated_at
      type: object
      properties:
        url:
          type: string
          format: uri
        project_url:
          type: string
          format: uri
        cards_url:
          type: string
          format: uri
        id:
          type: integer
          description: The unique identifier of the project column
        node_id:
          type: string
        name:
          type: string
          description: Name of the project column
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      additionalProperties: false
      title: Project Column
    project:
      required:
        - owner_url
        - url
        - html_url
        - columns_url
        - id
        - node_id
        - name
        - body
        - number
        - state
        - creator
        - created_at
        - updated_at
      type: object
      properties:
        owner_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        columns_url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
          description: Name of the project
        body:
          type:
            - string
            - "null"
          description: Body of the project
        number:
          type: integer
        state:
          type: string
          enum:
            - open
            - closed
          description: State of the project; either 'open' or 'closed'
        creator:
          $ref: "#/components/schemas/user"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      additionalProperties: false
      title: Project
    pull-request-review-comment:
      required:
        - url
        - pull_request_review_id
        - id
        - node_id
        - diff_hunk
        - path
        - position
        - original_position
        - commit_id
        - original_commit_id
        - user
        - body
        - created_at
        - updated_at
        - html_url
        - pull_request_url
        - author_association
        - _links
        - start_line
        - original_start_line
        - original_line
        - line
        - start_side
        - side
      type: object
      properties:
        url:
          type: string
          description: URL for the pull request review comment
          format: uri
        pull_request_review_id:
          type: integer
          description: The ID of the pull request review to which the comment belongs.
        id:
          type: integer
          description: The ID of the pull request review comment.
        node_id:
          type: string
          description: The node ID of the pull request review comment.
        diff_hunk:
          type: string
          description: The diff of the line that the comment refers to.
        path:
          type: string
          description: The relative path of the file to which the comment applies.
        position:
          type:
            - integer
            - "null"
          description: The line index in the diff to which the comment applies.
        original_position:
          type: integer
          description: The index of the original line in the diff to which the comment
            applies.
        commit_id:
          type: string
          description: The SHA of the commit to which the comment applies.
        original_commit_id:
          type: string
          description: The SHA of the original commit to which the comment applies.
        user:
          $ref: "#/components/schemas/user"
        body:
          type: string
          description: The text of the comment.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        html_url:
          type: string
          format: uri
          description: HTML URL for the pull request review comment.
        pull_request_url:
          type: string
          format: uri
          description: URL for the pull request that the review comment belongs to.
        author_association:
          $ref: "#/components/schemas/author_association"
        _links:
          type: object
          required:
            - self
            - html
            - pull_request
          properties:
            self:
              $ref: "#/components/schemas/link"
            html:
              $ref: "#/components/schemas/link"
            pull_request:
              $ref: "#/components/schemas/link"
          additionalProperties: false
        start_line:
          type:
            - integer
            - "null"
          description: The first line of the range for a multi-line comment.
        original_start_line:
          type:
            - integer
            - "null"
          description: The first line of the range for a multi-line comment.
        start_side:
          type:
            - string
            - "null"
          enum:
            - LEFT
            - RIGHT
            - null
          default: RIGHT
          description: The side of the first line of the range for a multi-line comment.
        line:
          type:
            - integer
            - "null"
          description: The line of the blob to which the comment applies. The last line of
            the range for a multi-line comment
        original_line:
          type: integer
          description: The line of the blob to which the comment applies. The last line of
            the range for a multi-line comment
        side:
          type: string
          enum:
            - LEFT
            - RIGHT
          description: The side of the first line of the range for a multi-line comment.
        in_reply_to_id:
          type: integer
          description: The comment ID to reply to.
      additionalProperties: false
      description: The
        [comment](https://docs.github.com/en/rest/reference/pulls#comments)
        itself.
      title: Pull Request Review Comment
    pull-request:
      required:
        - url
        - id
        - node_id
        - html_url
        - diff_url
        - patch_url
        - issue_url
        - number
        - state
        - locked
        - title
        - user
        - body
        - created_at
        - updated_at
        - closed_at
        - merged_at
        - merge_commit_sha
        - assignee
        - assignees
        - requested_reviewers
        - requested_teams
        - labels
        - milestone
        - commits_url
        - review_comments_url
        - review_comment_url
        - comments_url
        - statuses_url
        - head
        - base
        - _links
        - author_association
        - auto_merge
        - active_lock_reason
        - draft
        - merged
        - mergeable
        - rebaseable
        - mergeable_state
        - merged_by
        - comments
        - review_comments
        - maintainer_can_modify
        - commits
        - additions
        - deletions
        - changed_files
      type: object
      properties:
        url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        html_url:
          type: string
          format: uri
        diff_url:
          type: string
          format: uri
        patch_url:
          type: string
          format: uri
        issue_url:
          type: string
          format: uri
        number:
          type: integer
          description: Number uniquely identifying the pull request within its repository.
        state:
          type: string
          enum:
            - open
            - closed
          description: State of this Pull Request. Either `open` or `closed`.
        locked:
          type: boolean
        title:
          type: string
          description: The title of the pull request.
        user:
          $ref: "#/components/schemas/user"
        body:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type:
            - string
            - "null"
          format: date-time
        merged_at:
          type:
            - string
            - "null"
          format: date-time
        merge_commit_sha:
          type:
            - string
            - "null"
        assignee:
          oneOf:
            - $ref: "#/components/schemas/user"
            - type: "null"
        assignees:
          type: array
          items:
            $ref: "#/components/schemas/user"
        requested_reviewers:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/user"
              - $ref: "#/components/schemas/team"
        requested_teams:
          type: array
          items:
            $ref: "#/components/schemas/team"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/label"
        milestone:
          oneOf:
            - $ref: "#/components/schemas/milestone"
            - type: "null"
        commits_url:
          type: string
          format: uri
        review_comments_url:
          type: string
          format: uri
        review_comment_url:
          type: string
          format: uri-template
        comments_url:
          type: string
          format: uri
        statuses_url:
          type: string
          format: uri
        head:
          type: object
          required:
            - label
            - ref
            - sha
            - user
            - repo
          properties:
            label:
              type: string
            ref:
              type: string
            sha:
              type: string
            user:
              $ref: "#/components/schemas/user"
            repo:
              $ref: "#/components/schemas/repository"
          additionalProperties: false
        base:
          type: object
          required:
            - label
            - ref
            - sha
            - user
            - repo
          properties:
            label:
              type: string
            ref:
              type: string
            sha:
              type: string
            user:
              $ref: "#/components/schemas/user"
            repo:
              $ref: "#/components/schemas/repository"
          additionalProperties: false
        _links:
          type: object
          required:
            - self
            - html
            - issue
            - comments
            - review_comments
            - review_comment
            - commits
            - statuses
          properties:
            self:
              $ref: "#/components/schemas/link"
            html:
              $ref: "#/components/schemas/link"
            issue:
              $ref: "#/components/schemas/link"
            comments:
              $ref: "#/components/schemas/link"
            review_comments:
              $ref: "#/components/schemas/link"
            review_comment:
              $ref: "#/components/schemas/link"
            commits:
              $ref: "#/components/schemas/link"
            statuses:
              $ref: "#/components/schemas/link"
          additionalProperties: false
        author_association:
          $ref: "#/components/schemas/author_association"
        auto_merge:
          type: "null"
        active_lock_reason:
          type:
            - string
            - "null"
          enum:
            - resolved
            - off-topic
            - too heated
            - spam
            - null
        draft:
          type: boolean
          description: Indicates whether or not the pull request is a draft.
        merged:
          type:
            - boolean
            - "null"
        mergeable:
          type:
            - boolean
            - "null"
        rebaseable:
          type:
            - boolean
            - "null"
        mergeable_state:
          type: string
        merged_by:
          oneOf:
            - $ref: "#/components/schemas/user"
            - type: "null"
        comments:
          type: integer
        review_comments:
          type: integer
        maintainer_can_modify:
          type: boolean
          description: Indicates whether maintainers can modify the pull request.
        commits:
          type: integer
        additions:
          type: integer
        deletions:
          type: integer
        changed_files:
          type: integer
      additionalProperties: false
      title: Pull Request
    release-asset:
      description: Data related to a release.
      type: object
      required:
        - url
        - browser_download_url
        - id
        - node_id
        - name
        - label
        - state
        - content_type
        - size
        - download_count
        - created_at
        - updated_at
      properties:
        url:
          type: string
          format: uri
        browser_download_url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        name:
          description: The file name of the asset.
          type: string
        label:
          type: string
        state:
          description: State of the release asset.
          type: string
          enum:
            - uploaded
        content_type:
          type: string
        size:
          type: integer
        download_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        uploader:
          $ref: "#/components/schemas/user"
      additionalProperties: false
      title: Release Asset
    repo-ref:
      type: object
      required:
        - id
        - url
        - name
      properties:
        id:
          type: integer
        url:
          type: string
          format: uri
        name:
          type: string
      additionalProperties: false
      title: Repo Ref
    repository-lite:
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - node_id
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
      type: object
      properties:
        archive_url:
          type: string
          format: uri-template
        assignees_url:
          type: string
          format: uri-template
        blobs_url:
          type: string
          format: uri-template
        branches_url:
          type: string
          format: uri-template
        collaborators_url:
          type: string
          format: uri-template
        comments_url:
          type: string
          format: uri-template
        commits_url:
          type: string
          format: uri-template
        compare_url:
          type: string
          format: uri-template
        contents_url:
          type: string
          format: uri-template
        contributors_url:
          type: string
          format: uri
        deployments_url:
          type: string
          format: uri
        description:
          type:
            - string
            - "null"
        downloads_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        fork:
          type: boolean
        forks_url:
          type: string
          format: uri
        full_name:
          type: string
        git_commits_url:
          type: string
          format: uri-template
        git_refs_url:
          type: string
          format: uri-template
        git_tags_url:
          type: string
          format: uri-template
        hooks_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        id:
          type: integer
          description: Unique identifier of the repository
        issue_comment_url:
          type: string
          format: uri-template
        issue_events_url:
          type: string
          format: uri-template
        issues_url:
          type: string
          format: uri-template
        keys_url:
          type: string
          format: uri-template
        labels_url:
          type: string
          format: uri-template
        languages_url:
          type: string
          format: uri
        merges_url:
          type: string
          format: uri
        milestones_url:
          type: string
          format: uri-template
        name:
          type: string
          description: The name of the repository.
        node_id:
          type: string
        notifications_url:
          type: string
          format: uri-template
        owner:
          $ref: "#/components/schemas/user"
        private:
          type: boolean
          description: Whether the repository is private or public.
        pulls_url:
          type: string
          format: uri-template
        releases_url:
          type: string
          format: uri-template
        stargazers_url:
          type: string
          format: uri
        statuses_url:
          type: string
          format: uri-template
        subscribers_url:
          type: string
          format: uri
        subscription_url:
          type: string
          format: uri
        tags_url:
          type: string
          format: uri
        teams_url:
          type: string
          format: uri
        trees_url:
          type: string
          format: uri-template
        url:
          type: string
          format: uri
      additionalProperties: false
      title: Repository Lite
    repository:
      description: A git repository
      type: object
      required:
        - id
        - node_id
        - name
        - full_name
        - private
        - owner
        - html_url
        - description
        - fork
        - url
        - forks_url
        - keys_url
        - collaborators_url
        - teams_url
        - hooks_url
        - issue_events_url
        - events_url
        - assignees_url
        - branches_url
        - tags_url
        - blobs_url
        - git_tags_url
        - git_refs_url
        - trees_url
        - statuses_url
        - languages_url
        - stargazers_url
        - contributors_url
        - subscribers_url
        - subscription_url
        - commits_url
        - git_commits_url
        - comments_url
        - issue_comment_url
        - contents_url
        - compare_url
        - merges_url
        - archive_url
        - downloads_url
        - issues_url
        - pulls_url
        - milestones_url
        - notifications_url
        - labels_url
        - releases_url
        - deployments_url
        - created_at
        - updated_at
        - pushed_at
        - git_url
        - ssh_url
        - clone_url
        - svn_url
        - homepage
        - size
        - stargazers_count
        - watchers_count
        - language
        - has_issues
        - has_projects
        - has_downloads
        - has_wiki
        - has_pages
        - forks_count
        - mirror_url
        - archived
        - open_issues_count
        - license
        - forks
        - open_issues
        - watchers
        - default_branch
      properties:
        id:
          type: integer
          description: Unique identifier of the repository
        node_id:
          type: string
        name:
          type: string
          description: The name of the repository.
        full_name:
          type: string
        private:
          type: boolean
          description: Whether the repository is private or public.
        owner:
          $ref: "#/components/schemas/user"
        html_url:
          type: string
          format: uri
        description:
          type:
            - string
            - "null"
        fork:
          type: boolean
        url:
          type: string
          format: uri
        forks_url:
          type: string
          format: uri
        keys_url:
          type: string
          format: uri-template
        collaborators_url:
          type: string
          format: uri-template
        teams_url:
          type: string
          format: uri
        hooks_url:
          type: string
          format: uri
        issue_events_url:
          type: string
          format: uri-template
        events_url:
          type: string
          format: uri
        assignees_url:
          type: string
          format: uri-template
        branches_url:
          type: string
          format: uri-template
        tags_url:
          type: string
          format: uri
        blobs_url:
          type: string
          format: uri-template
        git_tags_url:
          type: string
          format: uri-template
        git_refs_url:
          type: string
          format: uri-template
        trees_url:
          type: string
          format: uri-template
        statuses_url:
          type: string
          format: uri-template
        languages_url:
          type: string
          format: uri
        stargazers_url:
          type: string
          format: uri
        contributors_url:
          type: string
          format: uri
        subscribers_url:
          type: string
          format: uri
        subscription_url:
          type: string
          format: uri
        commits_url:
          type: string
          format: uri-template
        git_commits_url:
          type: string
          format: uri-template
        comments_url:
          type: string
          format: uri-template
        issue_comment_url:
          type: string
          format: uri-template
        contents_url:
          type: string
          format: uri-template
        compare_url:
          type: string
          format: uri-template
        merges_url:
          type: string
          format: uri
        archive_url:
          type: string
          format: uri-template
        downloads_url:
          type: string
          format: uri
        issues_url:
          type: string
          format: uri-template
        pulls_url:
          type: string
          format: uri-template
        milestones_url:
          type: string
          format: uri-template
        notifications_url:
          type: string
          format: uri-template
        labels_url:
          type: string
          format: uri-template
        releases_url:
          type: string
          format: uri-template
        deployments_url:
          type: string
          format: uri
        created_at:
          oneOf:
            - type: integer
            - type: string
              format: date-time
        updated_at:
          type: string
          format: date-time
        pushed_at:
          oneOf:
            - type: integer
            - type: string
              format: date-time
            - type: "null"
        git_url:
          type: string
          format: uri
        ssh_url:
          type: string
        clone_url:
          type: string
          format: uri
        svn_url:
          type: string
          format: uri
        homepage:
          type:
            - string
            - "null"
        size:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        language:
          type:
            - string
            - "null"
        has_issues:
          type: boolean
          description: Whether issues are enabled.
          default: true
        has_projects:
          type: boolean
          description: Whether projects are enabled.
          default: true
        has_downloads:
          type: boolean
          description: Whether downloads are enabled.
          default: true
        has_wiki:
          type: boolean
          description: Whether the wiki is enabled.
          default: true
        has_pages:
          type: boolean
        forks_count:
          type: integer
        mirror_url:
          type:
            - string
            - "null"
          format: uri
        archived:
          type: boolean
          description: Whether the repository is archived.
          default: false
        disabled:
          type: boolean
          description: Returns whether or not this repository is disabled.
        open_issues_count:
          type: integer
        license:
          oneOf:
            - $ref: "#/components/schemas/license"
            - type: "null"
        forks:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        stargazers:
          type: integer
        default_branch:
          type: string
          description: The default branch of the repository.
        allow_squash_merge:
          type: boolean
          description: Whether to allow squash merges for pull requests.
          default: true
        allow_merge_commit:
          type: boolean
          description: Whether to allow merge commits for pull requests.
          default: true
        allow_rebase_merge:
          type: boolean
          description: Whether to allow rebase merges for pull requests.
          default: true
        delete_branch_on_merge:
          type: boolean
          description: Whether to delete head branches when pull requests are merged
          default: false
        master_branch:
          type: string
        permissions:
          type: object
          required:
            - pull
            - push
            - admin
          properties:
            pull:
              type: boolean
            push:
              type: boolean
            admin:
              type: boolean
            maintain:
              type: boolean
            triage:
              type: boolean
          additionalProperties: false
        public:
          type: boolean
        organization:
          type: string
      additionalProperties: false
      title: Repository
    simple-pull-request:
      required:
        - url
        - id
        - node_id
        - html_url
        - diff_url
        - patch_url
        - issue_url
        - number
        - state
        - locked
        - title
        - user
        - body
        - created_at
        - updated_at
        - closed_at
        - merged_at
        - merge_commit_sha
        - assignee
        - assignees
        - requested_reviewers
        - requested_teams
        - labels
        - milestone
        - draft
        - commits_url
        - review_comments_url
        - review_comment_url
        - comments_url
        - statuses_url
        - head
        - base
        - _links
        - author_association
        - auto_merge
        - active_lock_reason
      type: object
      properties:
        url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        html_url:
          type: string
          format: uri
        diff_url:
          type: string
          format: uri
        patch_url:
          type: string
          format: uri
        issue_url:
          type: string
          format: uri
        number:
          type: integer
        state:
          type: string
          enum:
            - open
            - closed
        locked:
          type: boolean
        title:
          type: string
        user:
          $ref: "#/components/schemas/user"
        body:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        closed_at:
          type:
            - string
            - "null"
        merged_at:
          type:
            - string
            - "null"
        merge_commit_sha:
          type:
            - string
            - "null"
        assignee:
          oneOf:
            - $ref: "#/components/schemas/user"
            - type: "null"
        assignees:
          type: array
          items:
            $ref: "#/components/schemas/user"
        requested_reviewers:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/user"
              - $ref: "#/components/schemas/team"
        requested_teams:
          type: array
          items:
            $ref: "#/components/schemas/team"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/label"
        milestone:
          oneOf:
            - $ref: "#/components/schemas/milestone"
            - type: "null"
        draft:
          type: boolean
        commits_url:
          type: string
          format: uri
        review_comments_url:
          type: string
          format: uri
        review_comment_url:
          type: string
          format: uri-template
        comments_url:
          type: string
          format: uri
        statuses_url:
          type: string
          format: uri
        head:
          type: object
          required:
            - label
            - ref
            - sha
            - user
            - repo
          properties:
            label:
              type: string
            ref:
              type: string
            sha:
              type: string
            user:
              $ref: "#/components/schemas/user"
            repo:
              $ref: "#/components/schemas/repository"
          additionalProperties: false
        base:
          type: object
          required:
            - label
            - ref
            - sha
            - user
            - repo
          properties:
            label:
              type: string
            ref:
              type: string
            sha:
              type: string
            user:
              $ref: "#/components/schemas/user"
            repo:
              $ref: "#/components/schemas/repository"
          additionalProperties: false
        _links:
          type: object
          required:
            - self
            - html
            - issue
            - comments
            - review_comments
            - review_comment
            - commits
            - statuses
          properties:
            self:
              $ref: "#/components/schemas/link"
            html:
              $ref: "#/components/schemas/link"
            issue:
              $ref: "#/components/schemas/link"
            comments:
              $ref: "#/components/schemas/link"
            review_comments:
              $ref: "#/components/schemas/link"
            review_comment:
              $ref: "#/components/schemas/link"
            commits:
              $ref: "#/components/schemas/link"
            statuses:
              $ref: "#/components/schemas/link"
          additionalProperties: false
        author_association:
          $ref: "#/components/schemas/author_association"
        auto_merge:
          type: "null"
        active_lock_reason:
          type:
            - string
            - "null"
          enum:
            - resolved
            - off-topic
            - too heated
            - spam
            - null
      additionalProperties: false
      title: Simple Pull Request
    sponsorship-tier:
      description: The `tier_changed` and `pending_tier_change` will include the
        original tier before the change or pending change. For more information,
        see the pending tier change payload.
      required:
        - node_id
        - created_at
        - description
        - monthly_price_in_cents
        - monthly_price_in_dollars
        - name
        - is_one_time
        - is_custom_ammount
      type: object
      properties:
        node_id:
          type: string
        created_at:
          type: string
        description:
          type: string
        monthly_price_in_cents:
          type: integer
        monthly_price_in_dollars:
          type: integer
        name:
          type: string
        is_one_time:
          type: boolean
        is_custom_ammount:
          type: boolean
      additionalProperties: false
      title: Sponsorship Tier
    team:
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      required:
        - name
        - id
        - node_id
        - slug
        - description
        - privacy
        - url
        - html_url
        - members_url
        - repositories_url
        - permission
      properties:
        name:
          type: string
          description: Name of the team
        id:
          type: integer
          description: Unique identifier of the team
        node_id:
          type: string
        slug:
          type: string
        description:
          type:
            - string
            - "null"
          description: Description of the team
        privacy:
          type: string
          enum:
            - open
            - closed
            - secret
        url:
          type: string
          format: uri
          description: URL for the team
        html_url:
          type: string
          format: uri
        members_url:
          type: string
          format: uri-template
        repositories_url:
          type: string
          format: uri
        permission:
          type: string
          description: Permission that the team will have for its repositories
        parent:
          type:
            - object
            - "null"
          required:
            - name
            - id
            - node_id
            - slug
            - description
            - privacy
            - url
            - html_url
            - members_url
            - repositories_url
            - permission
          properties:
            name:
              type: string
              description: Name of the team
            id:
              type: integer
              description: Unique identifier of the team
            node_id:
              type: string
            slug:
              type: string
            description:
              type:
                - string
                - "null"
              description: Description of the team
            privacy:
              type: string
              enum:
                - open
                - closed
                - secret
            url:
              type: string
              format: uri
              description: URL for the team
            html_url:
              type: string
              format: uri
            members_url:
              type: string
              format: uri-template
            repositories_url:
              type: string
              format: uri
            permission:
              type: string
              description: Permission that the team will have for its repositories
          additionalProperties: false
      additionalProperties: false
      title: Team
    user:
      type: object
      required:
        - login
        - id
        - node_id
        - avatar_url
        - gravatar_id
        - url
        - html_url
        - followers_url
        - following_url
        - gists_url
        - starred_url
        - subscriptions_url
        - organizations_url
        - repos_url
        - events_url
        - received_events_url
        - type
        - site_admin
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        email:
          type:
            - string
            - "null"
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        following_url:
          type: string
          format: uri-template
        gists_url:
          type: string
          format: uri-template
        starred_url:
          type: string
          format: uri-template
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri-template
        received_events_url:
          type: string
          format: uri
        type:
          type: string
          enum:
            - Bot
            - User
            - Organization
        site_admin:
          type: boolean
      additionalProperties: false
      title: User
    workflow-run:
      required:
        - artifacts_url
        - cancel_url
        - check_suite_url
        - check_suite_id
        - check_suite_node_id
        - conclusion
        - created_at
        - event
        - head_branch
        - head_commit
        - head_repository
        - head_sha
        - html_url
        - id
        - jobs_url
        - logs_url
        - node_id
        - name
        - pull_requests
        - repository
        - rerun_url
        - run_number
        - status
        - updated_at
        - url
        - workflow_id
        - workflow_url
      type: object
      properties:
        artifacts_url:
          type: string
          format: uri
        cancel_url:
          type: string
          format: uri
        check_suite_url:
          type: string
          format: uri
        check_suite_id:
          type: integer
        check_suite_node_id:
          type: string
        conclusion:
          type:
            - string
            - "null"
        created_at:
          type: string
          format: date-time
        event:
          type: string
        head_branch:
          type: string
        head_commit:
          $ref: "#/components/schemas/commit-simple"
        head_repository:
          $ref: "#/components/schemas/repository-lite"
        head_sha:
          type: string
        html_url:
          type: string
          format: uri
        id:
          type: integer
        jobs_url:
          type: string
          format: uri
        logs_url:
          type: string
          format: uri
        node_id:
          type: string
        name:
          type: string
        pull_requests:
          type: array
          items:
            $ref: "#/components/schemas/pull-request"
        repository:
          $ref: "#/components/schemas/repository-lite"
        rerun_url:
          type: string
          format: uri
        run_number:
          type: integer
        status:
          type: string
        updated_at:
          type: string
          format: date-time
        url:
          type: string
          format: uri
        workflow_id:
          type: integer
        workflow_url:
          type: string
          format: uri
      additionalProperties: false
      title: Workflow Run
    workflow:
      required:
        - badge_url
        - created_at
        - html_url
        - id
        - name
        - node_id
        - path
        - state
        - updated_at
        - url
      type: object
      properties:
        badge_url:
          type: string
          format: uri
        created_at:
          type: string
        html_url:
          type: string
          format: uri
        id:
          type: integer
        name:
          type: string
        node_id:
          type: string
        path:
          type: string
        state:
          type: string
        updated_at:
          type: string
        url:
          type: string
          format: uri
      additionalProperties: false
      title: Workflow
webhooks:
  check_run:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/check_run_event"
      responses:
        "200":
          description: foo
  check_suite:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/check_suite_event"
      responses:
        "200":
          description: foo
  code_scanning_alert:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/code_scanning_alert_event"
      responses:
        "200":
          description: foo
  commit_comment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/commit_comment_event"
      responses:
        "200":
          description: foo
  content_reference:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/content_reference_event"
      responses:
        "200":
          description: foo
  create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create$event"
      responses:
        "200":
          description: foo
  delete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/delete$event"
      responses:
        "200":
          description: foo
  deploy_key:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deploy_key_event"
      responses:
        "200":
          description: foo
  deployment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deployment_event"
      responses:
        "200":
          description: foo
  deployment_status:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deployment_status_event"
      responses:
        "200":
          description: foo
  discussion:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/discussion_event"
      responses:
        "200":
          description: foo
  discussion_comment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/discussion_comment_event"
      responses:
        "200":
          description: foo
  fork:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/fork$event"
      responses:
        "200":
          description: foo
  github_app_authorization:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/github_app_authorization_event"
      responses:
        "200":
          description: foo
  gollum:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gollum$event"
      responses:
        "200":
          description: foo
  installation:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/installation_event"
      responses:
        "200":
          description: foo
  installation_repositories:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/installation_repositories_event"
      responses:
        "200":
          description: foo
  issue_comment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/issue_comment_event"
      responses:
        "200":
          description: foo
  issues:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/issues_event"
      responses:
        "200":
          description: foo
  label:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/label_event"
      responses:
        "200":
          description: foo
  marketplace_purchase:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/marketplace_purchase_event"
      responses:
        "200":
          description: foo
  member:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/member_event"
      responses:
        "200":
          description: foo
  membership:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/membership_event"
      responses:
        "200":
          description: foo
  meta:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/meta_event"
      responses:
        "200":
          description: foo
  milestone:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/milestone_event"
      responses:
        "200":
          description: foo
  org_block:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/org_block_event"
      responses:
        "200":
          description: foo
  organization:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/organization_event"
      responses:
        "200":
          description: foo
  package:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/package_event"
      responses:
        "200":
          description: foo
  page_build:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/page_build$event"
      responses:
        "200":
          description: foo
  ping:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ping$event"
      responses:
        "200":
          description: foo
  project:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/project_event"
      responses:
        "200":
          description: foo
  project_card:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/project_card_event"
      responses:
        "200":
          description: foo
  project_column:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/project_column_event"
      responses:
        "200":
          description: foo
  public:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/public$event"
      responses:
        "200":
          description: foo
  pull_request:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pull_request_event"
      responses:
        "200":
          description: foo
  pull_request_review:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pull_request_review_event"
      responses:
        "200":
          description: foo
  pull_request_review_comment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pull_request_review_comment_event"
      responses:
        "200":
          description: foo
  push:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/push$event"
      responses:
        "200":
          description: foo
  release:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/release_event"
      responses:
        "200":
          description: foo
  repository:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/repository_event"
      responses:
        "200":
          description: foo
  repository_dispatch:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/repository_dispatch_event"
      responses:
        "200":
          description: foo
  repository_import:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/repository_import$event"
      responses:
        "200":
          description: foo
  repository_vulnerability_alert:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/repository_vulnerability_alert_event"
      responses:
        "200":
          description: foo
  secret_scanning_alert:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/secret_scanning_alert_event"
      responses:
        "200":
          description: foo
  security_advisory:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/security_advisory_event"
      responses:
        "200":
          description: foo
  sponsorship:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sponsorship_event"
      responses:
        "200":
          description: foo
  star:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/star_event"
      responses:
        "200":
          description: foo
  status:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/status$event"
      responses:
        "200":
          description: foo
  team:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/team_event"
      responses:
        "200":
          description: foo
  team_add:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/team_add$event"
      responses:
        "200":
          description: foo
  watch:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/watch_event"
      responses:
        "200":
          description: foo
  workflow_dispatch:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/workflow_dispatch$event"
      responses:
        "200":
          description: foo
  workflow_run:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/workflow_run_event"
      responses:
        "200":
          description: foo
